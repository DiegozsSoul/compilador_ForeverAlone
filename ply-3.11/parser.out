Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    CTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA agregarfuncmain ID SEMICOL programab
Rule 2     programab -> vars funcion programac
Rule 3     programab -> programac
Rule 4     programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque endpro
Rule 5     endpro -> empty
Rule 6     prinn -> empty
Rule 7     agregarfuncmain2 -> <empty>
Rule 8     agregarfuncmain -> <empty>
Rule 9     id -> ID agregavar
Rule 10    id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2
Rule 11    arreglo -> empty
Rule 12    arreglo2 -> empty
Rule 13    tipovar -> INT agregatipo
Rule 14    tipovar -> FLOAT agregatipo
Rule 15    tipovar -> CHAR agregatipo
Rule 16    tipovarfunc -> INT agregatipo
Rule 17    tipovarfunc -> FLOAT agregatipo
Rule 18    tipovarfunc -> CHAR agregatipo
Rule 19    tipofun -> INT
Rule 20    tipofun -> FLOAT
Rule 21    tipofun -> CHAR
Rule 22    tipofun -> VOID
Rule 23    agregatipo -> <empty>
Rule 24    vars -> VAR varsb
Rule 25    varsb -> tipovar varsc
Rule 26    varsb -> contVReset empty
Rule 27    varsc -> id COMMA varsc
Rule 28    varsc -> id SEMICOL varsb
Rule 29    varsc -> empty
Rule 30    contVReset -> empty
Rule 31    varsfunc -> tipovarfunc varsfuncb
Rule 32    varsfuncb -> id COMMA varsfuncb
Rule 33    varsfuncb -> varsfunc
Rule 34    varsfuncb -> id
Rule 35    funcion -> FUNCION aux2 ID LPAREN funcionb
Rule 36    funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
Rule 37    funcion -> empty
Rule 38    aux2 -> empty
Rule 39    agregafunc -> empty
Rule 40    funcionb -> RPAREN testeru funcionc
Rule 41    funcionb -> varsfunc RPAREN testeru funcionc
Rule 42    testeru -> empty
Rule 43    funcionc -> vars agregacont bloque reinicio funcion
Rule 44    funcionc -> agregacont bloque reinicio funcion
Rule 45    funcionc -> empty
Rule 46    agregacont -> empty
Rule 47    reinicio -> empty
Rule 48    bloque -> LBRACKET estatuto bloqueb
Rule 49    bloque -> LBRACKET RBRACKET
Rule 50    bloqueb -> RBRACKET helper
Rule 51    bloqueb -> estatuto bloqueb
Rule 52    helper -> empty
Rule 53    asign -> LBRACK arrn expresion arrn2 RBRACK arrn3
Rule 54    asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3
Rule 55    asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3
Rule 56    arrn -> empty
Rule 57    arrn2 -> empty
Rule 58    arrn3 -> empty
Rule 59    asignacion -> ID EQUAL asignacionb
Rule 60    asignacion -> ID asign EQUAL asignacionb
Rule 61    asignacionb -> expresion SEMICOL
Rule 62    asignacionb -> ID asign SEMICOL
Rule 63    retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL
Rule 64    retn -> empty
Rule 65    funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
Rule 66    funcionvoidb -> COMMA expresion fnvn2 funcionvoidb
Rule 67    funcionvoidb -> RPAREN fnvn3 SEMICOL
Rule 68    fnvn1 -> empty
Rule 69    fnvn2 -> empty
Rule 70    fnvn3 -> empty
Rule 71    lee -> LEE LPAREN id leeb
Rule 72    leeb -> RPAREN leen SEMICOL
Rule 73    leeb -> COMMA leen id leeb
Rule 74    leen -> empty
Rule 75    escritura -> ESCRIBE LPAREN expresion prin1 escriturab
Rule 76    escriturab -> COMMA expresion prin1 escriturab
Rule 77    escriturab -> RPAREN SEMICOL
Rule 78    prin1 -> empty
Rule 79    decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
Rule 80    pn1 -> empty
Rule 81    decisionb -> bloque pn2
Rule 82    decisionb -> bloque SINO pn3 bloque pn2
Rule 83    pn2 -> empty
Rule 84    pn3 -> empty
Rule 85    repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
Rule 86    rcn1 -> empty
Rule 87    rcn2 -> empty
Rule 88    rcn3 -> empty
Rule 89    repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2
Rule 90    asignacioncond -> ID EQUAL asignacioncondb
Rule 91    asignacioncond -> ID asign EQUAL asignacioncondb
Rule 92    repnoconn -> empty
Rule 93    repnoconn2 -> empty
Rule 94    asignacioncondb -> exp
Rule 95    asignacioncondb -> ID asign
Rule 96    cte -> ID
Rule 97    cte -> NUMBER saveconst
Rule 98    cte -> CTEF saveconst
Rule 99    cte -> CTEC
Rule 100   cte -> STRING savestringconst
Rule 101   saveconst -> empty
Rule 102   savestringconst -> empty
Rule 103   expresion -> exp
Rule 104   expresion -> exp GTHAN exp
Rule 105   expresion -> exp LTHAN exp
Rule 106   expresion -> exp EQLOP exp
Rule 107   expresion -> exp GEQUAL exp
Rule 108   expresion -> exp LEQUAL exp
Rule 109   expresion -> exp ABRACKET exp
Rule 110   exp -> termino
Rule 111   exp -> termino expb
Rule 112   expb -> PLUS exp
Rule 113   expb -> MINUS exp
Rule 114   termino -> factor
Rule 115   termino -> factor terminob
Rule 116   terminob -> TIMES termino
Rule 117   terminob -> DIVIDE termino
Rule 118   factor -> LPAREN expresion RPAREN
Rule 119   factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
Rule 120   factor -> PLUS cte
Rule 121   factor -> MINUS cte
Rule 122   factor -> cte
Rule 123   factor -> ID asign
Rule 124   llamadafun -> empty
Rule 125   llamadafun2 -> empty
Rule 126   llamadafun3 -> empty
Rule 127   estatuto -> asignacion
Rule 128   estatuto -> funcionvoid
Rule 129   estatuto -> retorno
Rule 130   estatuto -> lee
Rule 131   estatuto -> escritura
Rule 132   estatuto -> decision
Rule 133   estatuto -> repeticioncond
Rule 134   estatuto -> repeticionnocond
Rule 135   estatuto -> expresion
Rule 136   empty -> <empty>
Rule 137   agregavar -> <empty>

Terminals, with rules where they appear

ABRACKET             : 109
CHAR                 : 15 18 21
COLON                : 
COMMA                : 27 32 66 73 76
COMMENT              : 
CTEC                 : 55 99
CTEF                 : 98
CTEI                 : 54
CTES                 : 
DESDE                : 89
DIVIDE               : 117
ENTONCES             : 79
EQLOP                : 106
EQUAL                : 59 60 90 91
ESCRIBE              : 75
FLOAT                : 14 17 20
FUNCION              : 35 36
GEQUAL               : 107
GTHAN                : 104
HACER                : 89
HASTA                : 89
HAZ                  : 85
ID                   : 1 9 10 35 36 59 60 62 65 90 91 95 96 119 123
INT                  : 13 16 19
LBRACK               : 10 53 54 55
LBRACKET             : 48 49
LEE                  : 71
LEQUAL               : 108
LPAREN               : 4 35 36 63 65 71 75 79 85 118 119
LTHAN                : 105
MIENTRAS             : 85
MINUS                : 113 121
NUMBER               : 97
PLUS                 : 112 120
PRINCIPAL            : 4
PROGRAMA             : 1
RBRACK               : 10 53 54 55
RBRACKET             : 49 50
REGRESA              : 63
RPAREN               : 4 40 41 63 67 72 77 79 85 118 119
SEMICOL              : 1 28 61 62 63 67 72 77
SI                   : 79
SINO                 : 82
STRING               : 100
TIMES                : 116
VAR                  : 24
VOID                 : 22
error                : 

Nonterminals, with rules where they appear

agregacont           : 43 44
agregafunc           : 36
agregarfuncmain      : 1
agregarfuncmain2     : 4
agregatipo           : 13 14 15 16 17 18
agregavar            : 9 10
arreglo              : 10
arreglo2             : 10
arrn                 : 53 54 55
arrn2                : 53 54 55
arrn3                : 53 54 55
asign                : 60 62 91 95 123
asignacion           : 127
asignacionb          : 59 60
asignacioncond       : 89
asignacioncondb      : 90 91
aux2                 : 35 36
bloque               : 4 43 44 81 82 82 85 89
bloqueb              : 48 51
contVReset           : 26
cte                  : 10 120 121 122
decision             : 132
decisionb            : 79
empty                : 5 6 11 12 26 29 30 37 38 39 42 45 46 47 52 56 57 58 64 68 69 70 74 78 80 83 84 86 87 88 92 93 101 102 124 125 126
endpro               : 4
escritura            : 131
escriturab           : 75 76
estatuto             : 48 51
exp                  : 89 94 103 104 104 105 105 106 106 107 107 108 108 109 109 112 113
expb                 : 111
expresion            : 53 61 63 65 66 75 76 79 85 118 119 135
factor               : 114 115
fnvn1                : 65
fnvn2                : 65 66
fnvn3                : 67
funcion              : 2 43 44
funcionb             : 35 36
funcionc             : 40 41
funcionvoid          : 128
funcionvoidb         : 65 66
helper               : 50
id                   : 27 28 32 34 71 73
lee                  : 130
leeb                 : 71 73
leen                 : 72 73
llamadafun           : 119
llamadafun2          : 119
llamadafun3          : 119
pn1                  : 79
pn2                  : 81 82
pn3                  : 82
prin1                : 75 76
prinn                : 4
programa             : 0
programab            : 1
programac            : 2 3
rcn1                 : 85
rcn2                 : 85
rcn3                 : 85
reinicio             : 43 44
repeticioncond       : 133
repeticionnocond     : 134
repnoconn            : 89
repnoconn2           : 89
retn                 : 63
retorno              : 129
saveconst            : 97 98
savestringconst      : 100
termino              : 110 111 116 117
terminob             : 115
testeru              : 40 41
tipofun              : 36
tipovar              : 25
tipovarfunc          : 31
vars                 : 2 43
varsb                : 24 28
varsc                : 25 27
varsfunc             : 33 41
varsfuncb            : 31 32

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA agregarfuncmain ID SEMICOL programab

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . agregarfuncmain ID SEMICOL programab
    (8) agregarfuncmain -> .

    ID              reduce using rule 8 (agregarfuncmain -> .)

    agregarfuncmain                shift and go to state 3

state 3

    (1) programa -> PROGRAMA agregarfuncmain . ID SEMICOL programab

    ID              shift and go to state 4


state 4

    (1) programa -> PROGRAMA agregarfuncmain ID . SEMICOL programab

    SEMICOL         shift and go to state 5


state 5

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL . programab
    (2) programab -> . vars funcion programac
    (3) programab -> . programac
    (24) vars -> . VAR varsb
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque endpro

    VAR             shift and go to state 9
    PRINCIPAL       shift and go to state 10

    programab                      shift and go to state 6
    vars                           shift and go to state 7
    programac                      shift and go to state 8

state 6

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .

    $end            reduce using rule 1 (programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .)


state 7

    (2) programab -> vars . funcion programac
    (35) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (36) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (37) funcion -> . empty
    (136) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 136 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (3) programab -> programac .

    $end            reduce using rule 3 (programab -> programac .)


state 9

    (24) vars -> VAR . varsb
    (25) varsb -> . tipovar varsc
    (26) varsb -> . contVReset empty
    (13) tipovar -> . INT agregatipo
    (14) tipovar -> . FLOAT agregatipo
    (15) tipovar -> . CHAR agregatipo
    (30) contVReset -> . empty
    (136) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    varsb                          shift and go to state 14
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 10

    (4) programac -> PRINCIPAL . agregarfuncmain2 LPAREN RPAREN prinn bloque endpro
    (7) agregarfuncmain2 -> .

    LPAREN          reduce using rule 7 (agregarfuncmain2 -> .)

    agregarfuncmain2               shift and go to state 21

state 11

    (2) programab -> vars funcion . programac
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque endpro

    PRINCIPAL       shift and go to state 10

    programac                      shift and go to state 22

state 12

    (35) funcion -> FUNCION . aux2 ID LPAREN funcionb
    (36) funcion -> FUNCION . aux2 tipofun ID agregafunc LPAREN funcionb
    (38) aux2 -> . empty
    (136) empty -> .

    ID              reduce using rule 136 (empty -> .)
    INT             reduce using rule 136 (empty -> .)
    FLOAT           reduce using rule 136 (empty -> .)
    CHAR            reduce using rule 136 (empty -> .)
    VOID            reduce using rule 136 (empty -> .)

    aux2                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (37) funcion -> empty .

    PRINCIPAL       reduce using rule 37 (funcion -> empty .)


state 14

    (24) vars -> VAR varsb .

    FUNCION         reduce using rule 24 (vars -> VAR varsb .)
    PRINCIPAL       reduce using rule 24 (vars -> VAR varsb .)
    LBRACKET        reduce using rule 24 (vars -> VAR varsb .)


state 15

    (25) varsb -> tipovar . varsc
    (27) varsc -> . id COMMA varsc
    (28) varsc -> . id SEMICOL varsb
    (29) varsc -> . empty
    (9) id -> . ID agregavar
    (10) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (136) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    varsc                          shift and go to state 25
    id                             shift and go to state 26
    empty                          shift and go to state 27

state 16

    (26) varsb -> contVReset . empty
    (136) empty -> .

    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    empty                          shift and go to state 29

state 17

    (30) contVReset -> empty .

    FUNCION         reduce using rule 30 (contVReset -> empty .)
    PRINCIPAL       reduce using rule 30 (contVReset -> empty .)
    LBRACKET        reduce using rule 30 (contVReset -> empty .)


state 18

    (13) tipovar -> INT . agregatipo
    (23) agregatipo -> .

    ID              reduce using rule 23 (agregatipo -> .)
    FUNCION         reduce using rule 23 (agregatipo -> .)
    PRINCIPAL       reduce using rule 23 (agregatipo -> .)
    LBRACKET        reduce using rule 23 (agregatipo -> .)

    agregatipo                     shift and go to state 30

state 19

    (14) tipovar -> FLOAT . agregatipo
    (23) agregatipo -> .

    ID              reduce using rule 23 (agregatipo -> .)
    FUNCION         reduce using rule 23 (agregatipo -> .)
    PRINCIPAL       reduce using rule 23 (agregatipo -> .)
    LBRACKET        reduce using rule 23 (agregatipo -> .)

    agregatipo                     shift and go to state 31

state 20

    (15) tipovar -> CHAR . agregatipo
    (23) agregatipo -> .

    ID              reduce using rule 23 (agregatipo -> .)
    FUNCION         reduce using rule 23 (agregatipo -> .)
    PRINCIPAL       reduce using rule 23 (agregatipo -> .)
    LBRACKET        reduce using rule 23 (agregatipo -> .)

    agregatipo                     shift and go to state 32

state 21

    (4) programac -> PRINCIPAL agregarfuncmain2 . LPAREN RPAREN prinn bloque endpro

    LPAREN          shift and go to state 33


state 22

    (2) programab -> vars funcion programac .

    $end            reduce using rule 2 (programab -> vars funcion programac .)


state 23

    (35) funcion -> FUNCION aux2 . ID LPAREN funcionb
    (36) funcion -> FUNCION aux2 . tipofun ID agregafunc LPAREN funcionb
    (19) tipofun -> . INT
    (20) tipofun -> . FLOAT
    (21) tipofun -> . CHAR
    (22) tipofun -> . VOID

    ID              shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    VOID            shift and go to state 39

    tipofun                        shift and go to state 35

state 24

    (38) aux2 -> empty .

    ID              reduce using rule 38 (aux2 -> empty .)
    INT             reduce using rule 38 (aux2 -> empty .)
    FLOAT           reduce using rule 38 (aux2 -> empty .)
    CHAR            reduce using rule 38 (aux2 -> empty .)
    VOID            reduce using rule 38 (aux2 -> empty .)


state 25

    (25) varsb -> tipovar varsc .

    FUNCION         reduce using rule 25 (varsb -> tipovar varsc .)
    PRINCIPAL       reduce using rule 25 (varsb -> tipovar varsc .)
    LBRACKET        reduce using rule 25 (varsb -> tipovar varsc .)


state 26

    (27) varsc -> id . COMMA varsc
    (28) varsc -> id . SEMICOL varsb

    COMMA           shift and go to state 40
    SEMICOL         shift and go to state 41


state 27

    (29) varsc -> empty .

    FUNCION         reduce using rule 29 (varsc -> empty .)
    PRINCIPAL       reduce using rule 29 (varsc -> empty .)
    LBRACKET        reduce using rule 29 (varsc -> empty .)


state 28

    (9) id -> ID . agregavar
    (10) id -> ID . agregavar LBRACK arreglo cte RBRACK arreglo2
    (137) agregavar -> .

    LBRACK          reduce using rule 137 (agregavar -> .)
    COMMA           reduce using rule 137 (agregavar -> .)
    SEMICOL         reduce using rule 137 (agregavar -> .)
    RPAREN          reduce using rule 137 (agregavar -> .)

    agregavar                      shift and go to state 42

state 29

    (26) varsb -> contVReset empty .

    FUNCION         reduce using rule 26 (varsb -> contVReset empty .)
    PRINCIPAL       reduce using rule 26 (varsb -> contVReset empty .)
    LBRACKET        reduce using rule 26 (varsb -> contVReset empty .)


state 30

    (13) tipovar -> INT agregatipo .

    ID              reduce using rule 13 (tipovar -> INT agregatipo .)
    FUNCION         reduce using rule 13 (tipovar -> INT agregatipo .)
    PRINCIPAL       reduce using rule 13 (tipovar -> INT agregatipo .)
    LBRACKET        reduce using rule 13 (tipovar -> INT agregatipo .)


state 31

    (14) tipovar -> FLOAT agregatipo .

    ID              reduce using rule 14 (tipovar -> FLOAT agregatipo .)
    FUNCION         reduce using rule 14 (tipovar -> FLOAT agregatipo .)
    PRINCIPAL       reduce using rule 14 (tipovar -> FLOAT agregatipo .)
    LBRACKET        reduce using rule 14 (tipovar -> FLOAT agregatipo .)


state 32

    (15) tipovar -> CHAR agregatipo .

    ID              reduce using rule 15 (tipovar -> CHAR agregatipo .)
    FUNCION         reduce using rule 15 (tipovar -> CHAR agregatipo .)
    PRINCIPAL       reduce using rule 15 (tipovar -> CHAR agregatipo .)
    LBRACKET        reduce using rule 15 (tipovar -> CHAR agregatipo .)


state 33

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN . RPAREN prinn bloque endpro

    RPAREN          shift and go to state 43


state 34

    (35) funcion -> FUNCION aux2 ID . LPAREN funcionb

    LPAREN          shift and go to state 44


state 35

    (36) funcion -> FUNCION aux2 tipofun . ID agregafunc LPAREN funcionb

    ID              shift and go to state 45


state 36

    (19) tipofun -> INT .

    ID              reduce using rule 19 (tipofun -> INT .)


state 37

    (20) tipofun -> FLOAT .

    ID              reduce using rule 20 (tipofun -> FLOAT .)


state 38

    (21) tipofun -> CHAR .

    ID              reduce using rule 21 (tipofun -> CHAR .)


state 39

    (22) tipofun -> VOID .

    ID              reduce using rule 22 (tipofun -> VOID .)


state 40

    (27) varsc -> id COMMA . varsc
    (27) varsc -> . id COMMA varsc
    (28) varsc -> . id SEMICOL varsb
    (29) varsc -> . empty
    (9) id -> . ID agregavar
    (10) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (136) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    id                             shift and go to state 26
    varsc                          shift and go to state 46
    empty                          shift and go to state 27

state 41

    (28) varsc -> id SEMICOL . varsb
    (25) varsb -> . tipovar varsc
    (26) varsb -> . contVReset empty
    (13) tipovar -> . INT agregatipo
    (14) tipovar -> . FLOAT agregatipo
    (15) tipovar -> . CHAR agregatipo
    (30) contVReset -> . empty
    (136) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    varsb                          shift and go to state 47
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 42

    (9) id -> ID agregavar .
    (10) id -> ID agregavar . LBRACK arreglo cte RBRACK arreglo2

    COMMA           reduce using rule 9 (id -> ID agregavar .)
    SEMICOL         reduce using rule 9 (id -> ID agregavar .)
    RPAREN          reduce using rule 9 (id -> ID agregavar .)
    LBRACK          shift and go to state 48


state 43

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN . prinn bloque endpro
    (6) prinn -> . empty
    (136) empty -> .

    LBRACKET        reduce using rule 136 (empty -> .)

    prinn                          shift and go to state 49
    empty                          shift and go to state 50

state 44

    (35) funcion -> FUNCION aux2 ID LPAREN . funcionb
    (40) funcionb -> . RPAREN testeru funcionc
    (41) funcionb -> . varsfunc RPAREN testeru funcionc
    (31) varsfunc -> . tipovarfunc varsfuncb
    (16) tipovarfunc -> . INT agregatipo
    (17) tipovarfunc -> . FLOAT agregatipo
    (18) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 51
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 45

    (36) funcion -> FUNCION aux2 tipofun ID . agregafunc LPAREN funcionb
    (39) agregafunc -> . empty
    (136) empty -> .

    LPAREN          reduce using rule 136 (empty -> .)

    agregafunc                     shift and go to state 58
    empty                          shift and go to state 59

state 46

    (27) varsc -> id COMMA varsc .

    FUNCION         reduce using rule 27 (varsc -> id COMMA varsc .)
    PRINCIPAL       reduce using rule 27 (varsc -> id COMMA varsc .)
    LBRACKET        reduce using rule 27 (varsc -> id COMMA varsc .)


state 47

    (28) varsc -> id SEMICOL varsb .

    FUNCION         reduce using rule 28 (varsc -> id SEMICOL varsb .)
    PRINCIPAL       reduce using rule 28 (varsc -> id SEMICOL varsb .)
    LBRACKET        reduce using rule 28 (varsc -> id SEMICOL varsb .)


state 48

    (10) id -> ID agregavar LBRACK . arreglo cte RBRACK arreglo2
    (11) arreglo -> . empty
    (136) empty -> .

    ID              reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    arreglo                        shift and go to state 60
    empty                          shift and go to state 61

state 49

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn . bloque endpro
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 62

state 50

    (6) prinn -> empty .

    LBRACKET        reduce using rule 6 (prinn -> empty .)


state 51

    (35) funcion -> FUNCION aux2 ID LPAREN funcionb .

    PRINCIPAL       reduce using rule 35 (funcion -> FUNCION aux2 ID LPAREN funcionb .)


state 52

    (40) funcionb -> RPAREN . testeru funcionc
    (42) testeru -> . empty
    (136) empty -> .

    VAR             reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)

    testeru                        shift and go to state 64
    empty                          shift and go to state 65

state 53

    (41) funcionb -> varsfunc . RPAREN testeru funcionc

    RPAREN          shift and go to state 66


state 54

    (31) varsfunc -> tipovarfunc . varsfuncb
    (32) varsfuncb -> . id COMMA varsfuncb
    (33) varsfuncb -> . varsfunc
    (34) varsfuncb -> . id
    (9) id -> . ID agregavar
    (10) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (31) varsfunc -> . tipovarfunc varsfuncb
    (16) tipovarfunc -> . INT agregatipo
    (17) tipovarfunc -> . FLOAT agregatipo
    (18) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    tipovarfunc                    shift and go to state 54
    varsfuncb                      shift and go to state 67
    id                             shift and go to state 68
    varsfunc                       shift and go to state 69

state 55

    (16) tipovarfunc -> INT . agregatipo
    (23) agregatipo -> .

    ID              reduce using rule 23 (agregatipo -> .)
    INT             reduce using rule 23 (agregatipo -> .)
    FLOAT           reduce using rule 23 (agregatipo -> .)
    CHAR            reduce using rule 23 (agregatipo -> .)

    agregatipo                     shift and go to state 70

state 56

    (17) tipovarfunc -> FLOAT . agregatipo
    (23) agregatipo -> .

    ID              reduce using rule 23 (agregatipo -> .)
    INT             reduce using rule 23 (agregatipo -> .)
    FLOAT           reduce using rule 23 (agregatipo -> .)
    CHAR            reduce using rule 23 (agregatipo -> .)

    agregatipo                     shift and go to state 71

state 57

    (18) tipovarfunc -> CHAR . agregatipo
    (23) agregatipo -> .

    ID              reduce using rule 23 (agregatipo -> .)
    INT             reduce using rule 23 (agregatipo -> .)
    FLOAT           reduce using rule 23 (agregatipo -> .)
    CHAR            reduce using rule 23 (agregatipo -> .)

    agregatipo                     shift and go to state 72

state 58

    (36) funcion -> FUNCION aux2 tipofun ID agregafunc . LPAREN funcionb

    LPAREN          shift and go to state 73


state 59

    (39) agregafunc -> empty .

    LPAREN          reduce using rule 39 (agregafunc -> empty .)


state 60

    (10) id -> ID agregavar LBRACK arreglo . cte RBRACK arreglo2
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 75

state 61

    (11) arreglo -> empty .

    ID              reduce using rule 11 (arreglo -> empty .)
    NUMBER          reduce using rule 11 (arreglo -> empty .)
    CTEF            reduce using rule 11 (arreglo -> empty .)
    CTEC            reduce using rule 11 (arreglo -> empty .)
    STRING          reduce using rule 11 (arreglo -> empty .)


state 62

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque . endpro
    (5) endpro -> . empty
    (136) empty -> .

    $end            reduce using rule 136 (empty -> .)

    endpro                         shift and go to state 80
    empty                          shift and go to state 81

state 63

    (48) bloque -> LBRACKET . estatuto bloqueb
    (49) bloque -> LBRACKET . RBRACKET
    (127) estatuto -> . asignacion
    (128) estatuto -> . funcionvoid
    (129) estatuto -> . retorno
    (130) estatuto -> . lee
    (131) estatuto -> . escritura
    (132) estatuto -> . decision
    (133) estatuto -> . repeticioncond
    (134) estatuto -> . repeticionnocond
    (135) estatuto -> . expresion
    (59) asignacion -> . ID EQUAL asignacionb
    (60) asignacion -> . ID asign EQUAL asignacionb
    (65) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (63) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (71) lee -> . LEE LPAREN id leeb
    (75) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (79) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (85) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (89) repeticionnocond -> . DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    RBRACKET        shift and go to state 83
    ID              shift and go to state 93
    REGRESA         shift and go to state 95
    LEE             shift and go to state 96
    ESCRIBE         shift and go to state 97
    SI              shift and go to state 98
    MIENTRAS        shift and go to state 99
    DESDE           shift and go to state 100
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 82
    asignacion                     shift and go to state 84
    funcionvoid                    shift and go to state 85
    retorno                        shift and go to state 86
    lee                            shift and go to state 87
    escritura                      shift and go to state 88
    decision                       shift and go to state 89
    repeticioncond                 shift and go to state 90
    repeticionnocond               shift and go to state 91
    expresion                      shift and go to state 92
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 64

    (40) funcionb -> RPAREN testeru . funcionc
    (43) funcionc -> . vars agregacont bloque reinicio funcion
    (44) funcionc -> . agregacont bloque reinicio funcion
    (45) funcionc -> . empty
    (24) vars -> . VAR varsb
    (46) agregacont -> . empty
    (136) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    funcionc                       shift and go to state 107
    vars                           shift and go to state 108
    agregacont                     shift and go to state 109
    empty                          shift and go to state 110

state 65

    (42) testeru -> empty .

    VAR             reduce using rule 42 (testeru -> empty .)
    LBRACKET        reduce using rule 42 (testeru -> empty .)
    PRINCIPAL       reduce using rule 42 (testeru -> empty .)


state 66

    (41) funcionb -> varsfunc RPAREN . testeru funcionc
    (42) testeru -> . empty
    (136) empty -> .

    VAR             reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)

    testeru                        shift and go to state 111
    empty                          shift and go to state 65

state 67

    (31) varsfunc -> tipovarfunc varsfuncb .

    RPAREN          reduce using rule 31 (varsfunc -> tipovarfunc varsfuncb .)


state 68

    (32) varsfuncb -> id . COMMA varsfuncb
    (34) varsfuncb -> id .

    COMMA           shift and go to state 112
    RPAREN          reduce using rule 34 (varsfuncb -> id .)


state 69

    (33) varsfuncb -> varsfunc .

    RPAREN          reduce using rule 33 (varsfuncb -> varsfunc .)


state 70

    (16) tipovarfunc -> INT agregatipo .

    ID              reduce using rule 16 (tipovarfunc -> INT agregatipo .)
    INT             reduce using rule 16 (tipovarfunc -> INT agregatipo .)
    FLOAT           reduce using rule 16 (tipovarfunc -> INT agregatipo .)
    CHAR            reduce using rule 16 (tipovarfunc -> INT agregatipo .)


state 71

    (17) tipovarfunc -> FLOAT agregatipo .

    ID              reduce using rule 17 (tipovarfunc -> FLOAT agregatipo .)
    INT             reduce using rule 17 (tipovarfunc -> FLOAT agregatipo .)
    FLOAT           reduce using rule 17 (tipovarfunc -> FLOAT agregatipo .)
    CHAR            reduce using rule 17 (tipovarfunc -> FLOAT agregatipo .)


state 72

    (18) tipovarfunc -> CHAR agregatipo .

    ID              reduce using rule 18 (tipovarfunc -> CHAR agregatipo .)
    INT             reduce using rule 18 (tipovarfunc -> CHAR agregatipo .)
    FLOAT           reduce using rule 18 (tipovarfunc -> CHAR agregatipo .)
    CHAR            reduce using rule 18 (tipovarfunc -> CHAR agregatipo .)


state 73

    (36) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN . funcionb
    (40) funcionb -> . RPAREN testeru funcionc
    (41) funcionb -> . varsfunc RPAREN testeru funcionc
    (31) varsfunc -> . tipovarfunc varsfuncb
    (16) tipovarfunc -> . INT agregatipo
    (17) tipovarfunc -> . FLOAT agregatipo
    (18) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 113
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 74

    (96) cte -> ID .

    RBRACK          reduce using rule 96 (cte -> ID .)
    TIMES           reduce using rule 96 (cte -> ID .)
    DIVIDE          reduce using rule 96 (cte -> ID .)
    PLUS            reduce using rule 96 (cte -> ID .)
    MINUS           reduce using rule 96 (cte -> ID .)
    GTHAN           reduce using rule 96 (cte -> ID .)
    LTHAN           reduce using rule 96 (cte -> ID .)
    EQLOP           reduce using rule 96 (cte -> ID .)
    GEQUAL          reduce using rule 96 (cte -> ID .)
    LEQUAL          reduce using rule 96 (cte -> ID .)
    ABRACKET        reduce using rule 96 (cte -> ID .)
    RBRACKET        reduce using rule 96 (cte -> ID .)
    ID              reduce using rule 96 (cte -> ID .)
    REGRESA         reduce using rule 96 (cte -> ID .)
    LEE             reduce using rule 96 (cte -> ID .)
    ESCRIBE         reduce using rule 96 (cte -> ID .)
    SI              reduce using rule 96 (cte -> ID .)
    MIENTRAS        reduce using rule 96 (cte -> ID .)
    DESDE           reduce using rule 96 (cte -> ID .)
    LPAREN          reduce using rule 96 (cte -> ID .)
    NUMBER          reduce using rule 96 (cte -> ID .)
    CTEF            reduce using rule 96 (cte -> ID .)
    CTEC            reduce using rule 96 (cte -> ID .)
    STRING          reduce using rule 96 (cte -> ID .)
    RPAREN          reduce using rule 96 (cte -> ID .)
    SEMICOL         reduce using rule 96 (cte -> ID .)
    COMMA           reduce using rule 96 (cte -> ID .)
    HACER           reduce using rule 96 (cte -> ID .)
    HASTA           reduce using rule 96 (cte -> ID .)


state 75

    (10) id -> ID agregavar LBRACK arreglo cte . RBRACK arreglo2

    RBRACK          shift and go to state 114


state 76

    (97) cte -> NUMBER . saveconst
    (101) saveconst -> . empty
    (136) empty -> .

    RBRACK          reduce using rule 136 (empty -> .)
    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    saveconst                      shift and go to state 115
    empty                          shift and go to state 116

state 77

    (98) cte -> CTEF . saveconst
    (101) saveconst -> . empty
    (136) empty -> .

    RBRACK          reduce using rule 136 (empty -> .)
    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    saveconst                      shift and go to state 117
    empty                          shift and go to state 116

state 78

    (99) cte -> CTEC .

    RBRACK          reduce using rule 99 (cte -> CTEC .)
    TIMES           reduce using rule 99 (cte -> CTEC .)
    DIVIDE          reduce using rule 99 (cte -> CTEC .)
    PLUS            reduce using rule 99 (cte -> CTEC .)
    MINUS           reduce using rule 99 (cte -> CTEC .)
    GTHAN           reduce using rule 99 (cte -> CTEC .)
    LTHAN           reduce using rule 99 (cte -> CTEC .)
    EQLOP           reduce using rule 99 (cte -> CTEC .)
    GEQUAL          reduce using rule 99 (cte -> CTEC .)
    LEQUAL          reduce using rule 99 (cte -> CTEC .)
    ABRACKET        reduce using rule 99 (cte -> CTEC .)
    RBRACKET        reduce using rule 99 (cte -> CTEC .)
    ID              reduce using rule 99 (cte -> CTEC .)
    REGRESA         reduce using rule 99 (cte -> CTEC .)
    LEE             reduce using rule 99 (cte -> CTEC .)
    ESCRIBE         reduce using rule 99 (cte -> CTEC .)
    SI              reduce using rule 99 (cte -> CTEC .)
    MIENTRAS        reduce using rule 99 (cte -> CTEC .)
    DESDE           reduce using rule 99 (cte -> CTEC .)
    LPAREN          reduce using rule 99 (cte -> CTEC .)
    NUMBER          reduce using rule 99 (cte -> CTEC .)
    CTEF            reduce using rule 99 (cte -> CTEC .)
    CTEC            reduce using rule 99 (cte -> CTEC .)
    STRING          reduce using rule 99 (cte -> CTEC .)
    RPAREN          reduce using rule 99 (cte -> CTEC .)
    SEMICOL         reduce using rule 99 (cte -> CTEC .)
    COMMA           reduce using rule 99 (cte -> CTEC .)
    HACER           reduce using rule 99 (cte -> CTEC .)
    HASTA           reduce using rule 99 (cte -> CTEC .)


state 79

    (100) cte -> STRING . savestringconst
    (102) savestringconst -> . empty
    (136) empty -> .

    RBRACK          reduce using rule 136 (empty -> .)
    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    savestringconst                shift and go to state 118
    empty                          shift and go to state 119

state 80

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque endpro .

    $end            reduce using rule 4 (programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque endpro .)


state 81

    (5) endpro -> empty .

    $end            reduce using rule 5 (endpro -> empty .)


state 82

    (48) bloque -> LBRACKET estatuto . bloqueb
    (50) bloqueb -> . RBRACKET helper
    (51) bloqueb -> . estatuto bloqueb
    (127) estatuto -> . asignacion
    (128) estatuto -> . funcionvoid
    (129) estatuto -> . retorno
    (130) estatuto -> . lee
    (131) estatuto -> . escritura
    (132) estatuto -> . decision
    (133) estatuto -> . repeticioncond
    (134) estatuto -> . repeticionnocond
    (135) estatuto -> . expresion
    (59) asignacion -> . ID EQUAL asignacionb
    (60) asignacion -> . ID asign EQUAL asignacionb
    (65) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (63) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (71) lee -> . LEE LPAREN id leeb
    (75) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (79) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (85) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (89) repeticionnocond -> . DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    RBRACKET        shift and go to state 122
    ID              shift and go to state 93
    REGRESA         shift and go to state 95
    LEE             shift and go to state 96
    ESCRIBE         shift and go to state 97
    SI              shift and go to state 98
    MIENTRAS        shift and go to state 99
    DESDE           shift and go to state 100
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 120
    bloqueb                        shift and go to state 121
    asignacion                     shift and go to state 84
    funcionvoid                    shift and go to state 85
    retorno                        shift and go to state 86
    lee                            shift and go to state 87
    escritura                      shift and go to state 88
    decision                       shift and go to state 89
    repeticioncond                 shift and go to state 90
    repeticionnocond               shift and go to state 91
    expresion                      shift and go to state 92
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 83

    (49) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    FUNCION         reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    PRINCIPAL       reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    SINO            reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    REGRESA         reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    LEE             reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    ESCRIBE         reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    SI              reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    MIENTRAS        reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    DESDE           reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    NUMBER          reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    CTEF            reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    CTEC            reduce using rule 49 (bloque -> LBRACKET RBRACKET .)
    STRING          reduce using rule 49 (bloque -> LBRACKET RBRACKET .)


state 84

    (127) estatuto -> asignacion .

    RBRACKET        reduce using rule 127 (estatuto -> asignacion .)
    ID              reduce using rule 127 (estatuto -> asignacion .)
    REGRESA         reduce using rule 127 (estatuto -> asignacion .)
    LEE             reduce using rule 127 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 127 (estatuto -> asignacion .)
    SI              reduce using rule 127 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 127 (estatuto -> asignacion .)
    DESDE           reduce using rule 127 (estatuto -> asignacion .)
    LPAREN          reduce using rule 127 (estatuto -> asignacion .)
    PLUS            reduce using rule 127 (estatuto -> asignacion .)
    MINUS           reduce using rule 127 (estatuto -> asignacion .)
    NUMBER          reduce using rule 127 (estatuto -> asignacion .)
    CTEF            reduce using rule 127 (estatuto -> asignacion .)
    CTEC            reduce using rule 127 (estatuto -> asignacion .)
    STRING          reduce using rule 127 (estatuto -> asignacion .)


state 85

    (128) estatuto -> funcionvoid .

    RBRACKET        reduce using rule 128 (estatuto -> funcionvoid .)
    ID              reduce using rule 128 (estatuto -> funcionvoid .)
    REGRESA         reduce using rule 128 (estatuto -> funcionvoid .)
    LEE             reduce using rule 128 (estatuto -> funcionvoid .)
    ESCRIBE         reduce using rule 128 (estatuto -> funcionvoid .)
    SI              reduce using rule 128 (estatuto -> funcionvoid .)
    MIENTRAS        reduce using rule 128 (estatuto -> funcionvoid .)
    DESDE           reduce using rule 128 (estatuto -> funcionvoid .)
    LPAREN          reduce using rule 128 (estatuto -> funcionvoid .)
    PLUS            reduce using rule 128 (estatuto -> funcionvoid .)
    MINUS           reduce using rule 128 (estatuto -> funcionvoid .)
    NUMBER          reduce using rule 128 (estatuto -> funcionvoid .)
    CTEF            reduce using rule 128 (estatuto -> funcionvoid .)
    CTEC            reduce using rule 128 (estatuto -> funcionvoid .)
    STRING          reduce using rule 128 (estatuto -> funcionvoid .)


state 86

    (129) estatuto -> retorno .

    RBRACKET        reduce using rule 129 (estatuto -> retorno .)
    ID              reduce using rule 129 (estatuto -> retorno .)
    REGRESA         reduce using rule 129 (estatuto -> retorno .)
    LEE             reduce using rule 129 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 129 (estatuto -> retorno .)
    SI              reduce using rule 129 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 129 (estatuto -> retorno .)
    DESDE           reduce using rule 129 (estatuto -> retorno .)
    LPAREN          reduce using rule 129 (estatuto -> retorno .)
    PLUS            reduce using rule 129 (estatuto -> retorno .)
    MINUS           reduce using rule 129 (estatuto -> retorno .)
    NUMBER          reduce using rule 129 (estatuto -> retorno .)
    CTEF            reduce using rule 129 (estatuto -> retorno .)
    CTEC            reduce using rule 129 (estatuto -> retorno .)
    STRING          reduce using rule 129 (estatuto -> retorno .)


state 87

    (130) estatuto -> lee .

    RBRACKET        reduce using rule 130 (estatuto -> lee .)
    ID              reduce using rule 130 (estatuto -> lee .)
    REGRESA         reduce using rule 130 (estatuto -> lee .)
    LEE             reduce using rule 130 (estatuto -> lee .)
    ESCRIBE         reduce using rule 130 (estatuto -> lee .)
    SI              reduce using rule 130 (estatuto -> lee .)
    MIENTRAS        reduce using rule 130 (estatuto -> lee .)
    DESDE           reduce using rule 130 (estatuto -> lee .)
    LPAREN          reduce using rule 130 (estatuto -> lee .)
    PLUS            reduce using rule 130 (estatuto -> lee .)
    MINUS           reduce using rule 130 (estatuto -> lee .)
    NUMBER          reduce using rule 130 (estatuto -> lee .)
    CTEF            reduce using rule 130 (estatuto -> lee .)
    CTEC            reduce using rule 130 (estatuto -> lee .)
    STRING          reduce using rule 130 (estatuto -> lee .)


state 88

    (131) estatuto -> escritura .

    RBRACKET        reduce using rule 131 (estatuto -> escritura .)
    ID              reduce using rule 131 (estatuto -> escritura .)
    REGRESA         reduce using rule 131 (estatuto -> escritura .)
    LEE             reduce using rule 131 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 131 (estatuto -> escritura .)
    SI              reduce using rule 131 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 131 (estatuto -> escritura .)
    DESDE           reduce using rule 131 (estatuto -> escritura .)
    LPAREN          reduce using rule 131 (estatuto -> escritura .)
    PLUS            reduce using rule 131 (estatuto -> escritura .)
    MINUS           reduce using rule 131 (estatuto -> escritura .)
    NUMBER          reduce using rule 131 (estatuto -> escritura .)
    CTEF            reduce using rule 131 (estatuto -> escritura .)
    CTEC            reduce using rule 131 (estatuto -> escritura .)
    STRING          reduce using rule 131 (estatuto -> escritura .)


state 89

    (132) estatuto -> decision .

    RBRACKET        reduce using rule 132 (estatuto -> decision .)
    ID              reduce using rule 132 (estatuto -> decision .)
    REGRESA         reduce using rule 132 (estatuto -> decision .)
    LEE             reduce using rule 132 (estatuto -> decision .)
    ESCRIBE         reduce using rule 132 (estatuto -> decision .)
    SI              reduce using rule 132 (estatuto -> decision .)
    MIENTRAS        reduce using rule 132 (estatuto -> decision .)
    DESDE           reduce using rule 132 (estatuto -> decision .)
    LPAREN          reduce using rule 132 (estatuto -> decision .)
    PLUS            reduce using rule 132 (estatuto -> decision .)
    MINUS           reduce using rule 132 (estatuto -> decision .)
    NUMBER          reduce using rule 132 (estatuto -> decision .)
    CTEF            reduce using rule 132 (estatuto -> decision .)
    CTEC            reduce using rule 132 (estatuto -> decision .)
    STRING          reduce using rule 132 (estatuto -> decision .)


state 90

    (133) estatuto -> repeticioncond .

    RBRACKET        reduce using rule 133 (estatuto -> repeticioncond .)
    ID              reduce using rule 133 (estatuto -> repeticioncond .)
    REGRESA         reduce using rule 133 (estatuto -> repeticioncond .)
    LEE             reduce using rule 133 (estatuto -> repeticioncond .)
    ESCRIBE         reduce using rule 133 (estatuto -> repeticioncond .)
    SI              reduce using rule 133 (estatuto -> repeticioncond .)
    MIENTRAS        reduce using rule 133 (estatuto -> repeticioncond .)
    DESDE           reduce using rule 133 (estatuto -> repeticioncond .)
    LPAREN          reduce using rule 133 (estatuto -> repeticioncond .)
    PLUS            reduce using rule 133 (estatuto -> repeticioncond .)
    MINUS           reduce using rule 133 (estatuto -> repeticioncond .)
    NUMBER          reduce using rule 133 (estatuto -> repeticioncond .)
    CTEF            reduce using rule 133 (estatuto -> repeticioncond .)
    CTEC            reduce using rule 133 (estatuto -> repeticioncond .)
    STRING          reduce using rule 133 (estatuto -> repeticioncond .)


state 91

    (134) estatuto -> repeticionnocond .

    RBRACKET        reduce using rule 134 (estatuto -> repeticionnocond .)
    ID              reduce using rule 134 (estatuto -> repeticionnocond .)
    REGRESA         reduce using rule 134 (estatuto -> repeticionnocond .)
    LEE             reduce using rule 134 (estatuto -> repeticionnocond .)
    ESCRIBE         reduce using rule 134 (estatuto -> repeticionnocond .)
    SI              reduce using rule 134 (estatuto -> repeticionnocond .)
    MIENTRAS        reduce using rule 134 (estatuto -> repeticionnocond .)
    DESDE           reduce using rule 134 (estatuto -> repeticionnocond .)
    LPAREN          reduce using rule 134 (estatuto -> repeticionnocond .)
    PLUS            reduce using rule 134 (estatuto -> repeticionnocond .)
    MINUS           reduce using rule 134 (estatuto -> repeticionnocond .)
    NUMBER          reduce using rule 134 (estatuto -> repeticionnocond .)
    CTEF            reduce using rule 134 (estatuto -> repeticionnocond .)
    CTEC            reduce using rule 134 (estatuto -> repeticionnocond .)
    STRING          reduce using rule 134 (estatuto -> repeticionnocond .)


state 92

    (135) estatuto -> expresion .

    RBRACKET        reduce using rule 135 (estatuto -> expresion .)
    ID              reduce using rule 135 (estatuto -> expresion .)
    REGRESA         reduce using rule 135 (estatuto -> expresion .)
    LEE             reduce using rule 135 (estatuto -> expresion .)
    ESCRIBE         reduce using rule 135 (estatuto -> expresion .)
    SI              reduce using rule 135 (estatuto -> expresion .)
    MIENTRAS        reduce using rule 135 (estatuto -> expresion .)
    DESDE           reduce using rule 135 (estatuto -> expresion .)
    LPAREN          reduce using rule 135 (estatuto -> expresion .)
    PLUS            reduce using rule 135 (estatuto -> expresion .)
    MINUS           reduce using rule 135 (estatuto -> expresion .)
    NUMBER          reduce using rule 135 (estatuto -> expresion .)
    CTEF            reduce using rule 135 (estatuto -> expresion .)
    CTEC            reduce using rule 135 (estatuto -> expresion .)
    STRING          reduce using rule 135 (estatuto -> expresion .)


state 93

    (59) asignacion -> ID . EQUAL asignacionb
    (60) asignacion -> ID . asign EQUAL asignacionb
    (65) funcionvoid -> ID . LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (119) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (123) factor -> ID . asign
    (96) cte -> ID .
    (53) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (55) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           shift and go to state 123
    LPAREN          shift and go to state 125
    TIMES           reduce using rule 96 (cte -> ID .)
    DIVIDE          reduce using rule 96 (cte -> ID .)
    PLUS            reduce using rule 96 (cte -> ID .)
    MINUS           reduce using rule 96 (cte -> ID .)
    GTHAN           reduce using rule 96 (cte -> ID .)
    LTHAN           reduce using rule 96 (cte -> ID .)
    EQLOP           reduce using rule 96 (cte -> ID .)
    GEQUAL          reduce using rule 96 (cte -> ID .)
    LEQUAL          reduce using rule 96 (cte -> ID .)
    ABRACKET        reduce using rule 96 (cte -> ID .)
    RBRACKET        reduce using rule 96 (cte -> ID .)
    ID              reduce using rule 96 (cte -> ID .)
    REGRESA         reduce using rule 96 (cte -> ID .)
    LEE             reduce using rule 96 (cte -> ID .)
    ESCRIBE         reduce using rule 96 (cte -> ID .)
    SI              reduce using rule 96 (cte -> ID .)
    MIENTRAS        reduce using rule 96 (cte -> ID .)
    DESDE           reduce using rule 96 (cte -> ID .)
    NUMBER          reduce using rule 96 (cte -> ID .)
    CTEF            reduce using rule 96 (cte -> ID .)
    CTEC            reduce using rule 96 (cte -> ID .)
    STRING          reduce using rule 96 (cte -> ID .)
    LBRACK          shift and go to state 126

  ! LPAREN          [ reduce using rule 96 (cte -> ID .) ]

    asign                          shift and go to state 124

state 94

    (118) factor -> LPAREN . expresion RPAREN
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 127
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 95

    (63) retorno -> REGRESA . LPAREN expresion retn RPAREN SEMICOL

    LPAREN          shift and go to state 129


state 96

    (71) lee -> LEE . LPAREN id leeb

    LPAREN          shift and go to state 130


state 97

    (75) escritura -> ESCRIBE . LPAREN expresion prin1 escriturab

    LPAREN          shift and go to state 131


state 98

    (79) decision -> SI . LPAREN expresion pn1 RPAREN ENTONCES decisionb

    LPAREN          shift and go to state 132


state 99

    (85) repeticioncond -> MIENTRAS . rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (86) rcn1 -> . empty
    (136) empty -> .

    LPAREN          reduce using rule 136 (empty -> .)

    rcn1                           shift and go to state 133
    empty                          shift and go to state 134

state 100

    (89) repeticionnocond -> DESDE . asignacioncond HASTA exp repnoconn HACER bloque repnoconn2
    (90) asignacioncond -> . ID EQUAL asignacioncondb
    (91) asignacioncond -> . ID asign EQUAL asignacioncondb

    ID              shift and go to state 136

    asignacioncond                 shift and go to state 135

state 101

    (103) expresion -> exp .
    (104) expresion -> exp . GTHAN exp
    (105) expresion -> exp . LTHAN exp
    (106) expresion -> exp . EQLOP exp
    (107) expresion -> exp . GEQUAL exp
    (108) expresion -> exp . LEQUAL exp
    (109) expresion -> exp . ABRACKET exp

    RBRACKET        reduce using rule 103 (expresion -> exp .)
    ID              reduce using rule 103 (expresion -> exp .)
    REGRESA         reduce using rule 103 (expresion -> exp .)
    LEE             reduce using rule 103 (expresion -> exp .)
    ESCRIBE         reduce using rule 103 (expresion -> exp .)
    SI              reduce using rule 103 (expresion -> exp .)
    MIENTRAS        reduce using rule 103 (expresion -> exp .)
    DESDE           reduce using rule 103 (expresion -> exp .)
    LPAREN          reduce using rule 103 (expresion -> exp .)
    PLUS            reduce using rule 103 (expresion -> exp .)
    MINUS           reduce using rule 103 (expresion -> exp .)
    NUMBER          reduce using rule 103 (expresion -> exp .)
    CTEF            reduce using rule 103 (expresion -> exp .)
    CTEC            reduce using rule 103 (expresion -> exp .)
    STRING          reduce using rule 103 (expresion -> exp .)
    RPAREN          reduce using rule 103 (expresion -> exp .)
    SEMICOL         reduce using rule 103 (expresion -> exp .)
    COMMA           reduce using rule 103 (expresion -> exp .)
    RBRACK          reduce using rule 103 (expresion -> exp .)
    GTHAN           shift and go to state 137
    LTHAN           shift and go to state 138
    EQLOP           shift and go to state 139
    GEQUAL          shift and go to state 140
    LEQUAL          shift and go to state 141
    ABRACKET        shift and go to state 142


state 102

    (110) exp -> termino .
    (111) exp -> termino . expb
    (112) expb -> . PLUS exp
    (113) expb -> . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GTHAN           reduce using rule 110 (exp -> termino .)
    LTHAN           reduce using rule 110 (exp -> termino .)
    EQLOP           reduce using rule 110 (exp -> termino .)
    GEQUAL          reduce using rule 110 (exp -> termino .)
    LEQUAL          reduce using rule 110 (exp -> termino .)
    ABRACKET        reduce using rule 110 (exp -> termino .)
    RBRACKET        reduce using rule 110 (exp -> termino .)
    ID              reduce using rule 110 (exp -> termino .)
    REGRESA         reduce using rule 110 (exp -> termino .)
    LEE             reduce using rule 110 (exp -> termino .)
    ESCRIBE         reduce using rule 110 (exp -> termino .)
    SI              reduce using rule 110 (exp -> termino .)
    MIENTRAS        reduce using rule 110 (exp -> termino .)
    DESDE           reduce using rule 110 (exp -> termino .)
    LPAREN          reduce using rule 110 (exp -> termino .)
    NUMBER          reduce using rule 110 (exp -> termino .)
    CTEF            reduce using rule 110 (exp -> termino .)
    CTEC            reduce using rule 110 (exp -> termino .)
    STRING          reduce using rule 110 (exp -> termino .)
    RPAREN          reduce using rule 110 (exp -> termino .)
    SEMICOL         reduce using rule 110 (exp -> termino .)
    COMMA           reduce using rule 110 (exp -> termino .)
    RBRACK          reduce using rule 110 (exp -> termino .)
    HACER           reduce using rule 110 (exp -> termino .)
    HASTA           reduce using rule 110 (exp -> termino .)
    PLUS            shift and go to state 144
    MINUS           shift and go to state 145

  ! PLUS            [ reduce using rule 110 (exp -> termino .) ]
  ! MINUS           [ reduce using rule 110 (exp -> termino .) ]

    expb                           shift and go to state 143

state 103

    (114) termino -> factor .
    (115) termino -> factor . terminob
    (116) terminob -> . TIMES termino
    (117) terminob -> . DIVIDE termino

    PLUS            reduce using rule 114 (termino -> factor .)
    MINUS           reduce using rule 114 (termino -> factor .)
    GTHAN           reduce using rule 114 (termino -> factor .)
    LTHAN           reduce using rule 114 (termino -> factor .)
    EQLOP           reduce using rule 114 (termino -> factor .)
    GEQUAL          reduce using rule 114 (termino -> factor .)
    LEQUAL          reduce using rule 114 (termino -> factor .)
    ABRACKET        reduce using rule 114 (termino -> factor .)
    RBRACKET        reduce using rule 114 (termino -> factor .)
    ID              reduce using rule 114 (termino -> factor .)
    REGRESA         reduce using rule 114 (termino -> factor .)
    LEE             reduce using rule 114 (termino -> factor .)
    ESCRIBE         reduce using rule 114 (termino -> factor .)
    SI              reduce using rule 114 (termino -> factor .)
    MIENTRAS        reduce using rule 114 (termino -> factor .)
    DESDE           reduce using rule 114 (termino -> factor .)
    LPAREN          reduce using rule 114 (termino -> factor .)
    NUMBER          reduce using rule 114 (termino -> factor .)
    CTEF            reduce using rule 114 (termino -> factor .)
    CTEC            reduce using rule 114 (termino -> factor .)
    STRING          reduce using rule 114 (termino -> factor .)
    RPAREN          reduce using rule 114 (termino -> factor .)
    SEMICOL         reduce using rule 114 (termino -> factor .)
    COMMA           reduce using rule 114 (termino -> factor .)
    RBRACK          reduce using rule 114 (termino -> factor .)
    HACER           reduce using rule 114 (termino -> factor .)
    HASTA           reduce using rule 114 (termino -> factor .)
    TIMES           shift and go to state 147
    DIVIDE          shift and go to state 148

    terminob                       shift and go to state 146

state 104

    (120) factor -> PLUS . cte
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 149

state 105

    (122) factor -> cte .

    TIMES           reduce using rule 122 (factor -> cte .)
    DIVIDE          reduce using rule 122 (factor -> cte .)
    PLUS            reduce using rule 122 (factor -> cte .)
    MINUS           reduce using rule 122 (factor -> cte .)
    GTHAN           reduce using rule 122 (factor -> cte .)
    LTHAN           reduce using rule 122 (factor -> cte .)
    EQLOP           reduce using rule 122 (factor -> cte .)
    GEQUAL          reduce using rule 122 (factor -> cte .)
    LEQUAL          reduce using rule 122 (factor -> cte .)
    ABRACKET        reduce using rule 122 (factor -> cte .)
    RBRACKET        reduce using rule 122 (factor -> cte .)
    ID              reduce using rule 122 (factor -> cte .)
    REGRESA         reduce using rule 122 (factor -> cte .)
    LEE             reduce using rule 122 (factor -> cte .)
    ESCRIBE         reduce using rule 122 (factor -> cte .)
    SI              reduce using rule 122 (factor -> cte .)
    MIENTRAS        reduce using rule 122 (factor -> cte .)
    DESDE           reduce using rule 122 (factor -> cte .)
    LPAREN          reduce using rule 122 (factor -> cte .)
    NUMBER          reduce using rule 122 (factor -> cte .)
    CTEF            reduce using rule 122 (factor -> cte .)
    CTEC            reduce using rule 122 (factor -> cte .)
    STRING          reduce using rule 122 (factor -> cte .)
    RPAREN          reduce using rule 122 (factor -> cte .)
    SEMICOL         reduce using rule 122 (factor -> cte .)
    COMMA           reduce using rule 122 (factor -> cte .)
    RBRACK          reduce using rule 122 (factor -> cte .)
    HACER           reduce using rule 122 (factor -> cte .)
    HASTA           reduce using rule 122 (factor -> cte .)


state 106

    (121) factor -> MINUS . cte
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 150

state 107

    (40) funcionb -> RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 40 (funcionb -> RPAREN testeru funcionc .)


state 108

    (43) funcionc -> vars . agregacont bloque reinicio funcion
    (46) agregacont -> . empty
    (136) empty -> .

    LBRACKET        reduce using rule 136 (empty -> .)

    agregacont                     shift and go to state 151
    empty                          shift and go to state 152

state 109

    (44) funcionc -> agregacont . bloque reinicio funcion
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 153

state 110

    (45) funcionc -> empty .
    (46) agregacont -> empty .

    PRINCIPAL       reduce using rule 45 (funcionc -> empty .)
    LBRACKET        reduce using rule 46 (agregacont -> empty .)


state 111

    (41) funcionb -> varsfunc RPAREN testeru . funcionc
    (43) funcionc -> . vars agregacont bloque reinicio funcion
    (44) funcionc -> . agregacont bloque reinicio funcion
    (45) funcionc -> . empty
    (24) vars -> . VAR varsb
    (46) agregacont -> . empty
    (136) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 136 (empty -> .)
    LBRACKET        reduce using rule 136 (empty -> .)

    funcionc                       shift and go to state 154
    vars                           shift and go to state 108
    agregacont                     shift and go to state 109
    empty                          shift and go to state 110

state 112

    (32) varsfuncb -> id COMMA . varsfuncb
    (32) varsfuncb -> . id COMMA varsfuncb
    (33) varsfuncb -> . varsfunc
    (34) varsfuncb -> . id
    (9) id -> . ID agregavar
    (10) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (31) varsfunc -> . tipovarfunc varsfuncb
    (16) tipovarfunc -> . INT agregatipo
    (17) tipovarfunc -> . FLOAT agregatipo
    (18) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    id                             shift and go to state 68
    varsfuncb                      shift and go to state 155
    varsfunc                       shift and go to state 69
    tipovarfunc                    shift and go to state 54

state 113

    (36) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .

    PRINCIPAL       reduce using rule 36 (funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .)


state 114

    (10) id -> ID agregavar LBRACK arreglo cte RBRACK . arreglo2
    (12) arreglo2 -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)

    arreglo2                       shift and go to state 156
    empty                          shift and go to state 157

state 115

    (97) cte -> NUMBER saveconst .

    RBRACK          reduce using rule 97 (cte -> NUMBER saveconst .)
    TIMES           reduce using rule 97 (cte -> NUMBER saveconst .)
    DIVIDE          reduce using rule 97 (cte -> NUMBER saveconst .)
    PLUS            reduce using rule 97 (cte -> NUMBER saveconst .)
    MINUS           reduce using rule 97 (cte -> NUMBER saveconst .)
    GTHAN           reduce using rule 97 (cte -> NUMBER saveconst .)
    LTHAN           reduce using rule 97 (cte -> NUMBER saveconst .)
    EQLOP           reduce using rule 97 (cte -> NUMBER saveconst .)
    GEQUAL          reduce using rule 97 (cte -> NUMBER saveconst .)
    LEQUAL          reduce using rule 97 (cte -> NUMBER saveconst .)
    ABRACKET        reduce using rule 97 (cte -> NUMBER saveconst .)
    RBRACKET        reduce using rule 97 (cte -> NUMBER saveconst .)
    ID              reduce using rule 97 (cte -> NUMBER saveconst .)
    REGRESA         reduce using rule 97 (cte -> NUMBER saveconst .)
    LEE             reduce using rule 97 (cte -> NUMBER saveconst .)
    ESCRIBE         reduce using rule 97 (cte -> NUMBER saveconst .)
    SI              reduce using rule 97 (cte -> NUMBER saveconst .)
    MIENTRAS        reduce using rule 97 (cte -> NUMBER saveconst .)
    DESDE           reduce using rule 97 (cte -> NUMBER saveconst .)
    LPAREN          reduce using rule 97 (cte -> NUMBER saveconst .)
    NUMBER          reduce using rule 97 (cte -> NUMBER saveconst .)
    CTEF            reduce using rule 97 (cte -> NUMBER saveconst .)
    CTEC            reduce using rule 97 (cte -> NUMBER saveconst .)
    STRING          reduce using rule 97 (cte -> NUMBER saveconst .)
    RPAREN          reduce using rule 97 (cte -> NUMBER saveconst .)
    SEMICOL         reduce using rule 97 (cte -> NUMBER saveconst .)
    COMMA           reduce using rule 97 (cte -> NUMBER saveconst .)
    HACER           reduce using rule 97 (cte -> NUMBER saveconst .)
    HASTA           reduce using rule 97 (cte -> NUMBER saveconst .)


state 116

    (101) saveconst -> empty .

    RBRACK          reduce using rule 101 (saveconst -> empty .)
    TIMES           reduce using rule 101 (saveconst -> empty .)
    DIVIDE          reduce using rule 101 (saveconst -> empty .)
    PLUS            reduce using rule 101 (saveconst -> empty .)
    MINUS           reduce using rule 101 (saveconst -> empty .)
    GTHAN           reduce using rule 101 (saveconst -> empty .)
    LTHAN           reduce using rule 101 (saveconst -> empty .)
    EQLOP           reduce using rule 101 (saveconst -> empty .)
    GEQUAL          reduce using rule 101 (saveconst -> empty .)
    LEQUAL          reduce using rule 101 (saveconst -> empty .)
    ABRACKET        reduce using rule 101 (saveconst -> empty .)
    RBRACKET        reduce using rule 101 (saveconst -> empty .)
    ID              reduce using rule 101 (saveconst -> empty .)
    REGRESA         reduce using rule 101 (saveconst -> empty .)
    LEE             reduce using rule 101 (saveconst -> empty .)
    ESCRIBE         reduce using rule 101 (saveconst -> empty .)
    SI              reduce using rule 101 (saveconst -> empty .)
    MIENTRAS        reduce using rule 101 (saveconst -> empty .)
    DESDE           reduce using rule 101 (saveconst -> empty .)
    LPAREN          reduce using rule 101 (saveconst -> empty .)
    NUMBER          reduce using rule 101 (saveconst -> empty .)
    CTEF            reduce using rule 101 (saveconst -> empty .)
    CTEC            reduce using rule 101 (saveconst -> empty .)
    STRING          reduce using rule 101 (saveconst -> empty .)
    RPAREN          reduce using rule 101 (saveconst -> empty .)
    SEMICOL         reduce using rule 101 (saveconst -> empty .)
    COMMA           reduce using rule 101 (saveconst -> empty .)
    HACER           reduce using rule 101 (saveconst -> empty .)
    HASTA           reduce using rule 101 (saveconst -> empty .)


state 117

    (98) cte -> CTEF saveconst .

    RBRACK          reduce using rule 98 (cte -> CTEF saveconst .)
    TIMES           reduce using rule 98 (cte -> CTEF saveconst .)
    DIVIDE          reduce using rule 98 (cte -> CTEF saveconst .)
    PLUS            reduce using rule 98 (cte -> CTEF saveconst .)
    MINUS           reduce using rule 98 (cte -> CTEF saveconst .)
    GTHAN           reduce using rule 98 (cte -> CTEF saveconst .)
    LTHAN           reduce using rule 98 (cte -> CTEF saveconst .)
    EQLOP           reduce using rule 98 (cte -> CTEF saveconst .)
    GEQUAL          reduce using rule 98 (cte -> CTEF saveconst .)
    LEQUAL          reduce using rule 98 (cte -> CTEF saveconst .)
    ABRACKET        reduce using rule 98 (cte -> CTEF saveconst .)
    RBRACKET        reduce using rule 98 (cte -> CTEF saveconst .)
    ID              reduce using rule 98 (cte -> CTEF saveconst .)
    REGRESA         reduce using rule 98 (cte -> CTEF saveconst .)
    LEE             reduce using rule 98 (cte -> CTEF saveconst .)
    ESCRIBE         reduce using rule 98 (cte -> CTEF saveconst .)
    SI              reduce using rule 98 (cte -> CTEF saveconst .)
    MIENTRAS        reduce using rule 98 (cte -> CTEF saveconst .)
    DESDE           reduce using rule 98 (cte -> CTEF saveconst .)
    LPAREN          reduce using rule 98 (cte -> CTEF saveconst .)
    NUMBER          reduce using rule 98 (cte -> CTEF saveconst .)
    CTEF            reduce using rule 98 (cte -> CTEF saveconst .)
    CTEC            reduce using rule 98 (cte -> CTEF saveconst .)
    STRING          reduce using rule 98 (cte -> CTEF saveconst .)
    RPAREN          reduce using rule 98 (cte -> CTEF saveconst .)
    SEMICOL         reduce using rule 98 (cte -> CTEF saveconst .)
    COMMA           reduce using rule 98 (cte -> CTEF saveconst .)
    HACER           reduce using rule 98 (cte -> CTEF saveconst .)
    HASTA           reduce using rule 98 (cte -> CTEF saveconst .)


state 118

    (100) cte -> STRING savestringconst .

    RBRACK          reduce using rule 100 (cte -> STRING savestringconst .)
    TIMES           reduce using rule 100 (cte -> STRING savestringconst .)
    DIVIDE          reduce using rule 100 (cte -> STRING savestringconst .)
    PLUS            reduce using rule 100 (cte -> STRING savestringconst .)
    MINUS           reduce using rule 100 (cte -> STRING savestringconst .)
    GTHAN           reduce using rule 100 (cte -> STRING savestringconst .)
    LTHAN           reduce using rule 100 (cte -> STRING savestringconst .)
    EQLOP           reduce using rule 100 (cte -> STRING savestringconst .)
    GEQUAL          reduce using rule 100 (cte -> STRING savestringconst .)
    LEQUAL          reduce using rule 100 (cte -> STRING savestringconst .)
    ABRACKET        reduce using rule 100 (cte -> STRING savestringconst .)
    RBRACKET        reduce using rule 100 (cte -> STRING savestringconst .)
    ID              reduce using rule 100 (cte -> STRING savestringconst .)
    REGRESA         reduce using rule 100 (cte -> STRING savestringconst .)
    LEE             reduce using rule 100 (cte -> STRING savestringconst .)
    ESCRIBE         reduce using rule 100 (cte -> STRING savestringconst .)
    SI              reduce using rule 100 (cte -> STRING savestringconst .)
    MIENTRAS        reduce using rule 100 (cte -> STRING savestringconst .)
    DESDE           reduce using rule 100 (cte -> STRING savestringconst .)
    LPAREN          reduce using rule 100 (cte -> STRING savestringconst .)
    NUMBER          reduce using rule 100 (cte -> STRING savestringconst .)
    CTEF            reduce using rule 100 (cte -> STRING savestringconst .)
    CTEC            reduce using rule 100 (cte -> STRING savestringconst .)
    STRING          reduce using rule 100 (cte -> STRING savestringconst .)
    RPAREN          reduce using rule 100 (cte -> STRING savestringconst .)
    SEMICOL         reduce using rule 100 (cte -> STRING savestringconst .)
    COMMA           reduce using rule 100 (cte -> STRING savestringconst .)
    HACER           reduce using rule 100 (cte -> STRING savestringconst .)
    HASTA           reduce using rule 100 (cte -> STRING savestringconst .)


state 119

    (102) savestringconst -> empty .

    RBRACK          reduce using rule 102 (savestringconst -> empty .)
    TIMES           reduce using rule 102 (savestringconst -> empty .)
    DIVIDE          reduce using rule 102 (savestringconst -> empty .)
    PLUS            reduce using rule 102 (savestringconst -> empty .)
    MINUS           reduce using rule 102 (savestringconst -> empty .)
    GTHAN           reduce using rule 102 (savestringconst -> empty .)
    LTHAN           reduce using rule 102 (savestringconst -> empty .)
    EQLOP           reduce using rule 102 (savestringconst -> empty .)
    GEQUAL          reduce using rule 102 (savestringconst -> empty .)
    LEQUAL          reduce using rule 102 (savestringconst -> empty .)
    ABRACKET        reduce using rule 102 (savestringconst -> empty .)
    RBRACKET        reduce using rule 102 (savestringconst -> empty .)
    ID              reduce using rule 102 (savestringconst -> empty .)
    REGRESA         reduce using rule 102 (savestringconst -> empty .)
    LEE             reduce using rule 102 (savestringconst -> empty .)
    ESCRIBE         reduce using rule 102 (savestringconst -> empty .)
    SI              reduce using rule 102 (savestringconst -> empty .)
    MIENTRAS        reduce using rule 102 (savestringconst -> empty .)
    DESDE           reduce using rule 102 (savestringconst -> empty .)
    LPAREN          reduce using rule 102 (savestringconst -> empty .)
    NUMBER          reduce using rule 102 (savestringconst -> empty .)
    CTEF            reduce using rule 102 (savestringconst -> empty .)
    CTEC            reduce using rule 102 (savestringconst -> empty .)
    STRING          reduce using rule 102 (savestringconst -> empty .)
    RPAREN          reduce using rule 102 (savestringconst -> empty .)
    SEMICOL         reduce using rule 102 (savestringconst -> empty .)
    COMMA           reduce using rule 102 (savestringconst -> empty .)
    HACER           reduce using rule 102 (savestringconst -> empty .)
    HASTA           reduce using rule 102 (savestringconst -> empty .)


state 120

    (51) bloqueb -> estatuto . bloqueb
    (50) bloqueb -> . RBRACKET helper
    (51) bloqueb -> . estatuto bloqueb
    (127) estatuto -> . asignacion
    (128) estatuto -> . funcionvoid
    (129) estatuto -> . retorno
    (130) estatuto -> . lee
    (131) estatuto -> . escritura
    (132) estatuto -> . decision
    (133) estatuto -> . repeticioncond
    (134) estatuto -> . repeticionnocond
    (135) estatuto -> . expresion
    (59) asignacion -> . ID EQUAL asignacionb
    (60) asignacion -> . ID asign EQUAL asignacionb
    (65) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (63) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (71) lee -> . LEE LPAREN id leeb
    (75) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (79) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (85) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (89) repeticionnocond -> . DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    RBRACKET        shift and go to state 122
    ID              shift and go to state 93
    REGRESA         shift and go to state 95
    LEE             shift and go to state 96
    ESCRIBE         shift and go to state 97
    SI              shift and go to state 98
    MIENTRAS        shift and go to state 99
    DESDE           shift and go to state 100
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 120
    bloqueb                        shift and go to state 158
    asignacion                     shift and go to state 84
    funcionvoid                    shift and go to state 85
    retorno                        shift and go to state 86
    lee                            shift and go to state 87
    escritura                      shift and go to state 88
    decision                       shift and go to state 89
    repeticioncond                 shift and go to state 90
    repeticionnocond               shift and go to state 91
    expresion                      shift and go to state 92
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 121

    (48) bloque -> LBRACKET estatuto bloqueb .

    $end            reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    FUNCION         reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    PRINCIPAL       reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    SINO            reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    RBRACKET        reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    ID              reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    REGRESA         reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    LEE             reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    ESCRIBE         reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    SI              reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    MIENTRAS        reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    DESDE           reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    LPAREN          reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    PLUS            reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    MINUS           reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    NUMBER          reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    CTEF            reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    CTEC            reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)
    STRING          reduce using rule 48 (bloque -> LBRACKET estatuto bloqueb .)


state 122

    (50) bloqueb -> RBRACKET . helper
    (52) helper -> . empty
    (136) empty -> .

    $end            reduce using rule 136 (empty -> .)
    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)
    SINO            reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    helper                         shift and go to state 159
    empty                          shift and go to state 160

state 123

    (59) asignacion -> ID EQUAL . asignacionb
    (61) asignacionb -> . expresion SEMICOL
    (62) asignacionb -> . ID asign SEMICOL
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 161
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacionb                    shift and go to state 162
    expresion                      shift and go to state 163
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 124

    (60) asignacion -> ID asign . EQUAL asignacionb
    (123) factor -> ID asign .

    EQUAL           shift and go to state 164
    TIMES           reduce using rule 123 (factor -> ID asign .)
    DIVIDE          reduce using rule 123 (factor -> ID asign .)
    PLUS            reduce using rule 123 (factor -> ID asign .)
    MINUS           reduce using rule 123 (factor -> ID asign .)
    GTHAN           reduce using rule 123 (factor -> ID asign .)
    LTHAN           reduce using rule 123 (factor -> ID asign .)
    EQLOP           reduce using rule 123 (factor -> ID asign .)
    GEQUAL          reduce using rule 123 (factor -> ID asign .)
    LEQUAL          reduce using rule 123 (factor -> ID asign .)
    ABRACKET        reduce using rule 123 (factor -> ID asign .)
    RBRACKET        reduce using rule 123 (factor -> ID asign .)
    ID              reduce using rule 123 (factor -> ID asign .)
    REGRESA         reduce using rule 123 (factor -> ID asign .)
    LEE             reduce using rule 123 (factor -> ID asign .)
    ESCRIBE         reduce using rule 123 (factor -> ID asign .)
    SI              reduce using rule 123 (factor -> ID asign .)
    MIENTRAS        reduce using rule 123 (factor -> ID asign .)
    DESDE           reduce using rule 123 (factor -> ID asign .)
    LPAREN          reduce using rule 123 (factor -> ID asign .)
    NUMBER          reduce using rule 123 (factor -> ID asign .)
    CTEF            reduce using rule 123 (factor -> ID asign .)
    CTEC            reduce using rule 123 (factor -> ID asign .)
    STRING          reduce using rule 123 (factor -> ID asign .)


state 125

    (65) funcionvoid -> ID LPAREN . fnvn1 expresion fnvn2 funcionvoidb
    (119) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (68) fnvn1 -> . empty
    (124) llamadafun -> . empty
    (136) empty -> .

    LPAREN          reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    fnvn1                          shift and go to state 165
    llamadafun                     shift and go to state 166
    empty                          shift and go to state 167

state 126

    (53) asign -> LBRACK . arrn expresion arrn2 RBRACK arrn3
    (54) asign -> LBRACK . arrn CTEI arrn2 RBRACK arrn3
    (55) asign -> LBRACK . arrn CTEC arrn2 RBRACK arrn3
    (56) arrn -> . empty
    (136) empty -> .

    CTEI            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    arrn                           shift and go to state 168
    empty                          shift and go to state 169

state 127

    (118) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 170


state 128

    (119) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (123) factor -> ID . asign
    (96) cte -> ID .
    (53) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (55) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 171
    TIMES           reduce using rule 96 (cte -> ID .)
    DIVIDE          reduce using rule 96 (cte -> ID .)
    PLUS            reduce using rule 96 (cte -> ID .)
    MINUS           reduce using rule 96 (cte -> ID .)
    GTHAN           reduce using rule 96 (cte -> ID .)
    LTHAN           reduce using rule 96 (cte -> ID .)
    EQLOP           reduce using rule 96 (cte -> ID .)
    GEQUAL          reduce using rule 96 (cte -> ID .)
    LEQUAL          reduce using rule 96 (cte -> ID .)
    ABRACKET        reduce using rule 96 (cte -> ID .)
    RPAREN          reduce using rule 96 (cte -> ID .)
    COMMA           reduce using rule 96 (cte -> ID .)
    RBRACKET        reduce using rule 96 (cte -> ID .)
    ID              reduce using rule 96 (cte -> ID .)
    REGRESA         reduce using rule 96 (cte -> ID .)
    LEE             reduce using rule 96 (cte -> ID .)
    ESCRIBE         reduce using rule 96 (cte -> ID .)
    SI              reduce using rule 96 (cte -> ID .)
    MIENTRAS        reduce using rule 96 (cte -> ID .)
    DESDE           reduce using rule 96 (cte -> ID .)
    NUMBER          reduce using rule 96 (cte -> ID .)
    CTEF            reduce using rule 96 (cte -> ID .)
    CTEC            reduce using rule 96 (cte -> ID .)
    STRING          reduce using rule 96 (cte -> ID .)
    SEMICOL         reduce using rule 96 (cte -> ID .)
    RBRACK          reduce using rule 96 (cte -> ID .)
    HACER           reduce using rule 96 (cte -> ID .)
    HASTA           reduce using rule 96 (cte -> ID .)
    LBRACK          shift and go to state 126

  ! LPAREN          [ reduce using rule 96 (cte -> ID .) ]

    asign                          shift and go to state 172

state 129

    (63) retorno -> REGRESA LPAREN . expresion retn RPAREN SEMICOL
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 173
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 130

    (71) lee -> LEE LPAREN . id leeb
    (9) id -> . ID agregavar
    (10) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 174

state 131

    (75) escritura -> ESCRIBE LPAREN . expresion prin1 escriturab
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 175
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 132

    (79) decision -> SI LPAREN . expresion pn1 RPAREN ENTONCES decisionb
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 176
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 133

    (85) repeticioncond -> MIENTRAS rcn1 . LPAREN expresion RPAREN HAZ rcn2 bloque rcn3

    LPAREN          shift and go to state 177


state 134

    (86) rcn1 -> empty .

    LPAREN          reduce using rule 86 (rcn1 -> empty .)


state 135

    (89) repeticionnocond -> DESDE asignacioncond . HASTA exp repnoconn HACER bloque repnoconn2

    HASTA           shift and go to state 178


state 136

    (90) asignacioncond -> ID . EQUAL asignacioncondb
    (91) asignacioncond -> ID . asign EQUAL asignacioncondb
    (53) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (55) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

    EQUAL           shift and go to state 179
    LBRACK          shift and go to state 126

    asign                          shift and go to state 180

state 137

    (104) expresion -> exp GTHAN . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 181
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 138

    (105) expresion -> exp LTHAN . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 182
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 139

    (106) expresion -> exp EQLOP . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 183
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 140

    (107) expresion -> exp GEQUAL . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 184
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 141

    (108) expresion -> exp LEQUAL . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 185
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 142

    (109) expresion -> exp ABRACKET . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 186
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 143

    (111) exp -> termino expb .

    GTHAN           reduce using rule 111 (exp -> termino expb .)
    LTHAN           reduce using rule 111 (exp -> termino expb .)
    EQLOP           reduce using rule 111 (exp -> termino expb .)
    GEQUAL          reduce using rule 111 (exp -> termino expb .)
    LEQUAL          reduce using rule 111 (exp -> termino expb .)
    ABRACKET        reduce using rule 111 (exp -> termino expb .)
    RBRACKET        reduce using rule 111 (exp -> termino expb .)
    ID              reduce using rule 111 (exp -> termino expb .)
    REGRESA         reduce using rule 111 (exp -> termino expb .)
    LEE             reduce using rule 111 (exp -> termino expb .)
    ESCRIBE         reduce using rule 111 (exp -> termino expb .)
    SI              reduce using rule 111 (exp -> termino expb .)
    MIENTRAS        reduce using rule 111 (exp -> termino expb .)
    DESDE           reduce using rule 111 (exp -> termino expb .)
    LPAREN          reduce using rule 111 (exp -> termino expb .)
    PLUS            reduce using rule 111 (exp -> termino expb .)
    MINUS           reduce using rule 111 (exp -> termino expb .)
    NUMBER          reduce using rule 111 (exp -> termino expb .)
    CTEF            reduce using rule 111 (exp -> termino expb .)
    CTEC            reduce using rule 111 (exp -> termino expb .)
    STRING          reduce using rule 111 (exp -> termino expb .)
    RPAREN          reduce using rule 111 (exp -> termino expb .)
    SEMICOL         reduce using rule 111 (exp -> termino expb .)
    COMMA           reduce using rule 111 (exp -> termino expb .)
    RBRACK          reduce using rule 111 (exp -> termino expb .)
    HACER           reduce using rule 111 (exp -> termino expb .)
    HASTA           reduce using rule 111 (exp -> termino expb .)


state 144

    (112) expb -> PLUS . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 187
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 145

    (113) expb -> MINUS . exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 188
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 146

    (115) termino -> factor terminob .

    PLUS            reduce using rule 115 (termino -> factor terminob .)
    MINUS           reduce using rule 115 (termino -> factor terminob .)
    GTHAN           reduce using rule 115 (termino -> factor terminob .)
    LTHAN           reduce using rule 115 (termino -> factor terminob .)
    EQLOP           reduce using rule 115 (termino -> factor terminob .)
    GEQUAL          reduce using rule 115 (termino -> factor terminob .)
    LEQUAL          reduce using rule 115 (termino -> factor terminob .)
    ABRACKET        reduce using rule 115 (termino -> factor terminob .)
    RBRACKET        reduce using rule 115 (termino -> factor terminob .)
    ID              reduce using rule 115 (termino -> factor terminob .)
    REGRESA         reduce using rule 115 (termino -> factor terminob .)
    LEE             reduce using rule 115 (termino -> factor terminob .)
    ESCRIBE         reduce using rule 115 (termino -> factor terminob .)
    SI              reduce using rule 115 (termino -> factor terminob .)
    MIENTRAS        reduce using rule 115 (termino -> factor terminob .)
    DESDE           reduce using rule 115 (termino -> factor terminob .)
    LPAREN          reduce using rule 115 (termino -> factor terminob .)
    NUMBER          reduce using rule 115 (termino -> factor terminob .)
    CTEF            reduce using rule 115 (termino -> factor terminob .)
    CTEC            reduce using rule 115 (termino -> factor terminob .)
    STRING          reduce using rule 115 (termino -> factor terminob .)
    RPAREN          reduce using rule 115 (termino -> factor terminob .)
    SEMICOL         reduce using rule 115 (termino -> factor terminob .)
    COMMA           reduce using rule 115 (termino -> factor terminob .)
    RBRACK          reduce using rule 115 (termino -> factor terminob .)
    HACER           reduce using rule 115 (termino -> factor terminob .)
    HASTA           reduce using rule 115 (termino -> factor terminob .)


state 147

    (116) terminob -> TIMES . termino
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    termino                        shift and go to state 189
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 148

    (117) terminob -> DIVIDE . termino
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    termino                        shift and go to state 190
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 149

    (120) factor -> PLUS cte .

    TIMES           reduce using rule 120 (factor -> PLUS cte .)
    DIVIDE          reduce using rule 120 (factor -> PLUS cte .)
    PLUS            reduce using rule 120 (factor -> PLUS cte .)
    MINUS           reduce using rule 120 (factor -> PLUS cte .)
    GTHAN           reduce using rule 120 (factor -> PLUS cte .)
    LTHAN           reduce using rule 120 (factor -> PLUS cte .)
    EQLOP           reduce using rule 120 (factor -> PLUS cte .)
    GEQUAL          reduce using rule 120 (factor -> PLUS cte .)
    LEQUAL          reduce using rule 120 (factor -> PLUS cte .)
    ABRACKET        reduce using rule 120 (factor -> PLUS cte .)
    RBRACKET        reduce using rule 120 (factor -> PLUS cte .)
    ID              reduce using rule 120 (factor -> PLUS cte .)
    REGRESA         reduce using rule 120 (factor -> PLUS cte .)
    LEE             reduce using rule 120 (factor -> PLUS cte .)
    ESCRIBE         reduce using rule 120 (factor -> PLUS cte .)
    SI              reduce using rule 120 (factor -> PLUS cte .)
    MIENTRAS        reduce using rule 120 (factor -> PLUS cte .)
    DESDE           reduce using rule 120 (factor -> PLUS cte .)
    LPAREN          reduce using rule 120 (factor -> PLUS cte .)
    NUMBER          reduce using rule 120 (factor -> PLUS cte .)
    CTEF            reduce using rule 120 (factor -> PLUS cte .)
    CTEC            reduce using rule 120 (factor -> PLUS cte .)
    STRING          reduce using rule 120 (factor -> PLUS cte .)
    RPAREN          reduce using rule 120 (factor -> PLUS cte .)
    SEMICOL         reduce using rule 120 (factor -> PLUS cte .)
    COMMA           reduce using rule 120 (factor -> PLUS cte .)
    RBRACK          reduce using rule 120 (factor -> PLUS cte .)
    HACER           reduce using rule 120 (factor -> PLUS cte .)
    HASTA           reduce using rule 120 (factor -> PLUS cte .)


state 150

    (121) factor -> MINUS cte .

    TIMES           reduce using rule 121 (factor -> MINUS cte .)
    DIVIDE          reduce using rule 121 (factor -> MINUS cte .)
    PLUS            reduce using rule 121 (factor -> MINUS cte .)
    MINUS           reduce using rule 121 (factor -> MINUS cte .)
    GTHAN           reduce using rule 121 (factor -> MINUS cte .)
    LTHAN           reduce using rule 121 (factor -> MINUS cte .)
    EQLOP           reduce using rule 121 (factor -> MINUS cte .)
    GEQUAL          reduce using rule 121 (factor -> MINUS cte .)
    LEQUAL          reduce using rule 121 (factor -> MINUS cte .)
    ABRACKET        reduce using rule 121 (factor -> MINUS cte .)
    RBRACKET        reduce using rule 121 (factor -> MINUS cte .)
    ID              reduce using rule 121 (factor -> MINUS cte .)
    REGRESA         reduce using rule 121 (factor -> MINUS cte .)
    LEE             reduce using rule 121 (factor -> MINUS cte .)
    ESCRIBE         reduce using rule 121 (factor -> MINUS cte .)
    SI              reduce using rule 121 (factor -> MINUS cte .)
    MIENTRAS        reduce using rule 121 (factor -> MINUS cte .)
    DESDE           reduce using rule 121 (factor -> MINUS cte .)
    LPAREN          reduce using rule 121 (factor -> MINUS cte .)
    NUMBER          reduce using rule 121 (factor -> MINUS cte .)
    CTEF            reduce using rule 121 (factor -> MINUS cte .)
    CTEC            reduce using rule 121 (factor -> MINUS cte .)
    STRING          reduce using rule 121 (factor -> MINUS cte .)
    RPAREN          reduce using rule 121 (factor -> MINUS cte .)
    SEMICOL         reduce using rule 121 (factor -> MINUS cte .)
    COMMA           reduce using rule 121 (factor -> MINUS cte .)
    RBRACK          reduce using rule 121 (factor -> MINUS cte .)
    HACER           reduce using rule 121 (factor -> MINUS cte .)
    HASTA           reduce using rule 121 (factor -> MINUS cte .)


state 151

    (43) funcionc -> vars agregacont . bloque reinicio funcion
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 191

state 152

    (46) agregacont -> empty .

    LBRACKET        reduce using rule 46 (agregacont -> empty .)


state 153

    (44) funcionc -> agregacont bloque . reinicio funcion
    (47) reinicio -> . empty
    (136) empty -> .

    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)

    reinicio                       shift and go to state 192
    empty                          shift and go to state 193

state 154

    (41) funcionb -> varsfunc RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 41 (funcionb -> varsfunc RPAREN testeru funcionc .)


state 155

    (32) varsfuncb -> id COMMA varsfuncb .

    RPAREN          reduce using rule 32 (varsfuncb -> id COMMA varsfuncb .)


state 156

    (10) id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .

    COMMA           reduce using rule 10 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    SEMICOL         reduce using rule 10 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    RPAREN          reduce using rule 10 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)


state 157

    (12) arreglo2 -> empty .

    COMMA           reduce using rule 12 (arreglo2 -> empty .)
    SEMICOL         reduce using rule 12 (arreglo2 -> empty .)
    RPAREN          reduce using rule 12 (arreglo2 -> empty .)


state 158

    (51) bloqueb -> estatuto bloqueb .

    $end            reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    FUNCION         reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    PRINCIPAL       reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    SINO            reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    RBRACKET        reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    ID              reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    REGRESA         reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    LEE             reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    ESCRIBE         reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    SI              reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    MIENTRAS        reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    DESDE           reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    LPAREN          reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    PLUS            reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    MINUS           reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    NUMBER          reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    CTEF            reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    CTEC            reduce using rule 51 (bloqueb -> estatuto bloqueb .)
    STRING          reduce using rule 51 (bloqueb -> estatuto bloqueb .)


state 159

    (50) bloqueb -> RBRACKET helper .

    $end            reduce using rule 50 (bloqueb -> RBRACKET helper .)
    FUNCION         reduce using rule 50 (bloqueb -> RBRACKET helper .)
    PRINCIPAL       reduce using rule 50 (bloqueb -> RBRACKET helper .)
    SINO            reduce using rule 50 (bloqueb -> RBRACKET helper .)
    RBRACKET        reduce using rule 50 (bloqueb -> RBRACKET helper .)
    ID              reduce using rule 50 (bloqueb -> RBRACKET helper .)
    REGRESA         reduce using rule 50 (bloqueb -> RBRACKET helper .)
    LEE             reduce using rule 50 (bloqueb -> RBRACKET helper .)
    ESCRIBE         reduce using rule 50 (bloqueb -> RBRACKET helper .)
    SI              reduce using rule 50 (bloqueb -> RBRACKET helper .)
    MIENTRAS        reduce using rule 50 (bloqueb -> RBRACKET helper .)
    DESDE           reduce using rule 50 (bloqueb -> RBRACKET helper .)
    LPAREN          reduce using rule 50 (bloqueb -> RBRACKET helper .)
    PLUS            reduce using rule 50 (bloqueb -> RBRACKET helper .)
    MINUS           reduce using rule 50 (bloqueb -> RBRACKET helper .)
    NUMBER          reduce using rule 50 (bloqueb -> RBRACKET helper .)
    CTEF            reduce using rule 50 (bloqueb -> RBRACKET helper .)
    CTEC            reduce using rule 50 (bloqueb -> RBRACKET helper .)
    STRING          reduce using rule 50 (bloqueb -> RBRACKET helper .)


state 160

    (52) helper -> empty .

    $end            reduce using rule 52 (helper -> empty .)
    FUNCION         reduce using rule 52 (helper -> empty .)
    PRINCIPAL       reduce using rule 52 (helper -> empty .)
    SINO            reduce using rule 52 (helper -> empty .)
    RBRACKET        reduce using rule 52 (helper -> empty .)
    ID              reduce using rule 52 (helper -> empty .)
    REGRESA         reduce using rule 52 (helper -> empty .)
    LEE             reduce using rule 52 (helper -> empty .)
    ESCRIBE         reduce using rule 52 (helper -> empty .)
    SI              reduce using rule 52 (helper -> empty .)
    MIENTRAS        reduce using rule 52 (helper -> empty .)
    DESDE           reduce using rule 52 (helper -> empty .)
    LPAREN          reduce using rule 52 (helper -> empty .)
    PLUS            reduce using rule 52 (helper -> empty .)
    MINUS           reduce using rule 52 (helper -> empty .)
    NUMBER          reduce using rule 52 (helper -> empty .)
    CTEF            reduce using rule 52 (helper -> empty .)
    CTEC            reduce using rule 52 (helper -> empty .)
    STRING          reduce using rule 52 (helper -> empty .)


state 161

    (62) asignacionb -> ID . asign SEMICOL
    (119) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (123) factor -> ID . asign
    (96) cte -> ID .
    (53) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (55) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

    LPAREN          shift and go to state 171
    TIMES           reduce using rule 96 (cte -> ID .)
    DIVIDE          reduce using rule 96 (cte -> ID .)
    PLUS            reduce using rule 96 (cte -> ID .)
    MINUS           reduce using rule 96 (cte -> ID .)
    GTHAN           reduce using rule 96 (cte -> ID .)
    LTHAN           reduce using rule 96 (cte -> ID .)
    EQLOP           reduce using rule 96 (cte -> ID .)
    GEQUAL          reduce using rule 96 (cte -> ID .)
    LEQUAL          reduce using rule 96 (cte -> ID .)
    ABRACKET        reduce using rule 96 (cte -> ID .)
    SEMICOL         reduce using rule 96 (cte -> ID .)
    LBRACK          shift and go to state 126

    asign                          shift and go to state 194

state 162

    (59) asignacion -> ID EQUAL asignacionb .

    RBRACKET        reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    ID              reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    REGRESA         reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    LEE             reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    ESCRIBE         reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    SI              reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    MIENTRAS        reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    DESDE           reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    LPAREN          reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    PLUS            reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    MINUS           reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    NUMBER          reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    CTEF            reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    CTEC            reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)
    STRING          reduce using rule 59 (asignacion -> ID EQUAL asignacionb .)


state 163

    (61) asignacionb -> expresion . SEMICOL

    SEMICOL         shift and go to state 195


state 164

    (60) asignacion -> ID asign EQUAL . asignacionb
    (61) asignacionb -> . expresion SEMICOL
    (62) asignacionb -> . ID asign SEMICOL
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 161
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacionb                    shift and go to state 196
    expresion                      shift and go to state 163
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 165

    (65) funcionvoid -> ID LPAREN fnvn1 . expresion fnvn2 funcionvoidb
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 197
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 166

    (119) factor -> ID LPAREN llamadafun . expresion llamadafun2 RPAREN llamadafun3
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 198
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 167

    (68) fnvn1 -> empty .
    (124) llamadafun -> empty .

  ! reduce/reduce conflict for LPAREN resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for NUMBER resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEC resolved using rule 68 (fnvn1 -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 68 (fnvn1 -> empty .)
    LPAREN          reduce using rule 68 (fnvn1 -> empty .)
    ID              reduce using rule 68 (fnvn1 -> empty .)
    PLUS            reduce using rule 68 (fnvn1 -> empty .)
    MINUS           reduce using rule 68 (fnvn1 -> empty .)
    NUMBER          reduce using rule 68 (fnvn1 -> empty .)
    CTEF            reduce using rule 68 (fnvn1 -> empty .)
    CTEC            reduce using rule 68 (fnvn1 -> empty .)
    STRING          reduce using rule 68 (fnvn1 -> empty .)

  ! LPAREN          [ reduce using rule 124 (llamadafun -> empty .) ]
  ! ID              [ reduce using rule 124 (llamadafun -> empty .) ]
  ! PLUS            [ reduce using rule 124 (llamadafun -> empty .) ]
  ! MINUS           [ reduce using rule 124 (llamadafun -> empty .) ]
  ! NUMBER          [ reduce using rule 124 (llamadafun -> empty .) ]
  ! CTEF            [ reduce using rule 124 (llamadafun -> empty .) ]
  ! CTEC            [ reduce using rule 124 (llamadafun -> empty .) ]
  ! STRING          [ reduce using rule 124 (llamadafun -> empty .) ]


state 168

    (53) asign -> LBRACK arrn . expresion arrn2 RBRACK arrn3
    (54) asign -> LBRACK arrn . CTEI arrn2 RBRACK arrn3
    (55) asign -> LBRACK arrn . CTEC arrn2 RBRACK arrn3
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    CTEI            shift and go to state 200
    CTEC            shift and go to state 201
    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    STRING          shift and go to state 79

    expresion                      shift and go to state 199
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 169

    (56) arrn -> empty .

    CTEI            reduce using rule 56 (arrn -> empty .)
    CTEC            reduce using rule 56 (arrn -> empty .)
    LPAREN          reduce using rule 56 (arrn -> empty .)
    ID              reduce using rule 56 (arrn -> empty .)
    PLUS            reduce using rule 56 (arrn -> empty .)
    MINUS           reduce using rule 56 (arrn -> empty .)
    NUMBER          reduce using rule 56 (arrn -> empty .)
    CTEF            reduce using rule 56 (arrn -> empty .)
    STRING          reduce using rule 56 (arrn -> empty .)


state 170

    (118) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    EQLOP           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    GEQUAL          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    LEQUAL          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    ABRACKET        reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    REGRESA         reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    LEE             reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    ESCRIBE         reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    SI              reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    MIENTRAS        reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    DESDE           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    CTEC            reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    SEMICOL         reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    RBRACK          reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    HACER           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)
    HASTA           reduce using rule 118 (factor -> LPAREN expresion RPAREN .)


state 171

    (119) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (124) llamadafun -> . empty
    (136) empty -> .

    LPAREN          reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    llamadafun                     shift and go to state 166
    empty                          shift and go to state 202

state 172

    (123) factor -> ID asign .

    TIMES           reduce using rule 123 (factor -> ID asign .)
    DIVIDE          reduce using rule 123 (factor -> ID asign .)
    PLUS            reduce using rule 123 (factor -> ID asign .)
    MINUS           reduce using rule 123 (factor -> ID asign .)
    GTHAN           reduce using rule 123 (factor -> ID asign .)
    LTHAN           reduce using rule 123 (factor -> ID asign .)
    EQLOP           reduce using rule 123 (factor -> ID asign .)
    GEQUAL          reduce using rule 123 (factor -> ID asign .)
    LEQUAL          reduce using rule 123 (factor -> ID asign .)
    ABRACKET        reduce using rule 123 (factor -> ID asign .)
    RPAREN          reduce using rule 123 (factor -> ID asign .)
    COMMA           reduce using rule 123 (factor -> ID asign .)
    RBRACKET        reduce using rule 123 (factor -> ID asign .)
    ID              reduce using rule 123 (factor -> ID asign .)
    REGRESA         reduce using rule 123 (factor -> ID asign .)
    LEE             reduce using rule 123 (factor -> ID asign .)
    ESCRIBE         reduce using rule 123 (factor -> ID asign .)
    SI              reduce using rule 123 (factor -> ID asign .)
    MIENTRAS        reduce using rule 123 (factor -> ID asign .)
    DESDE           reduce using rule 123 (factor -> ID asign .)
    LPAREN          reduce using rule 123 (factor -> ID asign .)
    NUMBER          reduce using rule 123 (factor -> ID asign .)
    CTEF            reduce using rule 123 (factor -> ID asign .)
    CTEC            reduce using rule 123 (factor -> ID asign .)
    STRING          reduce using rule 123 (factor -> ID asign .)
    SEMICOL         reduce using rule 123 (factor -> ID asign .)
    RBRACK          reduce using rule 123 (factor -> ID asign .)
    HACER           reduce using rule 123 (factor -> ID asign .)
    HASTA           reduce using rule 123 (factor -> ID asign .)


state 173

    (63) retorno -> REGRESA LPAREN expresion . retn RPAREN SEMICOL
    (64) retn -> . empty
    (136) empty -> .

    RPAREN          reduce using rule 136 (empty -> .)

    retn                           shift and go to state 203
    empty                          shift and go to state 204

state 174

    (71) lee -> LEE LPAREN id . leeb
    (72) leeb -> . RPAREN leen SEMICOL
    (73) leeb -> . COMMA leen id leeb

    RPAREN          shift and go to state 206
    COMMA           shift and go to state 207

    leeb                           shift and go to state 205

state 175

    (75) escritura -> ESCRIBE LPAREN expresion . prin1 escriturab
    (78) prin1 -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)

    prin1                          shift and go to state 208
    empty                          shift and go to state 209

state 176

    (79) decision -> SI LPAREN expresion . pn1 RPAREN ENTONCES decisionb
    (80) pn1 -> . empty
    (136) empty -> .

    RPAREN          reduce using rule 136 (empty -> .)

    pn1                            shift and go to state 210
    empty                          shift and go to state 211

state 177

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN . expresion RPAREN HAZ rcn2 bloque rcn3
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 212
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 178

    (89) repeticionnocond -> DESDE asignacioncond HASTA . exp repnoconn HACER bloque repnoconn2
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 213
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 179

    (90) asignacioncond -> ID EQUAL . asignacioncondb
    (94) asignacioncondb -> . exp
    (95) asignacioncondb -> . ID asign
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 214
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacioncondb                shift and go to state 215
    exp                            shift and go to state 216
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 180

    (91) asignacioncond -> ID asign . EQUAL asignacioncondb

    EQUAL           shift and go to state 217


state 181

    (104) expresion -> exp GTHAN exp .

    RBRACKET        reduce using rule 104 (expresion -> exp GTHAN exp .)
    ID              reduce using rule 104 (expresion -> exp GTHAN exp .)
    REGRESA         reduce using rule 104 (expresion -> exp GTHAN exp .)
    LEE             reduce using rule 104 (expresion -> exp GTHAN exp .)
    ESCRIBE         reduce using rule 104 (expresion -> exp GTHAN exp .)
    SI              reduce using rule 104 (expresion -> exp GTHAN exp .)
    MIENTRAS        reduce using rule 104 (expresion -> exp GTHAN exp .)
    DESDE           reduce using rule 104 (expresion -> exp GTHAN exp .)
    LPAREN          reduce using rule 104 (expresion -> exp GTHAN exp .)
    PLUS            reduce using rule 104 (expresion -> exp GTHAN exp .)
    MINUS           reduce using rule 104 (expresion -> exp GTHAN exp .)
    NUMBER          reduce using rule 104 (expresion -> exp GTHAN exp .)
    CTEF            reduce using rule 104 (expresion -> exp GTHAN exp .)
    CTEC            reduce using rule 104 (expresion -> exp GTHAN exp .)
    STRING          reduce using rule 104 (expresion -> exp GTHAN exp .)
    RPAREN          reduce using rule 104 (expresion -> exp GTHAN exp .)
    SEMICOL         reduce using rule 104 (expresion -> exp GTHAN exp .)
    COMMA           reduce using rule 104 (expresion -> exp GTHAN exp .)
    RBRACK          reduce using rule 104 (expresion -> exp GTHAN exp .)


state 182

    (105) expresion -> exp LTHAN exp .

    RBRACKET        reduce using rule 105 (expresion -> exp LTHAN exp .)
    ID              reduce using rule 105 (expresion -> exp LTHAN exp .)
    REGRESA         reduce using rule 105 (expresion -> exp LTHAN exp .)
    LEE             reduce using rule 105 (expresion -> exp LTHAN exp .)
    ESCRIBE         reduce using rule 105 (expresion -> exp LTHAN exp .)
    SI              reduce using rule 105 (expresion -> exp LTHAN exp .)
    MIENTRAS        reduce using rule 105 (expresion -> exp LTHAN exp .)
    DESDE           reduce using rule 105 (expresion -> exp LTHAN exp .)
    LPAREN          reduce using rule 105 (expresion -> exp LTHAN exp .)
    PLUS            reduce using rule 105 (expresion -> exp LTHAN exp .)
    MINUS           reduce using rule 105 (expresion -> exp LTHAN exp .)
    NUMBER          reduce using rule 105 (expresion -> exp LTHAN exp .)
    CTEF            reduce using rule 105 (expresion -> exp LTHAN exp .)
    CTEC            reduce using rule 105 (expresion -> exp LTHAN exp .)
    STRING          reduce using rule 105 (expresion -> exp LTHAN exp .)
    RPAREN          reduce using rule 105 (expresion -> exp LTHAN exp .)
    SEMICOL         reduce using rule 105 (expresion -> exp LTHAN exp .)
    COMMA           reduce using rule 105 (expresion -> exp LTHAN exp .)
    RBRACK          reduce using rule 105 (expresion -> exp LTHAN exp .)


state 183

    (106) expresion -> exp EQLOP exp .

    RBRACKET        reduce using rule 106 (expresion -> exp EQLOP exp .)
    ID              reduce using rule 106 (expresion -> exp EQLOP exp .)
    REGRESA         reduce using rule 106 (expresion -> exp EQLOP exp .)
    LEE             reduce using rule 106 (expresion -> exp EQLOP exp .)
    ESCRIBE         reduce using rule 106 (expresion -> exp EQLOP exp .)
    SI              reduce using rule 106 (expresion -> exp EQLOP exp .)
    MIENTRAS        reduce using rule 106 (expresion -> exp EQLOP exp .)
    DESDE           reduce using rule 106 (expresion -> exp EQLOP exp .)
    LPAREN          reduce using rule 106 (expresion -> exp EQLOP exp .)
    PLUS            reduce using rule 106 (expresion -> exp EQLOP exp .)
    MINUS           reduce using rule 106 (expresion -> exp EQLOP exp .)
    NUMBER          reduce using rule 106 (expresion -> exp EQLOP exp .)
    CTEF            reduce using rule 106 (expresion -> exp EQLOP exp .)
    CTEC            reduce using rule 106 (expresion -> exp EQLOP exp .)
    STRING          reduce using rule 106 (expresion -> exp EQLOP exp .)
    RPAREN          reduce using rule 106 (expresion -> exp EQLOP exp .)
    SEMICOL         reduce using rule 106 (expresion -> exp EQLOP exp .)
    COMMA           reduce using rule 106 (expresion -> exp EQLOP exp .)
    RBRACK          reduce using rule 106 (expresion -> exp EQLOP exp .)


state 184

    (107) expresion -> exp GEQUAL exp .

    RBRACKET        reduce using rule 107 (expresion -> exp GEQUAL exp .)
    ID              reduce using rule 107 (expresion -> exp GEQUAL exp .)
    REGRESA         reduce using rule 107 (expresion -> exp GEQUAL exp .)
    LEE             reduce using rule 107 (expresion -> exp GEQUAL exp .)
    ESCRIBE         reduce using rule 107 (expresion -> exp GEQUAL exp .)
    SI              reduce using rule 107 (expresion -> exp GEQUAL exp .)
    MIENTRAS        reduce using rule 107 (expresion -> exp GEQUAL exp .)
    DESDE           reduce using rule 107 (expresion -> exp GEQUAL exp .)
    LPAREN          reduce using rule 107 (expresion -> exp GEQUAL exp .)
    PLUS            reduce using rule 107 (expresion -> exp GEQUAL exp .)
    MINUS           reduce using rule 107 (expresion -> exp GEQUAL exp .)
    NUMBER          reduce using rule 107 (expresion -> exp GEQUAL exp .)
    CTEF            reduce using rule 107 (expresion -> exp GEQUAL exp .)
    CTEC            reduce using rule 107 (expresion -> exp GEQUAL exp .)
    STRING          reduce using rule 107 (expresion -> exp GEQUAL exp .)
    RPAREN          reduce using rule 107 (expresion -> exp GEQUAL exp .)
    SEMICOL         reduce using rule 107 (expresion -> exp GEQUAL exp .)
    COMMA           reduce using rule 107 (expresion -> exp GEQUAL exp .)
    RBRACK          reduce using rule 107 (expresion -> exp GEQUAL exp .)


state 185

    (108) expresion -> exp LEQUAL exp .

    RBRACKET        reduce using rule 108 (expresion -> exp LEQUAL exp .)
    ID              reduce using rule 108 (expresion -> exp LEQUAL exp .)
    REGRESA         reduce using rule 108 (expresion -> exp LEQUAL exp .)
    LEE             reduce using rule 108 (expresion -> exp LEQUAL exp .)
    ESCRIBE         reduce using rule 108 (expresion -> exp LEQUAL exp .)
    SI              reduce using rule 108 (expresion -> exp LEQUAL exp .)
    MIENTRAS        reduce using rule 108 (expresion -> exp LEQUAL exp .)
    DESDE           reduce using rule 108 (expresion -> exp LEQUAL exp .)
    LPAREN          reduce using rule 108 (expresion -> exp LEQUAL exp .)
    PLUS            reduce using rule 108 (expresion -> exp LEQUAL exp .)
    MINUS           reduce using rule 108 (expresion -> exp LEQUAL exp .)
    NUMBER          reduce using rule 108 (expresion -> exp LEQUAL exp .)
    CTEF            reduce using rule 108 (expresion -> exp LEQUAL exp .)
    CTEC            reduce using rule 108 (expresion -> exp LEQUAL exp .)
    STRING          reduce using rule 108 (expresion -> exp LEQUAL exp .)
    RPAREN          reduce using rule 108 (expresion -> exp LEQUAL exp .)
    SEMICOL         reduce using rule 108 (expresion -> exp LEQUAL exp .)
    COMMA           reduce using rule 108 (expresion -> exp LEQUAL exp .)
    RBRACK          reduce using rule 108 (expresion -> exp LEQUAL exp .)


state 186

    (109) expresion -> exp ABRACKET exp .

    RBRACKET        reduce using rule 109 (expresion -> exp ABRACKET exp .)
    ID              reduce using rule 109 (expresion -> exp ABRACKET exp .)
    REGRESA         reduce using rule 109 (expresion -> exp ABRACKET exp .)
    LEE             reduce using rule 109 (expresion -> exp ABRACKET exp .)
    ESCRIBE         reduce using rule 109 (expresion -> exp ABRACKET exp .)
    SI              reduce using rule 109 (expresion -> exp ABRACKET exp .)
    MIENTRAS        reduce using rule 109 (expresion -> exp ABRACKET exp .)
    DESDE           reduce using rule 109 (expresion -> exp ABRACKET exp .)
    LPAREN          reduce using rule 109 (expresion -> exp ABRACKET exp .)
    PLUS            reduce using rule 109 (expresion -> exp ABRACKET exp .)
    MINUS           reduce using rule 109 (expresion -> exp ABRACKET exp .)
    NUMBER          reduce using rule 109 (expresion -> exp ABRACKET exp .)
    CTEF            reduce using rule 109 (expresion -> exp ABRACKET exp .)
    CTEC            reduce using rule 109 (expresion -> exp ABRACKET exp .)
    STRING          reduce using rule 109 (expresion -> exp ABRACKET exp .)
    RPAREN          reduce using rule 109 (expresion -> exp ABRACKET exp .)
    SEMICOL         reduce using rule 109 (expresion -> exp ABRACKET exp .)
    COMMA           reduce using rule 109 (expresion -> exp ABRACKET exp .)
    RBRACK          reduce using rule 109 (expresion -> exp ABRACKET exp .)


state 187

    (112) expb -> PLUS exp .

    GTHAN           reduce using rule 112 (expb -> PLUS exp .)
    LTHAN           reduce using rule 112 (expb -> PLUS exp .)
    EQLOP           reduce using rule 112 (expb -> PLUS exp .)
    GEQUAL          reduce using rule 112 (expb -> PLUS exp .)
    LEQUAL          reduce using rule 112 (expb -> PLUS exp .)
    ABRACKET        reduce using rule 112 (expb -> PLUS exp .)
    RBRACKET        reduce using rule 112 (expb -> PLUS exp .)
    ID              reduce using rule 112 (expb -> PLUS exp .)
    REGRESA         reduce using rule 112 (expb -> PLUS exp .)
    LEE             reduce using rule 112 (expb -> PLUS exp .)
    ESCRIBE         reduce using rule 112 (expb -> PLUS exp .)
    SI              reduce using rule 112 (expb -> PLUS exp .)
    MIENTRAS        reduce using rule 112 (expb -> PLUS exp .)
    DESDE           reduce using rule 112 (expb -> PLUS exp .)
    LPAREN          reduce using rule 112 (expb -> PLUS exp .)
    PLUS            reduce using rule 112 (expb -> PLUS exp .)
    MINUS           reduce using rule 112 (expb -> PLUS exp .)
    NUMBER          reduce using rule 112 (expb -> PLUS exp .)
    CTEF            reduce using rule 112 (expb -> PLUS exp .)
    CTEC            reduce using rule 112 (expb -> PLUS exp .)
    STRING          reduce using rule 112 (expb -> PLUS exp .)
    RPAREN          reduce using rule 112 (expb -> PLUS exp .)
    SEMICOL         reduce using rule 112 (expb -> PLUS exp .)
    COMMA           reduce using rule 112 (expb -> PLUS exp .)
    RBRACK          reduce using rule 112 (expb -> PLUS exp .)
    HACER           reduce using rule 112 (expb -> PLUS exp .)
    HASTA           reduce using rule 112 (expb -> PLUS exp .)


state 188

    (113) expb -> MINUS exp .

    GTHAN           reduce using rule 113 (expb -> MINUS exp .)
    LTHAN           reduce using rule 113 (expb -> MINUS exp .)
    EQLOP           reduce using rule 113 (expb -> MINUS exp .)
    GEQUAL          reduce using rule 113 (expb -> MINUS exp .)
    LEQUAL          reduce using rule 113 (expb -> MINUS exp .)
    ABRACKET        reduce using rule 113 (expb -> MINUS exp .)
    RBRACKET        reduce using rule 113 (expb -> MINUS exp .)
    ID              reduce using rule 113 (expb -> MINUS exp .)
    REGRESA         reduce using rule 113 (expb -> MINUS exp .)
    LEE             reduce using rule 113 (expb -> MINUS exp .)
    ESCRIBE         reduce using rule 113 (expb -> MINUS exp .)
    SI              reduce using rule 113 (expb -> MINUS exp .)
    MIENTRAS        reduce using rule 113 (expb -> MINUS exp .)
    DESDE           reduce using rule 113 (expb -> MINUS exp .)
    LPAREN          reduce using rule 113 (expb -> MINUS exp .)
    PLUS            reduce using rule 113 (expb -> MINUS exp .)
    MINUS           reduce using rule 113 (expb -> MINUS exp .)
    NUMBER          reduce using rule 113 (expb -> MINUS exp .)
    CTEF            reduce using rule 113 (expb -> MINUS exp .)
    CTEC            reduce using rule 113 (expb -> MINUS exp .)
    STRING          reduce using rule 113 (expb -> MINUS exp .)
    RPAREN          reduce using rule 113 (expb -> MINUS exp .)
    SEMICOL         reduce using rule 113 (expb -> MINUS exp .)
    COMMA           reduce using rule 113 (expb -> MINUS exp .)
    RBRACK          reduce using rule 113 (expb -> MINUS exp .)
    HACER           reduce using rule 113 (expb -> MINUS exp .)
    HASTA           reduce using rule 113 (expb -> MINUS exp .)


state 189

    (116) terminob -> TIMES termino .

    PLUS            reduce using rule 116 (terminob -> TIMES termino .)
    MINUS           reduce using rule 116 (terminob -> TIMES termino .)
    GTHAN           reduce using rule 116 (terminob -> TIMES termino .)
    LTHAN           reduce using rule 116 (terminob -> TIMES termino .)
    EQLOP           reduce using rule 116 (terminob -> TIMES termino .)
    GEQUAL          reduce using rule 116 (terminob -> TIMES termino .)
    LEQUAL          reduce using rule 116 (terminob -> TIMES termino .)
    ABRACKET        reduce using rule 116 (terminob -> TIMES termino .)
    RBRACKET        reduce using rule 116 (terminob -> TIMES termino .)
    ID              reduce using rule 116 (terminob -> TIMES termino .)
    REGRESA         reduce using rule 116 (terminob -> TIMES termino .)
    LEE             reduce using rule 116 (terminob -> TIMES termino .)
    ESCRIBE         reduce using rule 116 (terminob -> TIMES termino .)
    SI              reduce using rule 116 (terminob -> TIMES termino .)
    MIENTRAS        reduce using rule 116 (terminob -> TIMES termino .)
    DESDE           reduce using rule 116 (terminob -> TIMES termino .)
    LPAREN          reduce using rule 116 (terminob -> TIMES termino .)
    NUMBER          reduce using rule 116 (terminob -> TIMES termino .)
    CTEF            reduce using rule 116 (terminob -> TIMES termino .)
    CTEC            reduce using rule 116 (terminob -> TIMES termino .)
    STRING          reduce using rule 116 (terminob -> TIMES termino .)
    RPAREN          reduce using rule 116 (terminob -> TIMES termino .)
    SEMICOL         reduce using rule 116 (terminob -> TIMES termino .)
    COMMA           reduce using rule 116 (terminob -> TIMES termino .)
    RBRACK          reduce using rule 116 (terminob -> TIMES termino .)
    HACER           reduce using rule 116 (terminob -> TIMES termino .)
    HASTA           reduce using rule 116 (terminob -> TIMES termino .)


state 190

    (117) terminob -> DIVIDE termino .

    PLUS            reduce using rule 117 (terminob -> DIVIDE termino .)
    MINUS           reduce using rule 117 (terminob -> DIVIDE termino .)
    GTHAN           reduce using rule 117 (terminob -> DIVIDE termino .)
    LTHAN           reduce using rule 117 (terminob -> DIVIDE termino .)
    EQLOP           reduce using rule 117 (terminob -> DIVIDE termino .)
    GEQUAL          reduce using rule 117 (terminob -> DIVIDE termino .)
    LEQUAL          reduce using rule 117 (terminob -> DIVIDE termino .)
    ABRACKET        reduce using rule 117 (terminob -> DIVIDE termino .)
    RBRACKET        reduce using rule 117 (terminob -> DIVIDE termino .)
    ID              reduce using rule 117 (terminob -> DIVIDE termino .)
    REGRESA         reduce using rule 117 (terminob -> DIVIDE termino .)
    LEE             reduce using rule 117 (terminob -> DIVIDE termino .)
    ESCRIBE         reduce using rule 117 (terminob -> DIVIDE termino .)
    SI              reduce using rule 117 (terminob -> DIVIDE termino .)
    MIENTRAS        reduce using rule 117 (terminob -> DIVIDE termino .)
    DESDE           reduce using rule 117 (terminob -> DIVIDE termino .)
    LPAREN          reduce using rule 117 (terminob -> DIVIDE termino .)
    NUMBER          reduce using rule 117 (terminob -> DIVIDE termino .)
    CTEF            reduce using rule 117 (terminob -> DIVIDE termino .)
    CTEC            reduce using rule 117 (terminob -> DIVIDE termino .)
    STRING          reduce using rule 117 (terminob -> DIVIDE termino .)
    RPAREN          reduce using rule 117 (terminob -> DIVIDE termino .)
    SEMICOL         reduce using rule 117 (terminob -> DIVIDE termino .)
    COMMA           reduce using rule 117 (terminob -> DIVIDE termino .)
    RBRACK          reduce using rule 117 (terminob -> DIVIDE termino .)
    HACER           reduce using rule 117 (terminob -> DIVIDE termino .)
    HASTA           reduce using rule 117 (terminob -> DIVIDE termino .)


state 191

    (43) funcionc -> vars agregacont bloque . reinicio funcion
    (47) reinicio -> . empty
    (136) empty -> .

    FUNCION         reduce using rule 136 (empty -> .)
    PRINCIPAL       reduce using rule 136 (empty -> .)

    reinicio                       shift and go to state 218
    empty                          shift and go to state 193

state 192

    (44) funcionc -> agregacont bloque reinicio . funcion
    (35) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (36) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (37) funcion -> . empty
    (136) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 136 (empty -> .)

    funcion                        shift and go to state 219
    empty                          shift and go to state 13

state 193

    (47) reinicio -> empty .

    FUNCION         reduce using rule 47 (reinicio -> empty .)
    PRINCIPAL       reduce using rule 47 (reinicio -> empty .)


state 194

    (62) asignacionb -> ID asign . SEMICOL
    (123) factor -> ID asign .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 220
    TIMES           reduce using rule 123 (factor -> ID asign .)
    DIVIDE          reduce using rule 123 (factor -> ID asign .)
    PLUS            reduce using rule 123 (factor -> ID asign .)
    MINUS           reduce using rule 123 (factor -> ID asign .)
    GTHAN           reduce using rule 123 (factor -> ID asign .)
    LTHAN           reduce using rule 123 (factor -> ID asign .)
    EQLOP           reduce using rule 123 (factor -> ID asign .)
    GEQUAL          reduce using rule 123 (factor -> ID asign .)
    LEQUAL          reduce using rule 123 (factor -> ID asign .)
    ABRACKET        reduce using rule 123 (factor -> ID asign .)

  ! SEMICOL         [ reduce using rule 123 (factor -> ID asign .) ]


state 195

    (61) asignacionb -> expresion SEMICOL .

    RBRACKET        reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    ID              reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    REGRESA         reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    LEE             reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    ESCRIBE         reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    SI              reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    MIENTRAS        reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    DESDE           reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    LPAREN          reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    PLUS            reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    MINUS           reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    NUMBER          reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    CTEF            reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    CTEC            reduce using rule 61 (asignacionb -> expresion SEMICOL .)
    STRING          reduce using rule 61 (asignacionb -> expresion SEMICOL .)


state 196

    (60) asignacion -> ID asign EQUAL asignacionb .

    RBRACKET        reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    ID              reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    REGRESA         reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    LEE             reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    ESCRIBE         reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    SI              reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    MIENTRAS        reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    DESDE           reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    LPAREN          reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    PLUS            reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    MINUS           reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    NUMBER          reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    CTEF            reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    CTEC            reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)
    STRING          reduce using rule 60 (asignacion -> ID asign EQUAL asignacionb .)


state 197

    (65) funcionvoid -> ID LPAREN fnvn1 expresion . fnvn2 funcionvoidb
    (69) fnvn2 -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)

    fnvn2                          shift and go to state 221
    empty                          shift and go to state 222

state 198

    (119) factor -> ID LPAREN llamadafun expresion . llamadafun2 RPAREN llamadafun3
    (125) llamadafun2 -> . empty
    (136) empty -> .

    RPAREN          reduce using rule 136 (empty -> .)

    llamadafun2                    shift and go to state 223
    empty                          shift and go to state 224

state 199

    (53) asign -> LBRACK arrn expresion . arrn2 RBRACK arrn3
    (57) arrn2 -> . empty
    (136) empty -> .

    RBRACK          reduce using rule 136 (empty -> .)

    arrn2                          shift and go to state 225
    empty                          shift and go to state 226

state 200

    (54) asign -> LBRACK arrn CTEI . arrn2 RBRACK arrn3
    (57) arrn2 -> . empty
    (136) empty -> .

    RBRACK          reduce using rule 136 (empty -> .)

    arrn2                          shift and go to state 227
    empty                          shift and go to state 226

state 201

    (55) asign -> LBRACK arrn CTEC . arrn2 RBRACK arrn3
    (99) cte -> CTEC .
    (57) arrn2 -> . empty
    (136) empty -> .

  ! reduce/reduce conflict for RBRACK resolved using rule 99 (cte -> CTEC .)
    TIMES           reduce using rule 99 (cte -> CTEC .)
    DIVIDE          reduce using rule 99 (cte -> CTEC .)
    PLUS            reduce using rule 99 (cte -> CTEC .)
    MINUS           reduce using rule 99 (cte -> CTEC .)
    GTHAN           reduce using rule 99 (cte -> CTEC .)
    LTHAN           reduce using rule 99 (cte -> CTEC .)
    EQLOP           reduce using rule 99 (cte -> CTEC .)
    GEQUAL          reduce using rule 99 (cte -> CTEC .)
    LEQUAL          reduce using rule 99 (cte -> CTEC .)
    ABRACKET        reduce using rule 99 (cte -> CTEC .)
    RBRACK          reduce using rule 99 (cte -> CTEC .)

  ! RBRACK          [ reduce using rule 136 (empty -> .) ]

    arrn2                          shift and go to state 228
    empty                          shift and go to state 226

state 202

    (124) llamadafun -> empty .

    LPAREN          reduce using rule 124 (llamadafun -> empty .)
    ID              reduce using rule 124 (llamadafun -> empty .)
    PLUS            reduce using rule 124 (llamadafun -> empty .)
    MINUS           reduce using rule 124 (llamadafun -> empty .)
    NUMBER          reduce using rule 124 (llamadafun -> empty .)
    CTEF            reduce using rule 124 (llamadafun -> empty .)
    CTEC            reduce using rule 124 (llamadafun -> empty .)
    STRING          reduce using rule 124 (llamadafun -> empty .)


state 203

    (63) retorno -> REGRESA LPAREN expresion retn . RPAREN SEMICOL

    RPAREN          shift and go to state 229


state 204

    (64) retn -> empty .

    RPAREN          reduce using rule 64 (retn -> empty .)


state 205

    (71) lee -> LEE LPAREN id leeb .

    RBRACKET        reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    ID              reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    REGRESA         reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    LEE             reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    ESCRIBE         reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    SI              reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    MIENTRAS        reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    DESDE           reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    LPAREN          reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    PLUS            reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    MINUS           reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    NUMBER          reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    CTEF            reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    CTEC            reduce using rule 71 (lee -> LEE LPAREN id leeb .)
    STRING          reduce using rule 71 (lee -> LEE LPAREN id leeb .)


state 206

    (72) leeb -> RPAREN . leen SEMICOL
    (74) leen -> . empty
    (136) empty -> .

    SEMICOL         reduce using rule 136 (empty -> .)

    leen                           shift and go to state 230
    empty                          shift and go to state 231

state 207

    (73) leeb -> COMMA . leen id leeb
    (74) leen -> . empty
    (136) empty -> .

    ID              reduce using rule 136 (empty -> .)

    leen                           shift and go to state 232
    empty                          shift and go to state 231

state 208

    (75) escritura -> ESCRIBE LPAREN expresion prin1 . escriturab
    (76) escriturab -> . COMMA expresion prin1 escriturab
    (77) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 234
    RPAREN          shift and go to state 235

    escriturab                     shift and go to state 233

state 209

    (78) prin1 -> empty .

    COMMA           reduce using rule 78 (prin1 -> empty .)
    RPAREN          reduce using rule 78 (prin1 -> empty .)


state 210

    (79) decision -> SI LPAREN expresion pn1 . RPAREN ENTONCES decisionb

    RPAREN          shift and go to state 236


state 211

    (80) pn1 -> empty .

    RPAREN          reduce using rule 80 (pn1 -> empty .)


state 212

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN expresion . RPAREN HAZ rcn2 bloque rcn3

    RPAREN          shift and go to state 237


state 213

    (89) repeticionnocond -> DESDE asignacioncond HASTA exp . repnoconn HACER bloque repnoconn2
    (92) repnoconn -> . empty
    (136) empty -> .

    HACER           reduce using rule 136 (empty -> .)

    repnoconn                      shift and go to state 238
    empty                          shift and go to state 239

state 214

    (95) asignacioncondb -> ID . asign
    (119) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (123) factor -> ID . asign
    (96) cte -> ID .
    (53) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (55) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

    LPAREN          shift and go to state 171
    TIMES           reduce using rule 96 (cte -> ID .)
    DIVIDE          reduce using rule 96 (cte -> ID .)
    PLUS            reduce using rule 96 (cte -> ID .)
    MINUS           reduce using rule 96 (cte -> ID .)
    HASTA           reduce using rule 96 (cte -> ID .)
    LBRACK          shift and go to state 126

    asign                          shift and go to state 240

state 215

    (90) asignacioncond -> ID EQUAL asignacioncondb .

    HASTA           reduce using rule 90 (asignacioncond -> ID EQUAL asignacioncondb .)


state 216

    (94) asignacioncondb -> exp .

    HASTA           reduce using rule 94 (asignacioncondb -> exp .)


state 217

    (91) asignacioncond -> ID asign EQUAL . asignacioncondb
    (94) asignacioncondb -> . exp
    (95) asignacioncondb -> . ID asign
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    ID              shift and go to state 214
    LPAREN          shift and go to state 94
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacioncondb                shift and go to state 241
    exp                            shift and go to state 216
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 218

    (43) funcionc -> vars agregacont bloque reinicio . funcion
    (35) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (36) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (37) funcion -> . empty
    (136) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 136 (empty -> .)

    funcion                        shift and go to state 242
    empty                          shift and go to state 13

state 219

    (44) funcionc -> agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 44 (funcionc -> agregacont bloque reinicio funcion .)


state 220

    (62) asignacionb -> ID asign SEMICOL .

    RBRACKET        reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    ID              reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    REGRESA         reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    LEE             reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    ESCRIBE         reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    SI              reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    MIENTRAS        reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    DESDE           reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    LPAREN          reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    PLUS            reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    MINUS           reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    NUMBER          reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    CTEF            reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    CTEC            reduce using rule 62 (asignacionb -> ID asign SEMICOL .)
    STRING          reduce using rule 62 (asignacionb -> ID asign SEMICOL .)


state 221

    (65) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 . funcionvoidb
    (66) funcionvoidb -> . COMMA expresion fnvn2 funcionvoidb
    (67) funcionvoidb -> . RPAREN fnvn3 SEMICOL

    COMMA           shift and go to state 244
    RPAREN          shift and go to state 245

    funcionvoidb                   shift and go to state 243

state 222

    (69) fnvn2 -> empty .

    COMMA           reduce using rule 69 (fnvn2 -> empty .)
    RPAREN          reduce using rule 69 (fnvn2 -> empty .)


state 223

    (119) factor -> ID LPAREN llamadafun expresion llamadafun2 . RPAREN llamadafun3

    RPAREN          shift and go to state 246


state 224

    (125) llamadafun2 -> empty .

    RPAREN          reduce using rule 125 (llamadafun2 -> empty .)


state 225

    (53) asign -> LBRACK arrn expresion arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 247


state 226

    (57) arrn2 -> empty .

    RBRACK          reduce using rule 57 (arrn2 -> empty .)


state 227

    (54) asign -> LBRACK arrn CTEI arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 248


state 228

    (55) asign -> LBRACK arrn CTEC arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 249


state 229

    (63) retorno -> REGRESA LPAREN expresion retn RPAREN . SEMICOL

    SEMICOL         shift and go to state 250


state 230

    (72) leeb -> RPAREN leen . SEMICOL

    SEMICOL         shift and go to state 251


state 231

    (74) leen -> empty .

    SEMICOL         reduce using rule 74 (leen -> empty .)
    ID              reduce using rule 74 (leen -> empty .)


state 232

    (73) leeb -> COMMA leen . id leeb
    (9) id -> . ID agregavar
    (10) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 252

state 233

    (75) escritura -> ESCRIBE LPAREN expresion prin1 escriturab .

    RBRACKET        reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ID              reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    REGRESA         reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LEE             reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    SI              reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    DESDE           reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LPAREN          reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    PLUS            reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MINUS           reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    NUMBER          reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEF            reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEC            reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    STRING          reduce using rule 75 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)


state 234

    (76) escriturab -> COMMA . expresion prin1 escriturab
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 253
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 235

    (77) escriturab -> RPAREN . SEMICOL

    SEMICOL         shift and go to state 254


state 236

    (79) decision -> SI LPAREN expresion pn1 RPAREN . ENTONCES decisionb

    ENTONCES        shift and go to state 255


state 237

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN . HAZ rcn2 bloque rcn3

    HAZ             shift and go to state 256


state 238

    (89) repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn . HACER bloque repnoconn2

    HACER           shift and go to state 257


state 239

    (92) repnoconn -> empty .

    HACER           reduce using rule 92 (repnoconn -> empty .)


state 240

    (95) asignacioncondb -> ID asign .
    (123) factor -> ID asign .

  ! reduce/reduce conflict for HASTA resolved using rule 95 (asignacioncondb -> ID asign .)
    HASTA           reduce using rule 95 (asignacioncondb -> ID asign .)
    TIMES           reduce using rule 123 (factor -> ID asign .)
    DIVIDE          reduce using rule 123 (factor -> ID asign .)
    PLUS            reduce using rule 123 (factor -> ID asign .)
    MINUS           reduce using rule 123 (factor -> ID asign .)

  ! HASTA           [ reduce using rule 123 (factor -> ID asign .) ]


state 241

    (91) asignacioncond -> ID asign EQUAL asignacioncondb .

    HASTA           reduce using rule 91 (asignacioncond -> ID asign EQUAL asignacioncondb .)


state 242

    (43) funcionc -> vars agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 43 (funcionc -> vars agregacont bloque reinicio funcion .)


state 243

    (65) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .

    RBRACKET        reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    ID              reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    REGRESA         reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    LEE             reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    ESCRIBE         reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    SI              reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    MIENTRAS        reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    DESDE           reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    LPAREN          reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    PLUS            reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    MINUS           reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    NUMBER          reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    CTEF            reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    CTEC            reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    STRING          reduce using rule 65 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)


state 244

    (66) funcionvoidb -> COMMA . expresion fnvn2 funcionvoidb
    (103) expresion -> . exp
    (104) expresion -> . exp GTHAN exp
    (105) expresion -> . exp LTHAN exp
    (106) expresion -> . exp EQLOP exp
    (107) expresion -> . exp GEQUAL exp
    (108) expresion -> . exp LEQUAL exp
    (109) expresion -> . exp ABRACKET exp
    (110) exp -> . termino
    (111) exp -> . termino expb
    (114) termino -> . factor
    (115) termino -> . factor terminob
    (118) factor -> . LPAREN expresion RPAREN
    (119) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (120) factor -> . PLUS cte
    (121) factor -> . MINUS cte
    (122) factor -> . cte
    (123) factor -> . ID asign
    (96) cte -> . ID
    (97) cte -> . NUMBER saveconst
    (98) cte -> . CTEF saveconst
    (99) cte -> . CTEC
    (100) cte -> . STRING savestringconst

    LPAREN          shift and go to state 94
    ID              shift and go to state 128
    PLUS            shift and go to state 104
    MINUS           shift and go to state 106
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 258
    exp                            shift and go to state 101
    termino                        shift and go to state 102
    factor                         shift and go to state 103
    cte                            shift and go to state 105

state 245

    (67) funcionvoidb -> RPAREN . fnvn3 SEMICOL
    (70) fnvn3 -> . empty
    (136) empty -> .

    SEMICOL         reduce using rule 136 (empty -> .)

    fnvn3                          shift and go to state 259
    empty                          shift and go to state 260

state 246

    (119) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN . llamadafun3
    (126) llamadafun3 -> . empty
    (136) empty -> .

    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    RBRACK          reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    llamadafun3                    shift and go to state 261
    empty                          shift and go to state 262

state 247

    (53) asign -> LBRACK arrn expresion arrn2 RBRACK . arrn3
    (58) arrn3 -> . empty
    (136) empty -> .

    EQUAL           reduce using rule 136 (empty -> .)
    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    RBRACK          reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    arrn3                          shift and go to state 263
    empty                          shift and go to state 264

state 248

    (54) asign -> LBRACK arrn CTEI arrn2 RBRACK . arrn3
    (58) arrn3 -> . empty
    (136) empty -> .

    EQUAL           reduce using rule 136 (empty -> .)
    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    RBRACK          reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    arrn3                          shift and go to state 265
    empty                          shift and go to state 264

state 249

    (55) asign -> LBRACK arrn CTEC arrn2 RBRACK . arrn3
    (58) arrn3 -> . empty
    (136) empty -> .

    EQUAL           reduce using rule 136 (empty -> .)
    TIMES           reduce using rule 136 (empty -> .)
    DIVIDE          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    GTHAN           reduce using rule 136 (empty -> .)
    LTHAN           reduce using rule 136 (empty -> .)
    EQLOP           reduce using rule 136 (empty -> .)
    GEQUAL          reduce using rule 136 (empty -> .)
    LEQUAL          reduce using rule 136 (empty -> .)
    ABRACKET        reduce using rule 136 (empty -> .)
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)
    COMMA           reduce using rule 136 (empty -> .)
    SEMICOL         reduce using rule 136 (empty -> .)
    RBRACK          reduce using rule 136 (empty -> .)
    HACER           reduce using rule 136 (empty -> .)
    HASTA           reduce using rule 136 (empty -> .)

    arrn3                          shift and go to state 266
    empty                          shift and go to state 264

state 250

    (63) retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .

    RBRACKET        reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ID              reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    REGRESA         reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LEE             reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    SI              reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    DESDE           reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LPAREN          reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    PLUS            reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MINUS           reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    NUMBER          reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEF            reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEC            reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    STRING          reduce using rule 63 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)


state 251

    (72) leeb -> RPAREN leen SEMICOL .

    RBRACKET        reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    ID              reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    REGRESA         reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    LEE             reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    ESCRIBE         reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    SI              reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    MIENTRAS        reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    DESDE           reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    LPAREN          reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    PLUS            reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    MINUS           reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    NUMBER          reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    CTEF            reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    CTEC            reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)
    STRING          reduce using rule 72 (leeb -> RPAREN leen SEMICOL .)


state 252

    (73) leeb -> COMMA leen id . leeb
    (72) leeb -> . RPAREN leen SEMICOL
    (73) leeb -> . COMMA leen id leeb

    RPAREN          shift and go to state 206
    COMMA           shift and go to state 207

    leeb                           shift and go to state 267

state 253

    (76) escriturab -> COMMA expresion . prin1 escriturab
    (78) prin1 -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)

    prin1                          shift and go to state 268
    empty                          shift and go to state 209

state 254

    (77) escriturab -> RPAREN SEMICOL .

    RBRACKET        reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    ID              reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    REGRESA         reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    LEE             reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    SI              reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    DESDE           reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    LPAREN          reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    PLUS            reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    MINUS           reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    NUMBER          reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    CTEF            reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    CTEC            reduce using rule 77 (escriturab -> RPAREN SEMICOL .)
    STRING          reduce using rule 77 (escriturab -> RPAREN SEMICOL .)


state 255

    (79) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES . decisionb
    (81) decisionb -> . bloque pn2
    (82) decisionb -> . bloque SINO pn3 bloque pn2
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    decisionb                      shift and go to state 269
    bloque                         shift and go to state 270

state 256

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ . rcn2 bloque rcn3
    (87) rcn2 -> . empty
    (136) empty -> .

    LBRACKET        reduce using rule 136 (empty -> .)

    rcn2                           shift and go to state 271
    empty                          shift and go to state 272

state 257

    (89) repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER . bloque repnoconn2
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 273

state 258

    (66) funcionvoidb -> COMMA expresion . fnvn2 funcionvoidb
    (69) fnvn2 -> . empty
    (136) empty -> .

    COMMA           reduce using rule 136 (empty -> .)
    RPAREN          reduce using rule 136 (empty -> .)

    fnvn2                          shift and go to state 274
    empty                          shift and go to state 222

state 259

    (67) funcionvoidb -> RPAREN fnvn3 . SEMICOL

    SEMICOL         shift and go to state 275


state 260

    (70) fnvn3 -> empty .

    SEMICOL         reduce using rule 70 (fnvn3 -> empty .)


state 261

    (119) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .

    TIMES           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DIVIDE          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    PLUS            reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MINUS           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GTHAN           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LTHAN           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    EQLOP           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GEQUAL          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEQUAL          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ABRACKET        reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACKET        reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ID              reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    REGRESA         reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEE             reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ESCRIBE         reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SI              reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MIENTRAS        reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DESDE           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LPAREN          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    NUMBER          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEF            reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEC            reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    STRING          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RPAREN          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SEMICOL         reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    COMMA           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACK          reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HACER           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HASTA           reduce using rule 119 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)


state 262

    (126) llamadafun3 -> empty .

    TIMES           reduce using rule 126 (llamadafun3 -> empty .)
    DIVIDE          reduce using rule 126 (llamadafun3 -> empty .)
    PLUS            reduce using rule 126 (llamadafun3 -> empty .)
    MINUS           reduce using rule 126 (llamadafun3 -> empty .)
    GTHAN           reduce using rule 126 (llamadafun3 -> empty .)
    LTHAN           reduce using rule 126 (llamadafun3 -> empty .)
    EQLOP           reduce using rule 126 (llamadafun3 -> empty .)
    GEQUAL          reduce using rule 126 (llamadafun3 -> empty .)
    LEQUAL          reduce using rule 126 (llamadafun3 -> empty .)
    ABRACKET        reduce using rule 126 (llamadafun3 -> empty .)
    RBRACKET        reduce using rule 126 (llamadafun3 -> empty .)
    ID              reduce using rule 126 (llamadafun3 -> empty .)
    REGRESA         reduce using rule 126 (llamadafun3 -> empty .)
    LEE             reduce using rule 126 (llamadafun3 -> empty .)
    ESCRIBE         reduce using rule 126 (llamadafun3 -> empty .)
    SI              reduce using rule 126 (llamadafun3 -> empty .)
    MIENTRAS        reduce using rule 126 (llamadafun3 -> empty .)
    DESDE           reduce using rule 126 (llamadafun3 -> empty .)
    LPAREN          reduce using rule 126 (llamadafun3 -> empty .)
    NUMBER          reduce using rule 126 (llamadafun3 -> empty .)
    CTEF            reduce using rule 126 (llamadafun3 -> empty .)
    CTEC            reduce using rule 126 (llamadafun3 -> empty .)
    STRING          reduce using rule 126 (llamadafun3 -> empty .)
    RPAREN          reduce using rule 126 (llamadafun3 -> empty .)
    SEMICOL         reduce using rule 126 (llamadafun3 -> empty .)
    COMMA           reduce using rule 126 (llamadafun3 -> empty .)
    RBRACK          reduce using rule 126 (llamadafun3 -> empty .)
    HACER           reduce using rule 126 (llamadafun3 -> empty .)
    HASTA           reduce using rule 126 (llamadafun3 -> empty .)


state 263

    (53) asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ID              reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    SI              reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 53 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)


state 264

    (58) arrn3 -> empty .

    EQUAL           reduce using rule 58 (arrn3 -> empty .)
    TIMES           reduce using rule 58 (arrn3 -> empty .)
    DIVIDE          reduce using rule 58 (arrn3 -> empty .)
    PLUS            reduce using rule 58 (arrn3 -> empty .)
    MINUS           reduce using rule 58 (arrn3 -> empty .)
    GTHAN           reduce using rule 58 (arrn3 -> empty .)
    LTHAN           reduce using rule 58 (arrn3 -> empty .)
    EQLOP           reduce using rule 58 (arrn3 -> empty .)
    GEQUAL          reduce using rule 58 (arrn3 -> empty .)
    LEQUAL          reduce using rule 58 (arrn3 -> empty .)
    ABRACKET        reduce using rule 58 (arrn3 -> empty .)
    RBRACKET        reduce using rule 58 (arrn3 -> empty .)
    ID              reduce using rule 58 (arrn3 -> empty .)
    REGRESA         reduce using rule 58 (arrn3 -> empty .)
    LEE             reduce using rule 58 (arrn3 -> empty .)
    ESCRIBE         reduce using rule 58 (arrn3 -> empty .)
    SI              reduce using rule 58 (arrn3 -> empty .)
    MIENTRAS        reduce using rule 58 (arrn3 -> empty .)
    DESDE           reduce using rule 58 (arrn3 -> empty .)
    LPAREN          reduce using rule 58 (arrn3 -> empty .)
    NUMBER          reduce using rule 58 (arrn3 -> empty .)
    CTEF            reduce using rule 58 (arrn3 -> empty .)
    CTEC            reduce using rule 58 (arrn3 -> empty .)
    STRING          reduce using rule 58 (arrn3 -> empty .)
    RPAREN          reduce using rule 58 (arrn3 -> empty .)
    COMMA           reduce using rule 58 (arrn3 -> empty .)
    SEMICOL         reduce using rule 58 (arrn3 -> empty .)
    RBRACK          reduce using rule 58 (arrn3 -> empty .)
    HACER           reduce using rule 58 (arrn3 -> empty .)
    HASTA           reduce using rule 58 (arrn3 -> empty .)


state 265

    (54) asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ID              reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    SI              reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 54 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)


state 266

    (55) asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ID              reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    SI              reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 55 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)


state 267

    (73) leeb -> COMMA leen id leeb .

    RBRACKET        reduce using rule 73 (leeb -> COMMA leen id leeb .)
    ID              reduce using rule 73 (leeb -> COMMA leen id leeb .)
    REGRESA         reduce using rule 73 (leeb -> COMMA leen id leeb .)
    LEE             reduce using rule 73 (leeb -> COMMA leen id leeb .)
    ESCRIBE         reduce using rule 73 (leeb -> COMMA leen id leeb .)
    SI              reduce using rule 73 (leeb -> COMMA leen id leeb .)
    MIENTRAS        reduce using rule 73 (leeb -> COMMA leen id leeb .)
    DESDE           reduce using rule 73 (leeb -> COMMA leen id leeb .)
    LPAREN          reduce using rule 73 (leeb -> COMMA leen id leeb .)
    PLUS            reduce using rule 73 (leeb -> COMMA leen id leeb .)
    MINUS           reduce using rule 73 (leeb -> COMMA leen id leeb .)
    NUMBER          reduce using rule 73 (leeb -> COMMA leen id leeb .)
    CTEF            reduce using rule 73 (leeb -> COMMA leen id leeb .)
    CTEC            reduce using rule 73 (leeb -> COMMA leen id leeb .)
    STRING          reduce using rule 73 (leeb -> COMMA leen id leeb .)


state 268

    (76) escriturab -> COMMA expresion prin1 . escriturab
    (76) escriturab -> . COMMA expresion prin1 escriturab
    (77) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 234
    RPAREN          shift and go to state 235

    escriturab                     shift and go to state 276

state 269

    (79) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .

    RBRACKET        reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ID              reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    REGRESA         reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LEE             reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ESCRIBE         reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    SI              reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MIENTRAS        reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    DESDE           reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LPAREN          reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    PLUS            reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MINUS           reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    NUMBER          reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEF            reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEC            reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    STRING          reduce using rule 79 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)


state 270

    (81) decisionb -> bloque . pn2
    (82) decisionb -> bloque . SINO pn3 bloque pn2
    (83) pn2 -> . empty
    (136) empty -> .

    SINO            shift and go to state 278
    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    pn2                            shift and go to state 277
    empty                          shift and go to state 279

state 271

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 . bloque rcn3
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 280

state 272

    (87) rcn2 -> empty .

    LBRACKET        reduce using rule 87 (rcn2 -> empty .)


state 273

    (89) repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque . repnoconn2
    (93) repnoconn2 -> . empty
    (136) empty -> .

    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    repnoconn2                     shift and go to state 281
    empty                          shift and go to state 282

state 274

    (66) funcionvoidb -> COMMA expresion fnvn2 . funcionvoidb
    (66) funcionvoidb -> . COMMA expresion fnvn2 funcionvoidb
    (67) funcionvoidb -> . RPAREN fnvn3 SEMICOL

    COMMA           shift and go to state 244
    RPAREN          shift and go to state 245

    funcionvoidb                   shift and go to state 283

state 275

    (67) funcionvoidb -> RPAREN fnvn3 SEMICOL .

    RBRACKET        reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    ID              reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    REGRESA         reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    LEE             reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    ESCRIBE         reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    SI              reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    MIENTRAS        reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    DESDE           reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    LPAREN          reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    PLUS            reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    MINUS           reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    NUMBER          reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    CTEF            reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    CTEC            reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    STRING          reduce using rule 67 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)


state 276

    (76) escriturab -> COMMA expresion prin1 escriturab .

    RBRACKET        reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    ID              reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    REGRESA         reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    LEE             reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    SI              reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    DESDE           reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    LPAREN          reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    PLUS            reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    MINUS           reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    NUMBER          reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEF            reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEC            reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)
    STRING          reduce using rule 76 (escriturab -> COMMA expresion prin1 escriturab .)


state 277

    (81) decisionb -> bloque pn2 .

    RBRACKET        reduce using rule 81 (decisionb -> bloque pn2 .)
    ID              reduce using rule 81 (decisionb -> bloque pn2 .)
    REGRESA         reduce using rule 81 (decisionb -> bloque pn2 .)
    LEE             reduce using rule 81 (decisionb -> bloque pn2 .)
    ESCRIBE         reduce using rule 81 (decisionb -> bloque pn2 .)
    SI              reduce using rule 81 (decisionb -> bloque pn2 .)
    MIENTRAS        reduce using rule 81 (decisionb -> bloque pn2 .)
    DESDE           reduce using rule 81 (decisionb -> bloque pn2 .)
    LPAREN          reduce using rule 81 (decisionb -> bloque pn2 .)
    PLUS            reduce using rule 81 (decisionb -> bloque pn2 .)
    MINUS           reduce using rule 81 (decisionb -> bloque pn2 .)
    NUMBER          reduce using rule 81 (decisionb -> bloque pn2 .)
    CTEF            reduce using rule 81 (decisionb -> bloque pn2 .)
    CTEC            reduce using rule 81 (decisionb -> bloque pn2 .)
    STRING          reduce using rule 81 (decisionb -> bloque pn2 .)


state 278

    (82) decisionb -> bloque SINO . pn3 bloque pn2
    (84) pn3 -> . empty
    (136) empty -> .

    LBRACKET        reduce using rule 136 (empty -> .)

    pn3                            shift and go to state 284
    empty                          shift and go to state 285

state 279

    (83) pn2 -> empty .

    RBRACKET        reduce using rule 83 (pn2 -> empty .)
    ID              reduce using rule 83 (pn2 -> empty .)
    REGRESA         reduce using rule 83 (pn2 -> empty .)
    LEE             reduce using rule 83 (pn2 -> empty .)
    ESCRIBE         reduce using rule 83 (pn2 -> empty .)
    SI              reduce using rule 83 (pn2 -> empty .)
    MIENTRAS        reduce using rule 83 (pn2 -> empty .)
    DESDE           reduce using rule 83 (pn2 -> empty .)
    LPAREN          reduce using rule 83 (pn2 -> empty .)
    PLUS            reduce using rule 83 (pn2 -> empty .)
    MINUS           reduce using rule 83 (pn2 -> empty .)
    NUMBER          reduce using rule 83 (pn2 -> empty .)
    CTEF            reduce using rule 83 (pn2 -> empty .)
    CTEC            reduce using rule 83 (pn2 -> empty .)
    STRING          reduce using rule 83 (pn2 -> empty .)


state 280

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque . rcn3
    (88) rcn3 -> . empty
    (136) empty -> .

    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    rcn3                           shift and go to state 286
    empty                          shift and go to state 287

state 281

    (89) repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .

    RBRACKET        reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    ID              reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    REGRESA         reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    LEE             reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    ESCRIBE         reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    SI              reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    MIENTRAS        reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    DESDE           reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    LPAREN          reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    PLUS            reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    MINUS           reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    NUMBER          reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    CTEF            reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    CTEC            reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)
    STRING          reduce using rule 89 (repeticionnocond -> DESDE asignacioncond HASTA exp repnoconn HACER bloque repnoconn2 .)


state 282

    (93) repnoconn2 -> empty .

    RBRACKET        reduce using rule 93 (repnoconn2 -> empty .)
    ID              reduce using rule 93 (repnoconn2 -> empty .)
    REGRESA         reduce using rule 93 (repnoconn2 -> empty .)
    LEE             reduce using rule 93 (repnoconn2 -> empty .)
    ESCRIBE         reduce using rule 93 (repnoconn2 -> empty .)
    SI              reduce using rule 93 (repnoconn2 -> empty .)
    MIENTRAS        reduce using rule 93 (repnoconn2 -> empty .)
    DESDE           reduce using rule 93 (repnoconn2 -> empty .)
    LPAREN          reduce using rule 93 (repnoconn2 -> empty .)
    PLUS            reduce using rule 93 (repnoconn2 -> empty .)
    MINUS           reduce using rule 93 (repnoconn2 -> empty .)
    NUMBER          reduce using rule 93 (repnoconn2 -> empty .)
    CTEF            reduce using rule 93 (repnoconn2 -> empty .)
    CTEC            reduce using rule 93 (repnoconn2 -> empty .)
    STRING          reduce using rule 93 (repnoconn2 -> empty .)


state 283

    (66) funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .

    RBRACKET        reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    ID              reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    REGRESA         reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    LEE             reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    ESCRIBE         reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    SI              reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    MIENTRAS        reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    DESDE           reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    LPAREN          reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    PLUS            reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    MINUS           reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    NUMBER          reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    CTEF            reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    CTEC            reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    STRING          reduce using rule 66 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)


state 284

    (82) decisionb -> bloque SINO pn3 . bloque pn2
    (48) bloque -> . LBRACKET estatuto bloqueb
    (49) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 288

state 285

    (84) pn3 -> empty .

    LBRACKET        reduce using rule 84 (pn3 -> empty .)


state 286

    (85) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .

    RBRACKET        reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ID              reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    REGRESA         reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LEE             reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ESCRIBE         reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    SI              reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MIENTRAS        reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    DESDE           reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LPAREN          reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    PLUS            reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MINUS           reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    NUMBER          reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEF            reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEC            reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    STRING          reduce using rule 85 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)


state 287

    (88) rcn3 -> empty .

    RBRACKET        reduce using rule 88 (rcn3 -> empty .)
    ID              reduce using rule 88 (rcn3 -> empty .)
    REGRESA         reduce using rule 88 (rcn3 -> empty .)
    LEE             reduce using rule 88 (rcn3 -> empty .)
    ESCRIBE         reduce using rule 88 (rcn3 -> empty .)
    SI              reduce using rule 88 (rcn3 -> empty .)
    MIENTRAS        reduce using rule 88 (rcn3 -> empty .)
    DESDE           reduce using rule 88 (rcn3 -> empty .)
    LPAREN          reduce using rule 88 (rcn3 -> empty .)
    PLUS            reduce using rule 88 (rcn3 -> empty .)
    MINUS           reduce using rule 88 (rcn3 -> empty .)
    NUMBER          reduce using rule 88 (rcn3 -> empty .)
    CTEF            reduce using rule 88 (rcn3 -> empty .)
    CTEC            reduce using rule 88 (rcn3 -> empty .)
    STRING          reduce using rule 88 (rcn3 -> empty .)


state 288

    (82) decisionb -> bloque SINO pn3 bloque . pn2
    (83) pn2 -> . empty
    (136) empty -> .

    RBRACKET        reduce using rule 136 (empty -> .)
    ID              reduce using rule 136 (empty -> .)
    REGRESA         reduce using rule 136 (empty -> .)
    LEE             reduce using rule 136 (empty -> .)
    ESCRIBE         reduce using rule 136 (empty -> .)
    SI              reduce using rule 136 (empty -> .)
    MIENTRAS        reduce using rule 136 (empty -> .)
    DESDE           reduce using rule 136 (empty -> .)
    LPAREN          reduce using rule 136 (empty -> .)
    PLUS            reduce using rule 136 (empty -> .)
    MINUS           reduce using rule 136 (empty -> .)
    NUMBER          reduce using rule 136 (empty -> .)
    CTEF            reduce using rule 136 (empty -> .)
    CTEC            reduce using rule 136 (empty -> .)
    STRING          reduce using rule 136 (empty -> .)

    pn2                            shift and go to state 289
    empty                          shift and go to state 279

state 289

    (82) decisionb -> bloque SINO pn3 bloque pn2 .

    RBRACKET        reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ID              reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    REGRESA         reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LEE             reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ESCRIBE         reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    SI              reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MIENTRAS        reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    DESDE           reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LPAREN          reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    PLUS            reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MINUS           reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    NUMBER          reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEF            reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEC            reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)
    STRING          reduce using rule 82 (decisionb -> bloque SINO pn3 bloque pn2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 128 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 194 resolved as shift
WARNING: reduce/reduce conflict in state 167 resolved using rule (fnvn1 -> empty)
WARNING: rejected rule (llamadafun -> empty) in state 167
WARNING: reduce/reduce conflict in state 201 resolved using rule (cte -> CTEC)
WARNING: rejected rule (empty -> <empty>) in state 201
WARNING: reduce/reduce conflict in state 240 resolved using rule (asignacioncondb -> ID asign)
WARNING: rejected rule (factor -> ID asign) in state 240
