Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    CTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA agregarfuncmain ID SEMICOL programab
Rule 2     programab -> vars funcion programac
Rule 3     programab -> programac
Rule 4     programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque
Rule 5     prinn -> empty
Rule 6     agregarfuncmain2 -> <empty>
Rule 7     agregarfuncmain -> <empty>
Rule 8     id -> ID agregavar
Rule 9     id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2
Rule 10    arreglo -> empty
Rule 11    arreglo2 -> empty
Rule 12    tipovar -> INT agregatipo
Rule 13    tipovar -> FLOAT agregatipo
Rule 14    tipovar -> CHAR agregatipo
Rule 15    tipovarfunc -> INT agregatipo
Rule 16    tipovarfunc -> FLOAT agregatipo
Rule 17    tipovarfunc -> CHAR agregatipo
Rule 18    tipofun -> INT
Rule 19    tipofun -> FLOAT
Rule 20    tipofun -> CHAR
Rule 21    tipofun -> VOID
Rule 22    agregatipo -> <empty>
Rule 23    vars -> VAR varsb
Rule 24    varsb -> tipovar varsc
Rule 25    varsb -> contVReset empty
Rule 26    varsc -> id COMMA varsc
Rule 27    varsc -> id SEMICOL varsb
Rule 28    varsc -> empty
Rule 29    contVReset -> empty
Rule 30    varsfunc -> tipovarfunc varsfuncb
Rule 31    varsfuncb -> id COMMA varsfuncb
Rule 32    varsfuncb -> varsfunc
Rule 33    varsfuncb -> id
Rule 34    funcion -> FUNCION aux2 ID LPAREN funcionb
Rule 35    funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
Rule 36    funcion -> empty
Rule 37    aux2 -> empty
Rule 38    agregafunc -> empty
Rule 39    funcionb -> RPAREN testeru funcionc
Rule 40    funcionb -> varsfunc RPAREN testeru funcionc
Rule 41    testeru -> empty
Rule 42    funcionc -> vars agregacont bloque reinicio funcion
Rule 43    funcionc -> agregacont bloque reinicio funcion
Rule 44    funcionc -> empty
Rule 45    agregacont -> empty
Rule 46    reinicio -> empty
Rule 47    bloque -> LBRACKET estatuto bloqueb
Rule 48    bloque -> LBRACKET RBRACKET
Rule 49    bloqueb -> RBRACKET helper
Rule 50    bloqueb -> estatuto bloqueb
Rule 51    helper -> empty
Rule 52    asign -> LBRACK arrn expresion arrn2 RBRACK arrn3
Rule 53    asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3
Rule 54    asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3
Rule 55    arrn -> empty
Rule 56    arrn2 -> empty
Rule 57    arrn3 -> empty
Rule 58    asignacion -> ID EQUAL asignacionb
Rule 59    asignacion -> ID asign EQUAL asignacionb
Rule 60    asignacionb -> expresion SEMICOL
Rule 61    asignacionb -> ID asign SEMICOL
Rule 62    retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL
Rule 63    retn -> empty
Rule 64    funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
Rule 65    fnvn1 -> empty
Rule 66    fnvn2 -> empty
Rule 67    fnvn3 -> empty
Rule 68    lee -> LEE LPAREN id leeb
Rule 69    leeb -> RPAREN SEMICOL
Rule 70    leeb -> COMMA id leeb
Rule 71    escritura -> ESCRIBE LPAREN expresion prin1 escriturab
Rule 72    escriturab -> COMMA expresion prin1 escriturab
Rule 73    escriturab -> RPAREN SEMICOL
Rule 74    prin1 -> empty
Rule 75    decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
Rule 76    pn1 -> empty
Rule 77    decisionb -> bloque pn2
Rule 78    decisionb -> bloque SINO pn3 bloque pn2
Rule 79    pn2 -> empty
Rule 80    pn3 -> empty
Rule 81    repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
Rule 82    rcn1 -> empty
Rule 83    rcn2 -> empty
Rule 84    rcn3 -> empty
Rule 85    repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque
Rule 86    cte -> ID
Rule 87    cte -> NUMBER saveconst
Rule 88    cte -> CTEF
Rule 89    cte -> CTEC
Rule 90    cte -> STRING
Rule 91    saveconst -> empty
Rule 92    expresion -> exp
Rule 93    expresion -> exp GTHAN exp
Rule 94    expresion -> exp LTHAN exp
Rule 95    expresion -> exp EQLOP exp
Rule 96    expresion -> exp GEQUAL exp
Rule 97    expresion -> exp LEQUAL exp
Rule 98    expresion -> exp ABRACKET exp
Rule 99    exp -> termino
Rule 100   exp -> termino expb
Rule 101   expb -> PLUS exp
Rule 102   expb -> MINUS exp
Rule 103   termino -> factor
Rule 104   termino -> factor terminob
Rule 105   terminob -> TIMES termino
Rule 106   terminob -> DIVIDE termino
Rule 107   factor -> LPAREN expresion RPAREN
Rule 108   factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
Rule 109   factor -> PLUS cte
Rule 110   factor -> MINUS cte
Rule 111   factor -> cte
Rule 112   factor -> ID asign
Rule 113   llamadafun -> empty
Rule 114   llamadafun2 -> empty
Rule 115   llamadafun3 -> empty
Rule 116   estatuto -> asignacion
Rule 117   estatuto -> funcionvoid
Rule 118   estatuto -> retorno
Rule 119   estatuto -> lee
Rule 120   estatuto -> escritura
Rule 121   estatuto -> decision
Rule 122   estatuto -> repeticioncond
Rule 123   estatuto -> repeticionnocond
Rule 124   estatuto -> expresion
Rule 125   empty -> <empty>
Rule 126   agregavar -> <empty>

Terminals, with rules where they appear

ABRACKET             : 98
CHAR                 : 14 17 20
COLON                : 
COMMA                : 26 31 70 72
COMMENT              : 
CTEC                 : 54 89
CTEF                 : 88
CTEI                 : 53
CTES                 : 
DESDE                : 85
DIVIDE               : 106
ENTONCES             : 75
EQLOP                : 95
EQUAL                : 58 59 85
ESCRIBE              : 71
FLOAT                : 13 16 19
FUNCION              : 34 35
GEQUAL               : 96
GTHAN                : 93
HACER                : 85
HASTA                : 85
HAZ                  : 81
ID                   : 1 8 9 34 35 58 59 61 64 86 108 112
INT                  : 12 15 18
LBRACK               : 9 52 53 54
LBRACKET             : 47 48
LEE                  : 68
LEQUAL               : 97
LPAREN               : 4 34 35 62 64 68 71 75 81 107 108
LTHAN                : 94
MIENTRAS             : 81
MINUS                : 102 110
NUMBER               : 87
PLUS                 : 101 109
PRINCIPAL            : 4
PROGRAMA             : 1
RBRACK               : 9 52 53 54
RBRACKET             : 48 49
REGRESA              : 62
RPAREN               : 4 39 40 62 64 69 73 75 81 107 108
SEMICOL              : 1 27 60 61 62 64 69 73
SI                   : 75
SINO                 : 78
STRING               : 90
TIMES                : 105
VAR                  : 23
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

agregacont           : 42 43
agregafunc           : 35
agregarfuncmain      : 1
agregarfuncmain2     : 4
agregatipo           : 12 13 14 15 16 17
agregavar            : 8 9
arreglo              : 9
arreglo2             : 9
arrn                 : 52 53 54
arrn2                : 52 53 54
arrn3                : 52 53 54
asign                : 59 61 112
asignacion           : 116
asignacionb          : 58 59
aux2                 : 34 35
bloque               : 4 42 43 77 78 78 81 85
bloqueb              : 47 50
contVReset           : 25
cte                  : 9 109 110 111
decision             : 121
decisionb            : 75
empty                : 5 10 11 25 28 29 36 37 38 41 44 45 46 51 55 56 57 63 65 66 67 74 76 79 80 82 83 84 91 113 114 115
escritura            : 120
escriturab           : 71 72
estatuto             : 47 50
exp                  : 85 85 92 93 93 94 94 95 95 96 96 97 97 98 98 101 102
expb                 : 100
expresion            : 52 60 62 64 71 72 75 81 107 108 124
factor               : 103 104
fnvn1                : 64
fnvn2                : 64
fnvn3                : 64
funcion              : 2 42 43
funcionb             : 34 35
funcionc             : 39 40
funcionvoid          : 117
helper               : 49
id                   : 26 27 31 33 68 70 85
lee                  : 119
leeb                 : 68 70
llamadafun           : 108
llamadafun2          : 108
llamadafun3          : 108
pn1                  : 75
pn2                  : 77 78
pn3                  : 78
prin1                : 71 72
prinn                : 4
programa             : 0
programab            : 1
programac            : 2 3
rcn1                 : 81
rcn2                 : 81
rcn3                 : 81
reinicio             : 42 43
repeticioncond       : 122
repeticionnocond     : 123
retn                 : 62
retorno              : 118
saveconst            : 87
termino              : 99 100 105 106
terminob             : 104
testeru              : 39 40
tipofun              : 35
tipovar              : 24
tipovarfunc          : 30
vars                 : 2 42
varsb                : 23 27
varsc                : 24 26
varsfunc             : 32 40
varsfuncb            : 30 31

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA agregarfuncmain ID SEMICOL programab

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . agregarfuncmain ID SEMICOL programab
    (7) agregarfuncmain -> .

    ID              reduce using rule 7 (agregarfuncmain -> .)

    agregarfuncmain                shift and go to state 3

state 3

    (1) programa -> PROGRAMA agregarfuncmain . ID SEMICOL programab

    ID              shift and go to state 4


state 4

    (1) programa -> PROGRAMA agregarfuncmain ID . SEMICOL programab

    SEMICOL         shift and go to state 5


state 5

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL . programab
    (2) programab -> . vars funcion programac
    (3) programab -> . programac
    (23) vars -> . VAR varsb
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque

    VAR             shift and go to state 9
    PRINCIPAL       shift and go to state 10

    programab                      shift and go to state 6
    vars                           shift and go to state 7
    programac                      shift and go to state 8

state 6

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .

    $end            reduce using rule 1 (programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .)


state 7

    (2) programab -> vars . funcion programac
    (34) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (35) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (36) funcion -> . empty
    (125) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 125 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (3) programab -> programac .

    $end            reduce using rule 3 (programab -> programac .)


state 9

    (23) vars -> VAR . varsb
    (24) varsb -> . tipovar varsc
    (25) varsb -> . contVReset empty
    (12) tipovar -> . INT agregatipo
    (13) tipovar -> . FLOAT agregatipo
    (14) tipovar -> . CHAR agregatipo
    (29) contVReset -> . empty
    (125) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    varsb                          shift and go to state 14
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 10

    (4) programac -> PRINCIPAL . agregarfuncmain2 LPAREN RPAREN prinn bloque
    (6) agregarfuncmain2 -> .

    LPAREN          reduce using rule 6 (agregarfuncmain2 -> .)

    agregarfuncmain2               shift and go to state 21

state 11

    (2) programab -> vars funcion . programac
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque

    PRINCIPAL       shift and go to state 10

    programac                      shift and go to state 22

state 12

    (34) funcion -> FUNCION . aux2 ID LPAREN funcionb
    (35) funcion -> FUNCION . aux2 tipofun ID agregafunc LPAREN funcionb
    (37) aux2 -> . empty
    (125) empty -> .

    ID              reduce using rule 125 (empty -> .)
    INT             reduce using rule 125 (empty -> .)
    FLOAT           reduce using rule 125 (empty -> .)
    CHAR            reduce using rule 125 (empty -> .)
    VOID            reduce using rule 125 (empty -> .)

    aux2                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (36) funcion -> empty .

    PRINCIPAL       reduce using rule 36 (funcion -> empty .)


state 14

    (23) vars -> VAR varsb .

    FUNCION         reduce using rule 23 (vars -> VAR varsb .)
    PRINCIPAL       reduce using rule 23 (vars -> VAR varsb .)
    LBRACKET        reduce using rule 23 (vars -> VAR varsb .)


state 15

    (24) varsb -> tipovar . varsc
    (26) varsc -> . id COMMA varsc
    (27) varsc -> . id SEMICOL varsb
    (28) varsc -> . empty
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (125) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    varsc                          shift and go to state 25
    id                             shift and go to state 26
    empty                          shift and go to state 27

state 16

    (25) varsb -> contVReset . empty
    (125) empty -> .

    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    empty                          shift and go to state 29

state 17

    (29) contVReset -> empty .

    FUNCION         reduce using rule 29 (contVReset -> empty .)
    PRINCIPAL       reduce using rule 29 (contVReset -> empty .)
    LBRACKET        reduce using rule 29 (contVReset -> empty .)


state 18

    (12) tipovar -> INT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    FUNCION         reduce using rule 22 (agregatipo -> .)
    PRINCIPAL       reduce using rule 22 (agregatipo -> .)
    LBRACKET        reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 30

state 19

    (13) tipovar -> FLOAT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    FUNCION         reduce using rule 22 (agregatipo -> .)
    PRINCIPAL       reduce using rule 22 (agregatipo -> .)
    LBRACKET        reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 31

state 20

    (14) tipovar -> CHAR . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    FUNCION         reduce using rule 22 (agregatipo -> .)
    PRINCIPAL       reduce using rule 22 (agregatipo -> .)
    LBRACKET        reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 32

state 21

    (4) programac -> PRINCIPAL agregarfuncmain2 . LPAREN RPAREN prinn bloque

    LPAREN          shift and go to state 33


state 22

    (2) programab -> vars funcion programac .

    $end            reduce using rule 2 (programab -> vars funcion programac .)


state 23

    (34) funcion -> FUNCION aux2 . ID LPAREN funcionb
    (35) funcion -> FUNCION aux2 . tipofun ID agregafunc LPAREN funcionb
    (18) tipofun -> . INT
    (19) tipofun -> . FLOAT
    (20) tipofun -> . CHAR
    (21) tipofun -> . VOID

    ID              shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    VOID            shift and go to state 39

    tipofun                        shift and go to state 35

state 24

    (37) aux2 -> empty .

    ID              reduce using rule 37 (aux2 -> empty .)
    INT             reduce using rule 37 (aux2 -> empty .)
    FLOAT           reduce using rule 37 (aux2 -> empty .)
    CHAR            reduce using rule 37 (aux2 -> empty .)
    VOID            reduce using rule 37 (aux2 -> empty .)


state 25

    (24) varsb -> tipovar varsc .

    FUNCION         reduce using rule 24 (varsb -> tipovar varsc .)
    PRINCIPAL       reduce using rule 24 (varsb -> tipovar varsc .)
    LBRACKET        reduce using rule 24 (varsb -> tipovar varsc .)


state 26

    (26) varsc -> id . COMMA varsc
    (27) varsc -> id . SEMICOL varsb

    COMMA           shift and go to state 40
    SEMICOL         shift and go to state 41


state 27

    (28) varsc -> empty .

    FUNCION         reduce using rule 28 (varsc -> empty .)
    PRINCIPAL       reduce using rule 28 (varsc -> empty .)
    LBRACKET        reduce using rule 28 (varsc -> empty .)


state 28

    (8) id -> ID . agregavar
    (9) id -> ID . agregavar LBRACK arreglo cte RBRACK arreglo2
    (126) agregavar -> .

    LBRACK          reduce using rule 126 (agregavar -> .)
    COMMA           reduce using rule 126 (agregavar -> .)
    SEMICOL         reduce using rule 126 (agregavar -> .)
    RPAREN          reduce using rule 126 (agregavar -> .)
    EQUAL           reduce using rule 126 (agregavar -> .)

    agregavar                      shift and go to state 42

state 29

    (25) varsb -> contVReset empty .

    FUNCION         reduce using rule 25 (varsb -> contVReset empty .)
    PRINCIPAL       reduce using rule 25 (varsb -> contVReset empty .)
    LBRACKET        reduce using rule 25 (varsb -> contVReset empty .)


state 30

    (12) tipovar -> INT agregatipo .

    ID              reduce using rule 12 (tipovar -> INT agregatipo .)
    FUNCION         reduce using rule 12 (tipovar -> INT agregatipo .)
    PRINCIPAL       reduce using rule 12 (tipovar -> INT agregatipo .)
    LBRACKET        reduce using rule 12 (tipovar -> INT agregatipo .)


state 31

    (13) tipovar -> FLOAT agregatipo .

    ID              reduce using rule 13 (tipovar -> FLOAT agregatipo .)
    FUNCION         reduce using rule 13 (tipovar -> FLOAT agregatipo .)
    PRINCIPAL       reduce using rule 13 (tipovar -> FLOAT agregatipo .)
    LBRACKET        reduce using rule 13 (tipovar -> FLOAT agregatipo .)


state 32

    (14) tipovar -> CHAR agregatipo .

    ID              reduce using rule 14 (tipovar -> CHAR agregatipo .)
    FUNCION         reduce using rule 14 (tipovar -> CHAR agregatipo .)
    PRINCIPAL       reduce using rule 14 (tipovar -> CHAR agregatipo .)
    LBRACKET        reduce using rule 14 (tipovar -> CHAR agregatipo .)


state 33

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN . RPAREN prinn bloque

    RPAREN          shift and go to state 43


state 34

    (34) funcion -> FUNCION aux2 ID . LPAREN funcionb

    LPAREN          shift and go to state 44


state 35

    (35) funcion -> FUNCION aux2 tipofun . ID agregafunc LPAREN funcionb

    ID              shift and go to state 45


state 36

    (18) tipofun -> INT .

    ID              reduce using rule 18 (tipofun -> INT .)


state 37

    (19) tipofun -> FLOAT .

    ID              reduce using rule 19 (tipofun -> FLOAT .)


state 38

    (20) tipofun -> CHAR .

    ID              reduce using rule 20 (tipofun -> CHAR .)


state 39

    (21) tipofun -> VOID .

    ID              reduce using rule 21 (tipofun -> VOID .)


state 40

    (26) varsc -> id COMMA . varsc
    (26) varsc -> . id COMMA varsc
    (27) varsc -> . id SEMICOL varsb
    (28) varsc -> . empty
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (125) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    id                             shift and go to state 26
    varsc                          shift and go to state 46
    empty                          shift and go to state 27

state 41

    (27) varsc -> id SEMICOL . varsb
    (24) varsb -> . tipovar varsc
    (25) varsb -> . contVReset empty
    (12) tipovar -> . INT agregatipo
    (13) tipovar -> . FLOAT agregatipo
    (14) tipovar -> . CHAR agregatipo
    (29) contVReset -> . empty
    (125) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    varsb                          shift and go to state 47
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 42

    (8) id -> ID agregavar .
    (9) id -> ID agregavar . LBRACK arreglo cte RBRACK arreglo2

    COMMA           reduce using rule 8 (id -> ID agregavar .)
    SEMICOL         reduce using rule 8 (id -> ID agregavar .)
    RPAREN          reduce using rule 8 (id -> ID agregavar .)
    EQUAL           reduce using rule 8 (id -> ID agregavar .)
    LBRACK          shift and go to state 48


state 43

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN . prinn bloque
    (5) prinn -> . empty
    (125) empty -> .

    LBRACKET        reduce using rule 125 (empty -> .)

    prinn                          shift and go to state 49
    empty                          shift and go to state 50

state 44

    (34) funcion -> FUNCION aux2 ID LPAREN . funcionb
    (39) funcionb -> . RPAREN testeru funcionc
    (40) funcionb -> . varsfunc RPAREN testeru funcionc
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 51
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 45

    (35) funcion -> FUNCION aux2 tipofun ID . agregafunc LPAREN funcionb
    (38) agregafunc -> . empty
    (125) empty -> .

    LPAREN          reduce using rule 125 (empty -> .)

    agregafunc                     shift and go to state 58
    empty                          shift and go to state 59

state 46

    (26) varsc -> id COMMA varsc .

    FUNCION         reduce using rule 26 (varsc -> id COMMA varsc .)
    PRINCIPAL       reduce using rule 26 (varsc -> id COMMA varsc .)
    LBRACKET        reduce using rule 26 (varsc -> id COMMA varsc .)


state 47

    (27) varsc -> id SEMICOL varsb .

    FUNCION         reduce using rule 27 (varsc -> id SEMICOL varsb .)
    PRINCIPAL       reduce using rule 27 (varsc -> id SEMICOL varsb .)
    LBRACKET        reduce using rule 27 (varsc -> id SEMICOL varsb .)


state 48

    (9) id -> ID agregavar LBRACK . arreglo cte RBRACK arreglo2
    (10) arreglo -> . empty
    (125) empty -> .

    ID              reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    arreglo                        shift and go to state 60
    empty                          shift and go to state 61

state 49

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn . bloque
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 62

state 50

    (5) prinn -> empty .

    LBRACKET        reduce using rule 5 (prinn -> empty .)


state 51

    (34) funcion -> FUNCION aux2 ID LPAREN funcionb .

    PRINCIPAL       reduce using rule 34 (funcion -> FUNCION aux2 ID LPAREN funcionb .)


state 52

    (39) funcionb -> RPAREN . testeru funcionc
    (41) testeru -> . empty
    (125) empty -> .

    VAR             reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)

    testeru                        shift and go to state 64
    empty                          shift and go to state 65

state 53

    (40) funcionb -> varsfunc . RPAREN testeru funcionc

    RPAREN          shift and go to state 66


state 54

    (30) varsfunc -> tipovarfunc . varsfuncb
    (31) varsfuncb -> . id COMMA varsfuncb
    (32) varsfuncb -> . varsfunc
    (33) varsfuncb -> . id
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    tipovarfunc                    shift and go to state 54
    varsfuncb                      shift and go to state 67
    id                             shift and go to state 68
    varsfunc                       shift and go to state 69

state 55

    (15) tipovarfunc -> INT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    INT             reduce using rule 22 (agregatipo -> .)
    FLOAT           reduce using rule 22 (agregatipo -> .)
    CHAR            reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 70

state 56

    (16) tipovarfunc -> FLOAT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    INT             reduce using rule 22 (agregatipo -> .)
    FLOAT           reduce using rule 22 (agregatipo -> .)
    CHAR            reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 71

state 57

    (17) tipovarfunc -> CHAR . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    INT             reduce using rule 22 (agregatipo -> .)
    FLOAT           reduce using rule 22 (agregatipo -> .)
    CHAR            reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 72

state 58

    (35) funcion -> FUNCION aux2 tipofun ID agregafunc . LPAREN funcionb

    LPAREN          shift and go to state 73


state 59

    (38) agregafunc -> empty .

    LPAREN          reduce using rule 38 (agregafunc -> empty .)


state 60

    (9) id -> ID agregavar LBRACK arreglo . cte RBRACK arreglo2
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 75

state 61

    (10) arreglo -> empty .

    ID              reduce using rule 10 (arreglo -> empty .)
    NUMBER          reduce using rule 10 (arreglo -> empty .)
    CTEF            reduce using rule 10 (arreglo -> empty .)
    CTEC            reduce using rule 10 (arreglo -> empty .)
    STRING          reduce using rule 10 (arreglo -> empty .)


state 62

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque .

    $end            reduce using rule 4 (programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque .)


state 63

    (47) bloque -> LBRACKET . estatuto bloqueb
    (48) bloque -> LBRACKET . RBRACKET
    (116) estatuto -> . asignacion
    (117) estatuto -> . funcionvoid
    (118) estatuto -> . retorno
    (119) estatuto -> . lee
    (120) estatuto -> . escritura
    (121) estatuto -> . decision
    (122) estatuto -> . repeticioncond
    (123) estatuto -> . repeticionnocond
    (124) estatuto -> . expresion
    (58) asignacion -> . ID EQUAL asignacionb
    (59) asignacion -> . ID asign EQUAL asignacionb
    (64) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (62) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (68) lee -> . LEE LPAREN id leeb
    (71) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (75) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (81) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (85) repeticionnocond -> . DESDE id EQUAL exp HASTA exp HACER bloque
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    RBRACKET        shift and go to state 81
    ID              shift and go to state 91
    REGRESA         shift and go to state 93
    LEE             shift and go to state 94
    ESCRIBE         shift and go to state 95
    SI              shift and go to state 96
    MIENTRAS        shift and go to state 97
    DESDE           shift and go to state 98
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 80
    asignacion                     shift and go to state 82
    funcionvoid                    shift and go to state 83
    retorno                        shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    decision                       shift and go to state 87
    repeticioncond                 shift and go to state 88
    repeticionnocond               shift and go to state 89
    expresion                      shift and go to state 90
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 64

    (39) funcionb -> RPAREN testeru . funcionc
    (42) funcionc -> . vars agregacont bloque reinicio funcion
    (43) funcionc -> . agregacont bloque reinicio funcion
    (44) funcionc -> . empty
    (23) vars -> . VAR varsb
    (45) agregacont -> . empty
    (125) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    funcionc                       shift and go to state 105
    vars                           shift and go to state 106
    agregacont                     shift and go to state 107
    empty                          shift and go to state 108

state 65

    (41) testeru -> empty .

    VAR             reduce using rule 41 (testeru -> empty .)
    LBRACKET        reduce using rule 41 (testeru -> empty .)
    PRINCIPAL       reduce using rule 41 (testeru -> empty .)


state 66

    (40) funcionb -> varsfunc RPAREN . testeru funcionc
    (41) testeru -> . empty
    (125) empty -> .

    VAR             reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)

    testeru                        shift and go to state 109
    empty                          shift and go to state 65

state 67

    (30) varsfunc -> tipovarfunc varsfuncb .

    RPAREN          reduce using rule 30 (varsfunc -> tipovarfunc varsfuncb .)


state 68

    (31) varsfuncb -> id . COMMA varsfuncb
    (33) varsfuncb -> id .

    COMMA           shift and go to state 110
    RPAREN          reduce using rule 33 (varsfuncb -> id .)


state 69

    (32) varsfuncb -> varsfunc .

    RPAREN          reduce using rule 32 (varsfuncb -> varsfunc .)


state 70

    (15) tipovarfunc -> INT agregatipo .

    ID              reduce using rule 15 (tipovarfunc -> INT agregatipo .)
    INT             reduce using rule 15 (tipovarfunc -> INT agregatipo .)
    FLOAT           reduce using rule 15 (tipovarfunc -> INT agregatipo .)
    CHAR            reduce using rule 15 (tipovarfunc -> INT agregatipo .)


state 71

    (16) tipovarfunc -> FLOAT agregatipo .

    ID              reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)
    INT             reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)
    FLOAT           reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)
    CHAR            reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)


state 72

    (17) tipovarfunc -> CHAR agregatipo .

    ID              reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)
    INT             reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)
    FLOAT           reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)
    CHAR            reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)


state 73

    (35) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN . funcionb
    (39) funcionb -> . RPAREN testeru funcionc
    (40) funcionb -> . varsfunc RPAREN testeru funcionc
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 111
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 74

    (86) cte -> ID .

    RBRACK          reduce using rule 86 (cte -> ID .)
    TIMES           reduce using rule 86 (cte -> ID .)
    DIVIDE          reduce using rule 86 (cte -> ID .)
    PLUS            reduce using rule 86 (cte -> ID .)
    MINUS           reduce using rule 86 (cte -> ID .)
    GTHAN           reduce using rule 86 (cte -> ID .)
    LTHAN           reduce using rule 86 (cte -> ID .)
    EQLOP           reduce using rule 86 (cte -> ID .)
    GEQUAL          reduce using rule 86 (cte -> ID .)
    LEQUAL          reduce using rule 86 (cte -> ID .)
    ABRACKET        reduce using rule 86 (cte -> ID .)
    RBRACKET        reduce using rule 86 (cte -> ID .)
    ID              reduce using rule 86 (cte -> ID .)
    REGRESA         reduce using rule 86 (cte -> ID .)
    LEE             reduce using rule 86 (cte -> ID .)
    ESCRIBE         reduce using rule 86 (cte -> ID .)
    SI              reduce using rule 86 (cte -> ID .)
    MIENTRAS        reduce using rule 86 (cte -> ID .)
    DESDE           reduce using rule 86 (cte -> ID .)
    LPAREN          reduce using rule 86 (cte -> ID .)
    NUMBER          reduce using rule 86 (cte -> ID .)
    CTEF            reduce using rule 86 (cte -> ID .)
    CTEC            reduce using rule 86 (cte -> ID .)
    STRING          reduce using rule 86 (cte -> ID .)
    RPAREN          reduce using rule 86 (cte -> ID .)
    SEMICOL         reduce using rule 86 (cte -> ID .)
    COMMA           reduce using rule 86 (cte -> ID .)
    HASTA           reduce using rule 86 (cte -> ID .)
    HACER           reduce using rule 86 (cte -> ID .)


state 75

    (9) id -> ID agregavar LBRACK arreglo cte . RBRACK arreglo2

    RBRACK          shift and go to state 112


state 76

    (87) cte -> NUMBER . saveconst
    (91) saveconst -> . empty
    (125) empty -> .

    RBRACK          reduce using rule 125 (empty -> .)
    TIMES           reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GTHAN           reduce using rule 125 (empty -> .)
    LTHAN           reduce using rule 125 (empty -> .)
    EQLOP           reduce using rule 125 (empty -> .)
    GEQUAL          reduce using rule 125 (empty -> .)
    LEQUAL          reduce using rule 125 (empty -> .)
    ABRACKET        reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    SEMICOL         reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    HASTA           reduce using rule 125 (empty -> .)
    HACER           reduce using rule 125 (empty -> .)

    saveconst                      shift and go to state 113
    empty                          shift and go to state 114

state 77

    (88) cte -> CTEF .

    RBRACK          reduce using rule 88 (cte -> CTEF .)
    TIMES           reduce using rule 88 (cte -> CTEF .)
    DIVIDE          reduce using rule 88 (cte -> CTEF .)
    PLUS            reduce using rule 88 (cte -> CTEF .)
    MINUS           reduce using rule 88 (cte -> CTEF .)
    GTHAN           reduce using rule 88 (cte -> CTEF .)
    LTHAN           reduce using rule 88 (cte -> CTEF .)
    EQLOP           reduce using rule 88 (cte -> CTEF .)
    GEQUAL          reduce using rule 88 (cte -> CTEF .)
    LEQUAL          reduce using rule 88 (cte -> CTEF .)
    ABRACKET        reduce using rule 88 (cte -> CTEF .)
    RBRACKET        reduce using rule 88 (cte -> CTEF .)
    ID              reduce using rule 88 (cte -> CTEF .)
    REGRESA         reduce using rule 88 (cte -> CTEF .)
    LEE             reduce using rule 88 (cte -> CTEF .)
    ESCRIBE         reduce using rule 88 (cte -> CTEF .)
    SI              reduce using rule 88 (cte -> CTEF .)
    MIENTRAS        reduce using rule 88 (cte -> CTEF .)
    DESDE           reduce using rule 88 (cte -> CTEF .)
    LPAREN          reduce using rule 88 (cte -> CTEF .)
    NUMBER          reduce using rule 88 (cte -> CTEF .)
    CTEF            reduce using rule 88 (cte -> CTEF .)
    CTEC            reduce using rule 88 (cte -> CTEF .)
    STRING          reduce using rule 88 (cte -> CTEF .)
    RPAREN          reduce using rule 88 (cte -> CTEF .)
    SEMICOL         reduce using rule 88 (cte -> CTEF .)
    COMMA           reduce using rule 88 (cte -> CTEF .)
    HASTA           reduce using rule 88 (cte -> CTEF .)
    HACER           reduce using rule 88 (cte -> CTEF .)


state 78

    (89) cte -> CTEC .

    RBRACK          reduce using rule 89 (cte -> CTEC .)
    TIMES           reduce using rule 89 (cte -> CTEC .)
    DIVIDE          reduce using rule 89 (cte -> CTEC .)
    PLUS            reduce using rule 89 (cte -> CTEC .)
    MINUS           reduce using rule 89 (cte -> CTEC .)
    GTHAN           reduce using rule 89 (cte -> CTEC .)
    LTHAN           reduce using rule 89 (cte -> CTEC .)
    EQLOP           reduce using rule 89 (cte -> CTEC .)
    GEQUAL          reduce using rule 89 (cte -> CTEC .)
    LEQUAL          reduce using rule 89 (cte -> CTEC .)
    ABRACKET        reduce using rule 89 (cte -> CTEC .)
    RBRACKET        reduce using rule 89 (cte -> CTEC .)
    ID              reduce using rule 89 (cte -> CTEC .)
    REGRESA         reduce using rule 89 (cte -> CTEC .)
    LEE             reduce using rule 89 (cte -> CTEC .)
    ESCRIBE         reduce using rule 89 (cte -> CTEC .)
    SI              reduce using rule 89 (cte -> CTEC .)
    MIENTRAS        reduce using rule 89 (cte -> CTEC .)
    DESDE           reduce using rule 89 (cte -> CTEC .)
    LPAREN          reduce using rule 89 (cte -> CTEC .)
    NUMBER          reduce using rule 89 (cte -> CTEC .)
    CTEF            reduce using rule 89 (cte -> CTEC .)
    CTEC            reduce using rule 89 (cte -> CTEC .)
    STRING          reduce using rule 89 (cte -> CTEC .)
    RPAREN          reduce using rule 89 (cte -> CTEC .)
    SEMICOL         reduce using rule 89 (cte -> CTEC .)
    COMMA           reduce using rule 89 (cte -> CTEC .)
    HASTA           reduce using rule 89 (cte -> CTEC .)
    HACER           reduce using rule 89 (cte -> CTEC .)


state 79

    (90) cte -> STRING .

    RBRACK          reduce using rule 90 (cte -> STRING .)
    TIMES           reduce using rule 90 (cte -> STRING .)
    DIVIDE          reduce using rule 90 (cte -> STRING .)
    PLUS            reduce using rule 90 (cte -> STRING .)
    MINUS           reduce using rule 90 (cte -> STRING .)
    GTHAN           reduce using rule 90 (cte -> STRING .)
    LTHAN           reduce using rule 90 (cte -> STRING .)
    EQLOP           reduce using rule 90 (cte -> STRING .)
    GEQUAL          reduce using rule 90 (cte -> STRING .)
    LEQUAL          reduce using rule 90 (cte -> STRING .)
    ABRACKET        reduce using rule 90 (cte -> STRING .)
    RBRACKET        reduce using rule 90 (cte -> STRING .)
    ID              reduce using rule 90 (cte -> STRING .)
    REGRESA         reduce using rule 90 (cte -> STRING .)
    LEE             reduce using rule 90 (cte -> STRING .)
    ESCRIBE         reduce using rule 90 (cte -> STRING .)
    SI              reduce using rule 90 (cte -> STRING .)
    MIENTRAS        reduce using rule 90 (cte -> STRING .)
    DESDE           reduce using rule 90 (cte -> STRING .)
    LPAREN          reduce using rule 90 (cte -> STRING .)
    NUMBER          reduce using rule 90 (cte -> STRING .)
    CTEF            reduce using rule 90 (cte -> STRING .)
    CTEC            reduce using rule 90 (cte -> STRING .)
    STRING          reduce using rule 90 (cte -> STRING .)
    RPAREN          reduce using rule 90 (cte -> STRING .)
    SEMICOL         reduce using rule 90 (cte -> STRING .)
    COMMA           reduce using rule 90 (cte -> STRING .)
    HASTA           reduce using rule 90 (cte -> STRING .)
    HACER           reduce using rule 90 (cte -> STRING .)


state 80

    (47) bloque -> LBRACKET estatuto . bloqueb
    (49) bloqueb -> . RBRACKET helper
    (50) bloqueb -> . estatuto bloqueb
    (116) estatuto -> . asignacion
    (117) estatuto -> . funcionvoid
    (118) estatuto -> . retorno
    (119) estatuto -> . lee
    (120) estatuto -> . escritura
    (121) estatuto -> . decision
    (122) estatuto -> . repeticioncond
    (123) estatuto -> . repeticionnocond
    (124) estatuto -> . expresion
    (58) asignacion -> . ID EQUAL asignacionb
    (59) asignacion -> . ID asign EQUAL asignacionb
    (64) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (62) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (68) lee -> . LEE LPAREN id leeb
    (71) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (75) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (81) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (85) repeticionnocond -> . DESDE id EQUAL exp HASTA exp HACER bloque
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    RBRACKET        shift and go to state 117
    ID              shift and go to state 91
    REGRESA         shift and go to state 93
    LEE             shift and go to state 94
    ESCRIBE         shift and go to state 95
    SI              shift and go to state 96
    MIENTRAS        shift and go to state 97
    DESDE           shift and go to state 98
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 115
    bloqueb                        shift and go to state 116
    asignacion                     shift and go to state 82
    funcionvoid                    shift and go to state 83
    retorno                        shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    decision                       shift and go to state 87
    repeticioncond                 shift and go to state 88
    repeticionnocond               shift and go to state 89
    expresion                      shift and go to state 90
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 81

    (48) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    FUNCION         reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    PRINCIPAL       reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    SINO            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    REGRESA         reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    LEE             reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    ESCRIBE         reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    SI              reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    MIENTRAS        reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    DESDE           reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    NUMBER          reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    CTEF            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    CTEC            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    STRING          reduce using rule 48 (bloque -> LBRACKET RBRACKET .)


state 82

    (116) estatuto -> asignacion .

    RBRACKET        reduce using rule 116 (estatuto -> asignacion .)
    ID              reduce using rule 116 (estatuto -> asignacion .)
    REGRESA         reduce using rule 116 (estatuto -> asignacion .)
    LEE             reduce using rule 116 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 116 (estatuto -> asignacion .)
    SI              reduce using rule 116 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 116 (estatuto -> asignacion .)
    DESDE           reduce using rule 116 (estatuto -> asignacion .)
    LPAREN          reduce using rule 116 (estatuto -> asignacion .)
    PLUS            reduce using rule 116 (estatuto -> asignacion .)
    MINUS           reduce using rule 116 (estatuto -> asignacion .)
    NUMBER          reduce using rule 116 (estatuto -> asignacion .)
    CTEF            reduce using rule 116 (estatuto -> asignacion .)
    CTEC            reduce using rule 116 (estatuto -> asignacion .)
    STRING          reduce using rule 116 (estatuto -> asignacion .)


state 83

    (117) estatuto -> funcionvoid .

    RBRACKET        reduce using rule 117 (estatuto -> funcionvoid .)
    ID              reduce using rule 117 (estatuto -> funcionvoid .)
    REGRESA         reduce using rule 117 (estatuto -> funcionvoid .)
    LEE             reduce using rule 117 (estatuto -> funcionvoid .)
    ESCRIBE         reduce using rule 117 (estatuto -> funcionvoid .)
    SI              reduce using rule 117 (estatuto -> funcionvoid .)
    MIENTRAS        reduce using rule 117 (estatuto -> funcionvoid .)
    DESDE           reduce using rule 117 (estatuto -> funcionvoid .)
    LPAREN          reduce using rule 117 (estatuto -> funcionvoid .)
    PLUS            reduce using rule 117 (estatuto -> funcionvoid .)
    MINUS           reduce using rule 117 (estatuto -> funcionvoid .)
    NUMBER          reduce using rule 117 (estatuto -> funcionvoid .)
    CTEF            reduce using rule 117 (estatuto -> funcionvoid .)
    CTEC            reduce using rule 117 (estatuto -> funcionvoid .)
    STRING          reduce using rule 117 (estatuto -> funcionvoid .)


state 84

    (118) estatuto -> retorno .

    RBRACKET        reduce using rule 118 (estatuto -> retorno .)
    ID              reduce using rule 118 (estatuto -> retorno .)
    REGRESA         reduce using rule 118 (estatuto -> retorno .)
    LEE             reduce using rule 118 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 118 (estatuto -> retorno .)
    SI              reduce using rule 118 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 118 (estatuto -> retorno .)
    DESDE           reduce using rule 118 (estatuto -> retorno .)
    LPAREN          reduce using rule 118 (estatuto -> retorno .)
    PLUS            reduce using rule 118 (estatuto -> retorno .)
    MINUS           reduce using rule 118 (estatuto -> retorno .)
    NUMBER          reduce using rule 118 (estatuto -> retorno .)
    CTEF            reduce using rule 118 (estatuto -> retorno .)
    CTEC            reduce using rule 118 (estatuto -> retorno .)
    STRING          reduce using rule 118 (estatuto -> retorno .)


state 85

    (119) estatuto -> lee .

    RBRACKET        reduce using rule 119 (estatuto -> lee .)
    ID              reduce using rule 119 (estatuto -> lee .)
    REGRESA         reduce using rule 119 (estatuto -> lee .)
    LEE             reduce using rule 119 (estatuto -> lee .)
    ESCRIBE         reduce using rule 119 (estatuto -> lee .)
    SI              reduce using rule 119 (estatuto -> lee .)
    MIENTRAS        reduce using rule 119 (estatuto -> lee .)
    DESDE           reduce using rule 119 (estatuto -> lee .)
    LPAREN          reduce using rule 119 (estatuto -> lee .)
    PLUS            reduce using rule 119 (estatuto -> lee .)
    MINUS           reduce using rule 119 (estatuto -> lee .)
    NUMBER          reduce using rule 119 (estatuto -> lee .)
    CTEF            reduce using rule 119 (estatuto -> lee .)
    CTEC            reduce using rule 119 (estatuto -> lee .)
    STRING          reduce using rule 119 (estatuto -> lee .)


state 86

    (120) estatuto -> escritura .

    RBRACKET        reduce using rule 120 (estatuto -> escritura .)
    ID              reduce using rule 120 (estatuto -> escritura .)
    REGRESA         reduce using rule 120 (estatuto -> escritura .)
    LEE             reduce using rule 120 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 120 (estatuto -> escritura .)
    SI              reduce using rule 120 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 120 (estatuto -> escritura .)
    DESDE           reduce using rule 120 (estatuto -> escritura .)
    LPAREN          reduce using rule 120 (estatuto -> escritura .)
    PLUS            reduce using rule 120 (estatuto -> escritura .)
    MINUS           reduce using rule 120 (estatuto -> escritura .)
    NUMBER          reduce using rule 120 (estatuto -> escritura .)
    CTEF            reduce using rule 120 (estatuto -> escritura .)
    CTEC            reduce using rule 120 (estatuto -> escritura .)
    STRING          reduce using rule 120 (estatuto -> escritura .)


state 87

    (121) estatuto -> decision .

    RBRACKET        reduce using rule 121 (estatuto -> decision .)
    ID              reduce using rule 121 (estatuto -> decision .)
    REGRESA         reduce using rule 121 (estatuto -> decision .)
    LEE             reduce using rule 121 (estatuto -> decision .)
    ESCRIBE         reduce using rule 121 (estatuto -> decision .)
    SI              reduce using rule 121 (estatuto -> decision .)
    MIENTRAS        reduce using rule 121 (estatuto -> decision .)
    DESDE           reduce using rule 121 (estatuto -> decision .)
    LPAREN          reduce using rule 121 (estatuto -> decision .)
    PLUS            reduce using rule 121 (estatuto -> decision .)
    MINUS           reduce using rule 121 (estatuto -> decision .)
    NUMBER          reduce using rule 121 (estatuto -> decision .)
    CTEF            reduce using rule 121 (estatuto -> decision .)
    CTEC            reduce using rule 121 (estatuto -> decision .)
    STRING          reduce using rule 121 (estatuto -> decision .)


state 88

    (122) estatuto -> repeticioncond .

    RBRACKET        reduce using rule 122 (estatuto -> repeticioncond .)
    ID              reduce using rule 122 (estatuto -> repeticioncond .)
    REGRESA         reduce using rule 122 (estatuto -> repeticioncond .)
    LEE             reduce using rule 122 (estatuto -> repeticioncond .)
    ESCRIBE         reduce using rule 122 (estatuto -> repeticioncond .)
    SI              reduce using rule 122 (estatuto -> repeticioncond .)
    MIENTRAS        reduce using rule 122 (estatuto -> repeticioncond .)
    DESDE           reduce using rule 122 (estatuto -> repeticioncond .)
    LPAREN          reduce using rule 122 (estatuto -> repeticioncond .)
    PLUS            reduce using rule 122 (estatuto -> repeticioncond .)
    MINUS           reduce using rule 122 (estatuto -> repeticioncond .)
    NUMBER          reduce using rule 122 (estatuto -> repeticioncond .)
    CTEF            reduce using rule 122 (estatuto -> repeticioncond .)
    CTEC            reduce using rule 122 (estatuto -> repeticioncond .)
    STRING          reduce using rule 122 (estatuto -> repeticioncond .)


state 89

    (123) estatuto -> repeticionnocond .

    RBRACKET        reduce using rule 123 (estatuto -> repeticionnocond .)
    ID              reduce using rule 123 (estatuto -> repeticionnocond .)
    REGRESA         reduce using rule 123 (estatuto -> repeticionnocond .)
    LEE             reduce using rule 123 (estatuto -> repeticionnocond .)
    ESCRIBE         reduce using rule 123 (estatuto -> repeticionnocond .)
    SI              reduce using rule 123 (estatuto -> repeticionnocond .)
    MIENTRAS        reduce using rule 123 (estatuto -> repeticionnocond .)
    DESDE           reduce using rule 123 (estatuto -> repeticionnocond .)
    LPAREN          reduce using rule 123 (estatuto -> repeticionnocond .)
    PLUS            reduce using rule 123 (estatuto -> repeticionnocond .)
    MINUS           reduce using rule 123 (estatuto -> repeticionnocond .)
    NUMBER          reduce using rule 123 (estatuto -> repeticionnocond .)
    CTEF            reduce using rule 123 (estatuto -> repeticionnocond .)
    CTEC            reduce using rule 123 (estatuto -> repeticionnocond .)
    STRING          reduce using rule 123 (estatuto -> repeticionnocond .)


state 90

    (124) estatuto -> expresion .

    RBRACKET        reduce using rule 124 (estatuto -> expresion .)
    ID              reduce using rule 124 (estatuto -> expresion .)
    REGRESA         reduce using rule 124 (estatuto -> expresion .)
    LEE             reduce using rule 124 (estatuto -> expresion .)
    ESCRIBE         reduce using rule 124 (estatuto -> expresion .)
    SI              reduce using rule 124 (estatuto -> expresion .)
    MIENTRAS        reduce using rule 124 (estatuto -> expresion .)
    DESDE           reduce using rule 124 (estatuto -> expresion .)
    LPAREN          reduce using rule 124 (estatuto -> expresion .)
    PLUS            reduce using rule 124 (estatuto -> expresion .)
    MINUS           reduce using rule 124 (estatuto -> expresion .)
    NUMBER          reduce using rule 124 (estatuto -> expresion .)
    CTEF            reduce using rule 124 (estatuto -> expresion .)
    CTEC            reduce using rule 124 (estatuto -> expresion .)
    STRING          reduce using rule 124 (estatuto -> expresion .)


state 91

    (58) asignacion -> ID . EQUAL asignacionb
    (59) asignacion -> ID . asign EQUAL asignacionb
    (64) funcionvoid -> ID . LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (108) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (112) factor -> ID . asign
    (86) cte -> ID .
    (52) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (53) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           shift and go to state 118
    LPAREN          shift and go to state 120
    TIMES           reduce using rule 86 (cte -> ID .)
    DIVIDE          reduce using rule 86 (cte -> ID .)
    PLUS            reduce using rule 86 (cte -> ID .)
    MINUS           reduce using rule 86 (cte -> ID .)
    GTHAN           reduce using rule 86 (cte -> ID .)
    LTHAN           reduce using rule 86 (cte -> ID .)
    EQLOP           reduce using rule 86 (cte -> ID .)
    GEQUAL          reduce using rule 86 (cte -> ID .)
    LEQUAL          reduce using rule 86 (cte -> ID .)
    ABRACKET        reduce using rule 86 (cte -> ID .)
    RBRACKET        reduce using rule 86 (cte -> ID .)
    ID              reduce using rule 86 (cte -> ID .)
    REGRESA         reduce using rule 86 (cte -> ID .)
    LEE             reduce using rule 86 (cte -> ID .)
    ESCRIBE         reduce using rule 86 (cte -> ID .)
    SI              reduce using rule 86 (cte -> ID .)
    MIENTRAS        reduce using rule 86 (cte -> ID .)
    DESDE           reduce using rule 86 (cte -> ID .)
    NUMBER          reduce using rule 86 (cte -> ID .)
    CTEF            reduce using rule 86 (cte -> ID .)
    CTEC            reduce using rule 86 (cte -> ID .)
    STRING          reduce using rule 86 (cte -> ID .)
    LBRACK          shift and go to state 121

  ! LPAREN          [ reduce using rule 86 (cte -> ID .) ]

    asign                          shift and go to state 119

state 92

    (107) factor -> LPAREN . expresion RPAREN
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 122
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 93

    (62) retorno -> REGRESA . LPAREN expresion retn RPAREN SEMICOL

    LPAREN          shift and go to state 124


state 94

    (68) lee -> LEE . LPAREN id leeb

    LPAREN          shift and go to state 125


state 95

    (71) escritura -> ESCRIBE . LPAREN expresion prin1 escriturab

    LPAREN          shift and go to state 126


state 96

    (75) decision -> SI . LPAREN expresion pn1 RPAREN ENTONCES decisionb

    LPAREN          shift and go to state 127


state 97

    (81) repeticioncond -> MIENTRAS . rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (82) rcn1 -> . empty
    (125) empty -> .

    LPAREN          reduce using rule 125 (empty -> .)

    rcn1                           shift and go to state 128
    empty                          shift and go to state 129

state 98

    (85) repeticionnocond -> DESDE . id EQUAL exp HASTA exp HACER bloque
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 130

state 99

    (92) expresion -> exp .
    (93) expresion -> exp . GTHAN exp
    (94) expresion -> exp . LTHAN exp
    (95) expresion -> exp . EQLOP exp
    (96) expresion -> exp . GEQUAL exp
    (97) expresion -> exp . LEQUAL exp
    (98) expresion -> exp . ABRACKET exp

    RBRACKET        reduce using rule 92 (expresion -> exp .)
    ID              reduce using rule 92 (expresion -> exp .)
    REGRESA         reduce using rule 92 (expresion -> exp .)
    LEE             reduce using rule 92 (expresion -> exp .)
    ESCRIBE         reduce using rule 92 (expresion -> exp .)
    SI              reduce using rule 92 (expresion -> exp .)
    MIENTRAS        reduce using rule 92 (expresion -> exp .)
    DESDE           reduce using rule 92 (expresion -> exp .)
    LPAREN          reduce using rule 92 (expresion -> exp .)
    PLUS            reduce using rule 92 (expresion -> exp .)
    MINUS           reduce using rule 92 (expresion -> exp .)
    NUMBER          reduce using rule 92 (expresion -> exp .)
    CTEF            reduce using rule 92 (expresion -> exp .)
    CTEC            reduce using rule 92 (expresion -> exp .)
    STRING          reduce using rule 92 (expresion -> exp .)
    RPAREN          reduce using rule 92 (expresion -> exp .)
    SEMICOL         reduce using rule 92 (expresion -> exp .)
    COMMA           reduce using rule 92 (expresion -> exp .)
    RBRACK          reduce using rule 92 (expresion -> exp .)
    GTHAN           shift and go to state 131
    LTHAN           shift and go to state 132
    EQLOP           shift and go to state 133
    GEQUAL          shift and go to state 134
    LEQUAL          shift and go to state 135
    ABRACKET        shift and go to state 136


state 100

    (99) exp -> termino .
    (100) exp -> termino . expb
    (101) expb -> . PLUS exp
    (102) expb -> . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GTHAN           reduce using rule 99 (exp -> termino .)
    LTHAN           reduce using rule 99 (exp -> termino .)
    EQLOP           reduce using rule 99 (exp -> termino .)
    GEQUAL          reduce using rule 99 (exp -> termino .)
    LEQUAL          reduce using rule 99 (exp -> termino .)
    ABRACKET        reduce using rule 99 (exp -> termino .)
    RBRACKET        reduce using rule 99 (exp -> termino .)
    ID              reduce using rule 99 (exp -> termino .)
    REGRESA         reduce using rule 99 (exp -> termino .)
    LEE             reduce using rule 99 (exp -> termino .)
    ESCRIBE         reduce using rule 99 (exp -> termino .)
    SI              reduce using rule 99 (exp -> termino .)
    MIENTRAS        reduce using rule 99 (exp -> termino .)
    DESDE           reduce using rule 99 (exp -> termino .)
    LPAREN          reduce using rule 99 (exp -> termino .)
    NUMBER          reduce using rule 99 (exp -> termino .)
    CTEF            reduce using rule 99 (exp -> termino .)
    CTEC            reduce using rule 99 (exp -> termino .)
    STRING          reduce using rule 99 (exp -> termino .)
    RPAREN          reduce using rule 99 (exp -> termino .)
    SEMICOL         reduce using rule 99 (exp -> termino .)
    COMMA           reduce using rule 99 (exp -> termino .)
    RBRACK          reduce using rule 99 (exp -> termino .)
    HASTA           reduce using rule 99 (exp -> termino .)
    HACER           reduce using rule 99 (exp -> termino .)
    PLUS            shift and go to state 138
    MINUS           shift and go to state 139

  ! PLUS            [ reduce using rule 99 (exp -> termino .) ]
  ! MINUS           [ reduce using rule 99 (exp -> termino .) ]

    expb                           shift and go to state 137

state 101

    (103) termino -> factor .
    (104) termino -> factor . terminob
    (105) terminob -> . TIMES termino
    (106) terminob -> . DIVIDE termino

    PLUS            reduce using rule 103 (termino -> factor .)
    MINUS           reduce using rule 103 (termino -> factor .)
    GTHAN           reduce using rule 103 (termino -> factor .)
    LTHAN           reduce using rule 103 (termino -> factor .)
    EQLOP           reduce using rule 103 (termino -> factor .)
    GEQUAL          reduce using rule 103 (termino -> factor .)
    LEQUAL          reduce using rule 103 (termino -> factor .)
    ABRACKET        reduce using rule 103 (termino -> factor .)
    RBRACKET        reduce using rule 103 (termino -> factor .)
    ID              reduce using rule 103 (termino -> factor .)
    REGRESA         reduce using rule 103 (termino -> factor .)
    LEE             reduce using rule 103 (termino -> factor .)
    ESCRIBE         reduce using rule 103 (termino -> factor .)
    SI              reduce using rule 103 (termino -> factor .)
    MIENTRAS        reduce using rule 103 (termino -> factor .)
    DESDE           reduce using rule 103 (termino -> factor .)
    LPAREN          reduce using rule 103 (termino -> factor .)
    NUMBER          reduce using rule 103 (termino -> factor .)
    CTEF            reduce using rule 103 (termino -> factor .)
    CTEC            reduce using rule 103 (termino -> factor .)
    STRING          reduce using rule 103 (termino -> factor .)
    RPAREN          reduce using rule 103 (termino -> factor .)
    SEMICOL         reduce using rule 103 (termino -> factor .)
    COMMA           reduce using rule 103 (termino -> factor .)
    RBRACK          reduce using rule 103 (termino -> factor .)
    HASTA           reduce using rule 103 (termino -> factor .)
    HACER           reduce using rule 103 (termino -> factor .)
    TIMES           shift and go to state 141
    DIVIDE          shift and go to state 142

    terminob                       shift and go to state 140

state 102

    (109) factor -> PLUS . cte
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 143

state 103

    (111) factor -> cte .

    TIMES           reduce using rule 111 (factor -> cte .)
    DIVIDE          reduce using rule 111 (factor -> cte .)
    PLUS            reduce using rule 111 (factor -> cte .)
    MINUS           reduce using rule 111 (factor -> cte .)
    GTHAN           reduce using rule 111 (factor -> cte .)
    LTHAN           reduce using rule 111 (factor -> cte .)
    EQLOP           reduce using rule 111 (factor -> cte .)
    GEQUAL          reduce using rule 111 (factor -> cte .)
    LEQUAL          reduce using rule 111 (factor -> cte .)
    ABRACKET        reduce using rule 111 (factor -> cte .)
    RBRACKET        reduce using rule 111 (factor -> cte .)
    ID              reduce using rule 111 (factor -> cte .)
    REGRESA         reduce using rule 111 (factor -> cte .)
    LEE             reduce using rule 111 (factor -> cte .)
    ESCRIBE         reduce using rule 111 (factor -> cte .)
    SI              reduce using rule 111 (factor -> cte .)
    MIENTRAS        reduce using rule 111 (factor -> cte .)
    DESDE           reduce using rule 111 (factor -> cte .)
    LPAREN          reduce using rule 111 (factor -> cte .)
    NUMBER          reduce using rule 111 (factor -> cte .)
    CTEF            reduce using rule 111 (factor -> cte .)
    CTEC            reduce using rule 111 (factor -> cte .)
    STRING          reduce using rule 111 (factor -> cte .)
    RPAREN          reduce using rule 111 (factor -> cte .)
    SEMICOL         reduce using rule 111 (factor -> cte .)
    COMMA           reduce using rule 111 (factor -> cte .)
    RBRACK          reduce using rule 111 (factor -> cte .)
    HASTA           reduce using rule 111 (factor -> cte .)
    HACER           reduce using rule 111 (factor -> cte .)


state 104

    (110) factor -> MINUS . cte
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 144

state 105

    (39) funcionb -> RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 39 (funcionb -> RPAREN testeru funcionc .)


state 106

    (42) funcionc -> vars . agregacont bloque reinicio funcion
    (45) agregacont -> . empty
    (125) empty -> .

    LBRACKET        reduce using rule 125 (empty -> .)

    agregacont                     shift and go to state 145
    empty                          shift and go to state 146

state 107

    (43) funcionc -> agregacont . bloque reinicio funcion
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 147

state 108

    (44) funcionc -> empty .
    (45) agregacont -> empty .

    PRINCIPAL       reduce using rule 44 (funcionc -> empty .)
    LBRACKET        reduce using rule 45 (agregacont -> empty .)


state 109

    (40) funcionb -> varsfunc RPAREN testeru . funcionc
    (42) funcionc -> . vars agregacont bloque reinicio funcion
    (43) funcionc -> . agregacont bloque reinicio funcion
    (44) funcionc -> . empty
    (23) vars -> . VAR varsb
    (45) agregacont -> . empty
    (125) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 125 (empty -> .)
    LBRACKET        reduce using rule 125 (empty -> .)

    funcionc                       shift and go to state 148
    vars                           shift and go to state 106
    agregacont                     shift and go to state 107
    empty                          shift and go to state 108

state 110

    (31) varsfuncb -> id COMMA . varsfuncb
    (31) varsfuncb -> . id COMMA varsfuncb
    (32) varsfuncb -> . varsfunc
    (33) varsfuncb -> . id
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    id                             shift and go to state 68
    varsfuncb                      shift and go to state 149
    varsfunc                       shift and go to state 69
    tipovarfunc                    shift and go to state 54

state 111

    (35) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .

    PRINCIPAL       reduce using rule 35 (funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .)


state 112

    (9) id -> ID agregavar LBRACK arreglo cte RBRACK . arreglo2
    (11) arreglo2 -> . empty
    (125) empty -> .

    COMMA           reduce using rule 125 (empty -> .)
    SEMICOL         reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    EQUAL           reduce using rule 125 (empty -> .)

    arreglo2                       shift and go to state 150
    empty                          shift and go to state 151

state 113

    (87) cte -> NUMBER saveconst .

    RBRACK          reduce using rule 87 (cte -> NUMBER saveconst .)
    TIMES           reduce using rule 87 (cte -> NUMBER saveconst .)
    DIVIDE          reduce using rule 87 (cte -> NUMBER saveconst .)
    PLUS            reduce using rule 87 (cte -> NUMBER saveconst .)
    MINUS           reduce using rule 87 (cte -> NUMBER saveconst .)
    GTHAN           reduce using rule 87 (cte -> NUMBER saveconst .)
    LTHAN           reduce using rule 87 (cte -> NUMBER saveconst .)
    EQLOP           reduce using rule 87 (cte -> NUMBER saveconst .)
    GEQUAL          reduce using rule 87 (cte -> NUMBER saveconst .)
    LEQUAL          reduce using rule 87 (cte -> NUMBER saveconst .)
    ABRACKET        reduce using rule 87 (cte -> NUMBER saveconst .)
    RBRACKET        reduce using rule 87 (cte -> NUMBER saveconst .)
    ID              reduce using rule 87 (cte -> NUMBER saveconst .)
    REGRESA         reduce using rule 87 (cte -> NUMBER saveconst .)
    LEE             reduce using rule 87 (cte -> NUMBER saveconst .)
    ESCRIBE         reduce using rule 87 (cte -> NUMBER saveconst .)
    SI              reduce using rule 87 (cte -> NUMBER saveconst .)
    MIENTRAS        reduce using rule 87 (cte -> NUMBER saveconst .)
    DESDE           reduce using rule 87 (cte -> NUMBER saveconst .)
    LPAREN          reduce using rule 87 (cte -> NUMBER saveconst .)
    NUMBER          reduce using rule 87 (cte -> NUMBER saveconst .)
    CTEF            reduce using rule 87 (cte -> NUMBER saveconst .)
    CTEC            reduce using rule 87 (cte -> NUMBER saveconst .)
    STRING          reduce using rule 87 (cte -> NUMBER saveconst .)
    RPAREN          reduce using rule 87 (cte -> NUMBER saveconst .)
    SEMICOL         reduce using rule 87 (cte -> NUMBER saveconst .)
    COMMA           reduce using rule 87 (cte -> NUMBER saveconst .)
    HASTA           reduce using rule 87 (cte -> NUMBER saveconst .)
    HACER           reduce using rule 87 (cte -> NUMBER saveconst .)


state 114

    (91) saveconst -> empty .

    RBRACK          reduce using rule 91 (saveconst -> empty .)
    TIMES           reduce using rule 91 (saveconst -> empty .)
    DIVIDE          reduce using rule 91 (saveconst -> empty .)
    PLUS            reduce using rule 91 (saveconst -> empty .)
    MINUS           reduce using rule 91 (saveconst -> empty .)
    GTHAN           reduce using rule 91 (saveconst -> empty .)
    LTHAN           reduce using rule 91 (saveconst -> empty .)
    EQLOP           reduce using rule 91 (saveconst -> empty .)
    GEQUAL          reduce using rule 91 (saveconst -> empty .)
    LEQUAL          reduce using rule 91 (saveconst -> empty .)
    ABRACKET        reduce using rule 91 (saveconst -> empty .)
    RBRACKET        reduce using rule 91 (saveconst -> empty .)
    ID              reduce using rule 91 (saveconst -> empty .)
    REGRESA         reduce using rule 91 (saveconst -> empty .)
    LEE             reduce using rule 91 (saveconst -> empty .)
    ESCRIBE         reduce using rule 91 (saveconst -> empty .)
    SI              reduce using rule 91 (saveconst -> empty .)
    MIENTRAS        reduce using rule 91 (saveconst -> empty .)
    DESDE           reduce using rule 91 (saveconst -> empty .)
    LPAREN          reduce using rule 91 (saveconst -> empty .)
    NUMBER          reduce using rule 91 (saveconst -> empty .)
    CTEF            reduce using rule 91 (saveconst -> empty .)
    CTEC            reduce using rule 91 (saveconst -> empty .)
    STRING          reduce using rule 91 (saveconst -> empty .)
    RPAREN          reduce using rule 91 (saveconst -> empty .)
    SEMICOL         reduce using rule 91 (saveconst -> empty .)
    COMMA           reduce using rule 91 (saveconst -> empty .)
    HASTA           reduce using rule 91 (saveconst -> empty .)
    HACER           reduce using rule 91 (saveconst -> empty .)


state 115

    (50) bloqueb -> estatuto . bloqueb
    (49) bloqueb -> . RBRACKET helper
    (50) bloqueb -> . estatuto bloqueb
    (116) estatuto -> . asignacion
    (117) estatuto -> . funcionvoid
    (118) estatuto -> . retorno
    (119) estatuto -> . lee
    (120) estatuto -> . escritura
    (121) estatuto -> . decision
    (122) estatuto -> . repeticioncond
    (123) estatuto -> . repeticionnocond
    (124) estatuto -> . expresion
    (58) asignacion -> . ID EQUAL asignacionb
    (59) asignacion -> . ID asign EQUAL asignacionb
    (64) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (62) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (68) lee -> . LEE LPAREN id leeb
    (71) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (75) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (81) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (85) repeticionnocond -> . DESDE id EQUAL exp HASTA exp HACER bloque
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    RBRACKET        shift and go to state 117
    ID              shift and go to state 91
    REGRESA         shift and go to state 93
    LEE             shift and go to state 94
    ESCRIBE         shift and go to state 95
    SI              shift and go to state 96
    MIENTRAS        shift and go to state 97
    DESDE           shift and go to state 98
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 115
    bloqueb                        shift and go to state 152
    asignacion                     shift and go to state 82
    funcionvoid                    shift and go to state 83
    retorno                        shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    decision                       shift and go to state 87
    repeticioncond                 shift and go to state 88
    repeticionnocond               shift and go to state 89
    expresion                      shift and go to state 90
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 116

    (47) bloque -> LBRACKET estatuto bloqueb .

    $end            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    FUNCION         reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    PRINCIPAL       reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    SINO            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    RBRACKET        reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    ID              reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    REGRESA         reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    LEE             reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    ESCRIBE         reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    SI              reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    MIENTRAS        reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    DESDE           reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    LPAREN          reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    PLUS            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    MINUS           reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    NUMBER          reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    CTEF            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    CTEC            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    STRING          reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)


state 117

    (49) bloqueb -> RBRACKET . helper
    (51) helper -> . empty
    (125) empty -> .

    $end            reduce using rule 125 (empty -> .)
    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)
    SINO            reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    helper                         shift and go to state 153
    empty                          shift and go to state 154

state 118

    (58) asignacion -> ID EQUAL . asignacionb
    (60) asignacionb -> . expresion SEMICOL
    (61) asignacionb -> . ID asign SEMICOL
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    ID              shift and go to state 155
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacionb                    shift and go to state 156
    expresion                      shift and go to state 157
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 119

    (59) asignacion -> ID asign . EQUAL asignacionb
    (112) factor -> ID asign .

    EQUAL           shift and go to state 158
    TIMES           reduce using rule 112 (factor -> ID asign .)
    DIVIDE          reduce using rule 112 (factor -> ID asign .)
    PLUS            reduce using rule 112 (factor -> ID asign .)
    MINUS           reduce using rule 112 (factor -> ID asign .)
    GTHAN           reduce using rule 112 (factor -> ID asign .)
    LTHAN           reduce using rule 112 (factor -> ID asign .)
    EQLOP           reduce using rule 112 (factor -> ID asign .)
    GEQUAL          reduce using rule 112 (factor -> ID asign .)
    LEQUAL          reduce using rule 112 (factor -> ID asign .)
    ABRACKET        reduce using rule 112 (factor -> ID asign .)
    RBRACKET        reduce using rule 112 (factor -> ID asign .)
    ID              reduce using rule 112 (factor -> ID asign .)
    REGRESA         reduce using rule 112 (factor -> ID asign .)
    LEE             reduce using rule 112 (factor -> ID asign .)
    ESCRIBE         reduce using rule 112 (factor -> ID asign .)
    SI              reduce using rule 112 (factor -> ID asign .)
    MIENTRAS        reduce using rule 112 (factor -> ID asign .)
    DESDE           reduce using rule 112 (factor -> ID asign .)
    LPAREN          reduce using rule 112 (factor -> ID asign .)
    NUMBER          reduce using rule 112 (factor -> ID asign .)
    CTEF            reduce using rule 112 (factor -> ID asign .)
    CTEC            reduce using rule 112 (factor -> ID asign .)
    STRING          reduce using rule 112 (factor -> ID asign .)


state 120

    (64) funcionvoid -> ID LPAREN . fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (108) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (65) fnvn1 -> . empty
    (113) llamadafun -> . empty
    (125) empty -> .

    LPAREN          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    fnvn1                          shift and go to state 159
    llamadafun                     shift and go to state 160
    empty                          shift and go to state 161

state 121

    (52) asign -> LBRACK . arrn expresion arrn2 RBRACK arrn3
    (53) asign -> LBRACK . arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> LBRACK . arrn CTEC arrn2 RBRACK arrn3
    (55) arrn -> . empty
    (125) empty -> .

    CTEI            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    arrn                           shift and go to state 162
    empty                          shift and go to state 163

state 122

    (107) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 164


state 123

    (108) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (112) factor -> ID . asign
    (86) cte -> ID .
    (52) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (53) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 165
    TIMES           reduce using rule 86 (cte -> ID .)
    DIVIDE          reduce using rule 86 (cte -> ID .)
    PLUS            reduce using rule 86 (cte -> ID .)
    MINUS           reduce using rule 86 (cte -> ID .)
    GTHAN           reduce using rule 86 (cte -> ID .)
    LTHAN           reduce using rule 86 (cte -> ID .)
    EQLOP           reduce using rule 86 (cte -> ID .)
    GEQUAL          reduce using rule 86 (cte -> ID .)
    LEQUAL          reduce using rule 86 (cte -> ID .)
    ABRACKET        reduce using rule 86 (cte -> ID .)
    RPAREN          reduce using rule 86 (cte -> ID .)
    COMMA           reduce using rule 86 (cte -> ID .)
    RBRACKET        reduce using rule 86 (cte -> ID .)
    ID              reduce using rule 86 (cte -> ID .)
    REGRESA         reduce using rule 86 (cte -> ID .)
    LEE             reduce using rule 86 (cte -> ID .)
    ESCRIBE         reduce using rule 86 (cte -> ID .)
    SI              reduce using rule 86 (cte -> ID .)
    MIENTRAS        reduce using rule 86 (cte -> ID .)
    DESDE           reduce using rule 86 (cte -> ID .)
    NUMBER          reduce using rule 86 (cte -> ID .)
    CTEF            reduce using rule 86 (cte -> ID .)
    CTEC            reduce using rule 86 (cte -> ID .)
    STRING          reduce using rule 86 (cte -> ID .)
    SEMICOL         reduce using rule 86 (cte -> ID .)
    RBRACK          reduce using rule 86 (cte -> ID .)
    HASTA           reduce using rule 86 (cte -> ID .)
    HACER           reduce using rule 86 (cte -> ID .)
    LBRACK          shift and go to state 121

  ! LPAREN          [ reduce using rule 86 (cte -> ID .) ]

    asign                          shift and go to state 166

state 124

    (62) retorno -> REGRESA LPAREN . expresion retn RPAREN SEMICOL
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 167
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 125

    (68) lee -> LEE LPAREN . id leeb
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 168

state 126

    (71) escritura -> ESCRIBE LPAREN . expresion prin1 escriturab
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 169
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 127

    (75) decision -> SI LPAREN . expresion pn1 RPAREN ENTONCES decisionb
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 170
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 128

    (81) repeticioncond -> MIENTRAS rcn1 . LPAREN expresion RPAREN HAZ rcn2 bloque rcn3

    LPAREN          shift and go to state 171


state 129

    (82) rcn1 -> empty .

    LPAREN          reduce using rule 82 (rcn1 -> empty .)


state 130

    (85) repeticionnocond -> DESDE id . EQUAL exp HASTA exp HACER bloque

    EQUAL           shift and go to state 172


state 131

    (93) expresion -> exp GTHAN . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 173
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 132

    (94) expresion -> exp LTHAN . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 174
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 133

    (95) expresion -> exp EQLOP . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 175
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 134

    (96) expresion -> exp GEQUAL . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 176
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 135

    (97) expresion -> exp LEQUAL . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 177
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 136

    (98) expresion -> exp ABRACKET . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 178
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 137

    (100) exp -> termino expb .

    GTHAN           reduce using rule 100 (exp -> termino expb .)
    LTHAN           reduce using rule 100 (exp -> termino expb .)
    EQLOP           reduce using rule 100 (exp -> termino expb .)
    GEQUAL          reduce using rule 100 (exp -> termino expb .)
    LEQUAL          reduce using rule 100 (exp -> termino expb .)
    ABRACKET        reduce using rule 100 (exp -> termino expb .)
    RBRACKET        reduce using rule 100 (exp -> termino expb .)
    ID              reduce using rule 100 (exp -> termino expb .)
    REGRESA         reduce using rule 100 (exp -> termino expb .)
    LEE             reduce using rule 100 (exp -> termino expb .)
    ESCRIBE         reduce using rule 100 (exp -> termino expb .)
    SI              reduce using rule 100 (exp -> termino expb .)
    MIENTRAS        reduce using rule 100 (exp -> termino expb .)
    DESDE           reduce using rule 100 (exp -> termino expb .)
    LPAREN          reduce using rule 100 (exp -> termino expb .)
    PLUS            reduce using rule 100 (exp -> termino expb .)
    MINUS           reduce using rule 100 (exp -> termino expb .)
    NUMBER          reduce using rule 100 (exp -> termino expb .)
    CTEF            reduce using rule 100 (exp -> termino expb .)
    CTEC            reduce using rule 100 (exp -> termino expb .)
    STRING          reduce using rule 100 (exp -> termino expb .)
    RPAREN          reduce using rule 100 (exp -> termino expb .)
    SEMICOL         reduce using rule 100 (exp -> termino expb .)
    COMMA           reduce using rule 100 (exp -> termino expb .)
    RBRACK          reduce using rule 100 (exp -> termino expb .)
    HASTA           reduce using rule 100 (exp -> termino expb .)
    HACER           reduce using rule 100 (exp -> termino expb .)


state 138

    (101) expb -> PLUS . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 179
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 139

    (102) expb -> MINUS . exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 180
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 140

    (104) termino -> factor terminob .

    PLUS            reduce using rule 104 (termino -> factor terminob .)
    MINUS           reduce using rule 104 (termino -> factor terminob .)
    GTHAN           reduce using rule 104 (termino -> factor terminob .)
    LTHAN           reduce using rule 104 (termino -> factor terminob .)
    EQLOP           reduce using rule 104 (termino -> factor terminob .)
    GEQUAL          reduce using rule 104 (termino -> factor terminob .)
    LEQUAL          reduce using rule 104 (termino -> factor terminob .)
    ABRACKET        reduce using rule 104 (termino -> factor terminob .)
    RBRACKET        reduce using rule 104 (termino -> factor terminob .)
    ID              reduce using rule 104 (termino -> factor terminob .)
    REGRESA         reduce using rule 104 (termino -> factor terminob .)
    LEE             reduce using rule 104 (termino -> factor terminob .)
    ESCRIBE         reduce using rule 104 (termino -> factor terminob .)
    SI              reduce using rule 104 (termino -> factor terminob .)
    MIENTRAS        reduce using rule 104 (termino -> factor terminob .)
    DESDE           reduce using rule 104 (termino -> factor terminob .)
    LPAREN          reduce using rule 104 (termino -> factor terminob .)
    NUMBER          reduce using rule 104 (termino -> factor terminob .)
    CTEF            reduce using rule 104 (termino -> factor terminob .)
    CTEC            reduce using rule 104 (termino -> factor terminob .)
    STRING          reduce using rule 104 (termino -> factor terminob .)
    RPAREN          reduce using rule 104 (termino -> factor terminob .)
    SEMICOL         reduce using rule 104 (termino -> factor terminob .)
    COMMA           reduce using rule 104 (termino -> factor terminob .)
    RBRACK          reduce using rule 104 (termino -> factor terminob .)
    HASTA           reduce using rule 104 (termino -> factor terminob .)
    HACER           reduce using rule 104 (termino -> factor terminob .)


state 141

    (105) terminob -> TIMES . termino
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    termino                        shift and go to state 181
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 142

    (106) terminob -> DIVIDE . termino
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    termino                        shift and go to state 182
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 143

    (109) factor -> PLUS cte .

    TIMES           reduce using rule 109 (factor -> PLUS cte .)
    DIVIDE          reduce using rule 109 (factor -> PLUS cte .)
    PLUS            reduce using rule 109 (factor -> PLUS cte .)
    MINUS           reduce using rule 109 (factor -> PLUS cte .)
    GTHAN           reduce using rule 109 (factor -> PLUS cte .)
    LTHAN           reduce using rule 109 (factor -> PLUS cte .)
    EQLOP           reduce using rule 109 (factor -> PLUS cte .)
    GEQUAL          reduce using rule 109 (factor -> PLUS cte .)
    LEQUAL          reduce using rule 109 (factor -> PLUS cte .)
    ABRACKET        reduce using rule 109 (factor -> PLUS cte .)
    RBRACKET        reduce using rule 109 (factor -> PLUS cte .)
    ID              reduce using rule 109 (factor -> PLUS cte .)
    REGRESA         reduce using rule 109 (factor -> PLUS cte .)
    LEE             reduce using rule 109 (factor -> PLUS cte .)
    ESCRIBE         reduce using rule 109 (factor -> PLUS cte .)
    SI              reduce using rule 109 (factor -> PLUS cte .)
    MIENTRAS        reduce using rule 109 (factor -> PLUS cte .)
    DESDE           reduce using rule 109 (factor -> PLUS cte .)
    LPAREN          reduce using rule 109 (factor -> PLUS cte .)
    NUMBER          reduce using rule 109 (factor -> PLUS cte .)
    CTEF            reduce using rule 109 (factor -> PLUS cte .)
    CTEC            reduce using rule 109 (factor -> PLUS cte .)
    STRING          reduce using rule 109 (factor -> PLUS cte .)
    RPAREN          reduce using rule 109 (factor -> PLUS cte .)
    SEMICOL         reduce using rule 109 (factor -> PLUS cte .)
    COMMA           reduce using rule 109 (factor -> PLUS cte .)
    RBRACK          reduce using rule 109 (factor -> PLUS cte .)
    HASTA           reduce using rule 109 (factor -> PLUS cte .)
    HACER           reduce using rule 109 (factor -> PLUS cte .)


state 144

    (110) factor -> MINUS cte .

    TIMES           reduce using rule 110 (factor -> MINUS cte .)
    DIVIDE          reduce using rule 110 (factor -> MINUS cte .)
    PLUS            reduce using rule 110 (factor -> MINUS cte .)
    MINUS           reduce using rule 110 (factor -> MINUS cte .)
    GTHAN           reduce using rule 110 (factor -> MINUS cte .)
    LTHAN           reduce using rule 110 (factor -> MINUS cte .)
    EQLOP           reduce using rule 110 (factor -> MINUS cte .)
    GEQUAL          reduce using rule 110 (factor -> MINUS cte .)
    LEQUAL          reduce using rule 110 (factor -> MINUS cte .)
    ABRACKET        reduce using rule 110 (factor -> MINUS cte .)
    RBRACKET        reduce using rule 110 (factor -> MINUS cte .)
    ID              reduce using rule 110 (factor -> MINUS cte .)
    REGRESA         reduce using rule 110 (factor -> MINUS cte .)
    LEE             reduce using rule 110 (factor -> MINUS cte .)
    ESCRIBE         reduce using rule 110 (factor -> MINUS cte .)
    SI              reduce using rule 110 (factor -> MINUS cte .)
    MIENTRAS        reduce using rule 110 (factor -> MINUS cte .)
    DESDE           reduce using rule 110 (factor -> MINUS cte .)
    LPAREN          reduce using rule 110 (factor -> MINUS cte .)
    NUMBER          reduce using rule 110 (factor -> MINUS cte .)
    CTEF            reduce using rule 110 (factor -> MINUS cte .)
    CTEC            reduce using rule 110 (factor -> MINUS cte .)
    STRING          reduce using rule 110 (factor -> MINUS cte .)
    RPAREN          reduce using rule 110 (factor -> MINUS cte .)
    SEMICOL         reduce using rule 110 (factor -> MINUS cte .)
    COMMA           reduce using rule 110 (factor -> MINUS cte .)
    RBRACK          reduce using rule 110 (factor -> MINUS cte .)
    HASTA           reduce using rule 110 (factor -> MINUS cte .)
    HACER           reduce using rule 110 (factor -> MINUS cte .)


state 145

    (42) funcionc -> vars agregacont . bloque reinicio funcion
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 183

state 146

    (45) agregacont -> empty .

    LBRACKET        reduce using rule 45 (agregacont -> empty .)


state 147

    (43) funcionc -> agregacont bloque . reinicio funcion
    (46) reinicio -> . empty
    (125) empty -> .

    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)

    reinicio                       shift and go to state 184
    empty                          shift and go to state 185

state 148

    (40) funcionb -> varsfunc RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 40 (funcionb -> varsfunc RPAREN testeru funcionc .)


state 149

    (31) varsfuncb -> id COMMA varsfuncb .

    RPAREN          reduce using rule 31 (varsfuncb -> id COMMA varsfuncb .)


state 150

    (9) id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .

    COMMA           reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    SEMICOL         reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    RPAREN          reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    EQUAL           reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)


state 151

    (11) arreglo2 -> empty .

    COMMA           reduce using rule 11 (arreglo2 -> empty .)
    SEMICOL         reduce using rule 11 (arreglo2 -> empty .)
    RPAREN          reduce using rule 11 (arreglo2 -> empty .)
    EQUAL           reduce using rule 11 (arreglo2 -> empty .)


state 152

    (50) bloqueb -> estatuto bloqueb .

    $end            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    FUNCION         reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    PRINCIPAL       reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    SINO            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    RBRACKET        reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    ID              reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    REGRESA         reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    LEE             reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    ESCRIBE         reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    SI              reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    MIENTRAS        reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    DESDE           reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    LPAREN          reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    PLUS            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    MINUS           reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    NUMBER          reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    CTEF            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    CTEC            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    STRING          reduce using rule 50 (bloqueb -> estatuto bloqueb .)


state 153

    (49) bloqueb -> RBRACKET helper .

    $end            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    FUNCION         reduce using rule 49 (bloqueb -> RBRACKET helper .)
    PRINCIPAL       reduce using rule 49 (bloqueb -> RBRACKET helper .)
    SINO            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    RBRACKET        reduce using rule 49 (bloqueb -> RBRACKET helper .)
    ID              reduce using rule 49 (bloqueb -> RBRACKET helper .)
    REGRESA         reduce using rule 49 (bloqueb -> RBRACKET helper .)
    LEE             reduce using rule 49 (bloqueb -> RBRACKET helper .)
    ESCRIBE         reduce using rule 49 (bloqueb -> RBRACKET helper .)
    SI              reduce using rule 49 (bloqueb -> RBRACKET helper .)
    MIENTRAS        reduce using rule 49 (bloqueb -> RBRACKET helper .)
    DESDE           reduce using rule 49 (bloqueb -> RBRACKET helper .)
    LPAREN          reduce using rule 49 (bloqueb -> RBRACKET helper .)
    PLUS            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    MINUS           reduce using rule 49 (bloqueb -> RBRACKET helper .)
    NUMBER          reduce using rule 49 (bloqueb -> RBRACKET helper .)
    CTEF            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    CTEC            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    STRING          reduce using rule 49 (bloqueb -> RBRACKET helper .)


state 154

    (51) helper -> empty .

    $end            reduce using rule 51 (helper -> empty .)
    FUNCION         reduce using rule 51 (helper -> empty .)
    PRINCIPAL       reduce using rule 51 (helper -> empty .)
    SINO            reduce using rule 51 (helper -> empty .)
    RBRACKET        reduce using rule 51 (helper -> empty .)
    ID              reduce using rule 51 (helper -> empty .)
    REGRESA         reduce using rule 51 (helper -> empty .)
    LEE             reduce using rule 51 (helper -> empty .)
    ESCRIBE         reduce using rule 51 (helper -> empty .)
    SI              reduce using rule 51 (helper -> empty .)
    MIENTRAS        reduce using rule 51 (helper -> empty .)
    DESDE           reduce using rule 51 (helper -> empty .)
    LPAREN          reduce using rule 51 (helper -> empty .)
    PLUS            reduce using rule 51 (helper -> empty .)
    MINUS           reduce using rule 51 (helper -> empty .)
    NUMBER          reduce using rule 51 (helper -> empty .)
    CTEF            reduce using rule 51 (helper -> empty .)
    CTEC            reduce using rule 51 (helper -> empty .)
    STRING          reduce using rule 51 (helper -> empty .)


state 155

    (61) asignacionb -> ID . asign SEMICOL
    (108) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (112) factor -> ID . asign
    (86) cte -> ID .
    (52) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (53) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

    LPAREN          shift and go to state 165
    TIMES           reduce using rule 86 (cte -> ID .)
    DIVIDE          reduce using rule 86 (cte -> ID .)
    PLUS            reduce using rule 86 (cte -> ID .)
    MINUS           reduce using rule 86 (cte -> ID .)
    GTHAN           reduce using rule 86 (cte -> ID .)
    LTHAN           reduce using rule 86 (cte -> ID .)
    EQLOP           reduce using rule 86 (cte -> ID .)
    GEQUAL          reduce using rule 86 (cte -> ID .)
    LEQUAL          reduce using rule 86 (cte -> ID .)
    ABRACKET        reduce using rule 86 (cte -> ID .)
    SEMICOL         reduce using rule 86 (cte -> ID .)
    LBRACK          shift and go to state 121

    asign                          shift and go to state 186

state 156

    (58) asignacion -> ID EQUAL asignacionb .

    RBRACKET        reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    ID              reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    REGRESA         reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    LEE             reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    ESCRIBE         reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    SI              reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    MIENTRAS        reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    DESDE           reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    LPAREN          reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    PLUS            reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    MINUS           reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    NUMBER          reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    CTEF            reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    CTEC            reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    STRING          reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)


state 157

    (60) asignacionb -> expresion . SEMICOL

    SEMICOL         shift and go to state 187


state 158

    (59) asignacion -> ID asign EQUAL . asignacionb
    (60) asignacionb -> . expresion SEMICOL
    (61) asignacionb -> . ID asign SEMICOL
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    ID              shift and go to state 155
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacionb                    shift and go to state 188
    expresion                      shift and go to state 157
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 159

    (64) funcionvoid -> ID LPAREN fnvn1 . expresion fnvn2 RPAREN fnvn3 SEMICOL
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 189
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 160

    (108) factor -> ID LPAREN llamadafun . expresion llamadafun2 RPAREN llamadafun3
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 190
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 161

    (65) fnvn1 -> empty .
    (113) llamadafun -> empty .

  ! reduce/reduce conflict for LPAREN resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for NUMBER resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEC resolved using rule 65 (fnvn1 -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 65 (fnvn1 -> empty .)
    LPAREN          reduce using rule 65 (fnvn1 -> empty .)
    ID              reduce using rule 65 (fnvn1 -> empty .)
    PLUS            reduce using rule 65 (fnvn1 -> empty .)
    MINUS           reduce using rule 65 (fnvn1 -> empty .)
    NUMBER          reduce using rule 65 (fnvn1 -> empty .)
    CTEF            reduce using rule 65 (fnvn1 -> empty .)
    CTEC            reduce using rule 65 (fnvn1 -> empty .)
    STRING          reduce using rule 65 (fnvn1 -> empty .)

  ! LPAREN          [ reduce using rule 113 (llamadafun -> empty .) ]
  ! ID              [ reduce using rule 113 (llamadafun -> empty .) ]
  ! PLUS            [ reduce using rule 113 (llamadafun -> empty .) ]
  ! MINUS           [ reduce using rule 113 (llamadafun -> empty .) ]
  ! NUMBER          [ reduce using rule 113 (llamadafun -> empty .) ]
  ! CTEF            [ reduce using rule 113 (llamadafun -> empty .) ]
  ! CTEC            [ reduce using rule 113 (llamadafun -> empty .) ]
  ! STRING          [ reduce using rule 113 (llamadafun -> empty .) ]


state 162

    (52) asign -> LBRACK arrn . expresion arrn2 RBRACK arrn3
    (53) asign -> LBRACK arrn . CTEI arrn2 RBRACK arrn3
    (54) asign -> LBRACK arrn . CTEC arrn2 RBRACK arrn3
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    CTEI            shift and go to state 192
    CTEC            shift and go to state 193
    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    STRING          shift and go to state 79

    expresion                      shift and go to state 191
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 163

    (55) arrn -> empty .

    CTEI            reduce using rule 55 (arrn -> empty .)
    CTEC            reduce using rule 55 (arrn -> empty .)
    LPAREN          reduce using rule 55 (arrn -> empty .)
    ID              reduce using rule 55 (arrn -> empty .)
    PLUS            reduce using rule 55 (arrn -> empty .)
    MINUS           reduce using rule 55 (arrn -> empty .)
    NUMBER          reduce using rule 55 (arrn -> empty .)
    CTEF            reduce using rule 55 (arrn -> empty .)
    STRING          reduce using rule 55 (arrn -> empty .)


state 164

    (107) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    EQLOP           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    GEQUAL          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    LEQUAL          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    ABRACKET        reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    REGRESA         reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    LEE             reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    ESCRIBE         reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    SI              reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    MIENTRAS        reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    DESDE           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    CTEC            reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    SEMICOL         reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    RBRACK          reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    HASTA           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)
    HACER           reduce using rule 107 (factor -> LPAREN expresion RPAREN .)


state 165

    (108) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (113) llamadafun -> . empty
    (125) empty -> .

    LPAREN          reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    llamadafun                     shift and go to state 160
    empty                          shift and go to state 194

state 166

    (112) factor -> ID asign .

    TIMES           reduce using rule 112 (factor -> ID asign .)
    DIVIDE          reduce using rule 112 (factor -> ID asign .)
    PLUS            reduce using rule 112 (factor -> ID asign .)
    MINUS           reduce using rule 112 (factor -> ID asign .)
    GTHAN           reduce using rule 112 (factor -> ID asign .)
    LTHAN           reduce using rule 112 (factor -> ID asign .)
    EQLOP           reduce using rule 112 (factor -> ID asign .)
    GEQUAL          reduce using rule 112 (factor -> ID asign .)
    LEQUAL          reduce using rule 112 (factor -> ID asign .)
    ABRACKET        reduce using rule 112 (factor -> ID asign .)
    RPAREN          reduce using rule 112 (factor -> ID asign .)
    COMMA           reduce using rule 112 (factor -> ID asign .)
    RBRACKET        reduce using rule 112 (factor -> ID asign .)
    ID              reduce using rule 112 (factor -> ID asign .)
    REGRESA         reduce using rule 112 (factor -> ID asign .)
    LEE             reduce using rule 112 (factor -> ID asign .)
    ESCRIBE         reduce using rule 112 (factor -> ID asign .)
    SI              reduce using rule 112 (factor -> ID asign .)
    MIENTRAS        reduce using rule 112 (factor -> ID asign .)
    DESDE           reduce using rule 112 (factor -> ID asign .)
    LPAREN          reduce using rule 112 (factor -> ID asign .)
    NUMBER          reduce using rule 112 (factor -> ID asign .)
    CTEF            reduce using rule 112 (factor -> ID asign .)
    CTEC            reduce using rule 112 (factor -> ID asign .)
    STRING          reduce using rule 112 (factor -> ID asign .)
    SEMICOL         reduce using rule 112 (factor -> ID asign .)
    RBRACK          reduce using rule 112 (factor -> ID asign .)
    HASTA           reduce using rule 112 (factor -> ID asign .)
    HACER           reduce using rule 112 (factor -> ID asign .)


state 167

    (62) retorno -> REGRESA LPAREN expresion . retn RPAREN SEMICOL
    (63) retn -> . empty
    (125) empty -> .

    RPAREN          reduce using rule 125 (empty -> .)

    retn                           shift and go to state 195
    empty                          shift and go to state 196

state 168

    (68) lee -> LEE LPAREN id . leeb
    (69) leeb -> . RPAREN SEMICOL
    (70) leeb -> . COMMA id leeb

    RPAREN          shift and go to state 198
    COMMA           shift and go to state 199

    leeb                           shift and go to state 197

state 169

    (71) escritura -> ESCRIBE LPAREN expresion . prin1 escriturab
    (74) prin1 -> . empty
    (125) empty -> .

    COMMA           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)

    prin1                          shift and go to state 200
    empty                          shift and go to state 201

state 170

    (75) decision -> SI LPAREN expresion . pn1 RPAREN ENTONCES decisionb
    (76) pn1 -> . empty
    (125) empty -> .

    RPAREN          reduce using rule 125 (empty -> .)

    pn1                            shift and go to state 202
    empty                          shift and go to state 203

state 171

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN . expresion RPAREN HAZ rcn2 bloque rcn3
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 204
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 172

    (85) repeticionnocond -> DESDE id EQUAL . exp HASTA exp HACER bloque
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 205
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 173

    (93) expresion -> exp GTHAN exp .

    RBRACKET        reduce using rule 93 (expresion -> exp GTHAN exp .)
    ID              reduce using rule 93 (expresion -> exp GTHAN exp .)
    REGRESA         reduce using rule 93 (expresion -> exp GTHAN exp .)
    LEE             reduce using rule 93 (expresion -> exp GTHAN exp .)
    ESCRIBE         reduce using rule 93 (expresion -> exp GTHAN exp .)
    SI              reduce using rule 93 (expresion -> exp GTHAN exp .)
    MIENTRAS        reduce using rule 93 (expresion -> exp GTHAN exp .)
    DESDE           reduce using rule 93 (expresion -> exp GTHAN exp .)
    LPAREN          reduce using rule 93 (expresion -> exp GTHAN exp .)
    PLUS            reduce using rule 93 (expresion -> exp GTHAN exp .)
    MINUS           reduce using rule 93 (expresion -> exp GTHAN exp .)
    NUMBER          reduce using rule 93 (expresion -> exp GTHAN exp .)
    CTEF            reduce using rule 93 (expresion -> exp GTHAN exp .)
    CTEC            reduce using rule 93 (expresion -> exp GTHAN exp .)
    STRING          reduce using rule 93 (expresion -> exp GTHAN exp .)
    RPAREN          reduce using rule 93 (expresion -> exp GTHAN exp .)
    SEMICOL         reduce using rule 93 (expresion -> exp GTHAN exp .)
    COMMA           reduce using rule 93 (expresion -> exp GTHAN exp .)
    RBRACK          reduce using rule 93 (expresion -> exp GTHAN exp .)


state 174

    (94) expresion -> exp LTHAN exp .

    RBRACKET        reduce using rule 94 (expresion -> exp LTHAN exp .)
    ID              reduce using rule 94 (expresion -> exp LTHAN exp .)
    REGRESA         reduce using rule 94 (expresion -> exp LTHAN exp .)
    LEE             reduce using rule 94 (expresion -> exp LTHAN exp .)
    ESCRIBE         reduce using rule 94 (expresion -> exp LTHAN exp .)
    SI              reduce using rule 94 (expresion -> exp LTHAN exp .)
    MIENTRAS        reduce using rule 94 (expresion -> exp LTHAN exp .)
    DESDE           reduce using rule 94 (expresion -> exp LTHAN exp .)
    LPAREN          reduce using rule 94 (expresion -> exp LTHAN exp .)
    PLUS            reduce using rule 94 (expresion -> exp LTHAN exp .)
    MINUS           reduce using rule 94 (expresion -> exp LTHAN exp .)
    NUMBER          reduce using rule 94 (expresion -> exp LTHAN exp .)
    CTEF            reduce using rule 94 (expresion -> exp LTHAN exp .)
    CTEC            reduce using rule 94 (expresion -> exp LTHAN exp .)
    STRING          reduce using rule 94 (expresion -> exp LTHAN exp .)
    RPAREN          reduce using rule 94 (expresion -> exp LTHAN exp .)
    SEMICOL         reduce using rule 94 (expresion -> exp LTHAN exp .)
    COMMA           reduce using rule 94 (expresion -> exp LTHAN exp .)
    RBRACK          reduce using rule 94 (expresion -> exp LTHAN exp .)


state 175

    (95) expresion -> exp EQLOP exp .

    RBRACKET        reduce using rule 95 (expresion -> exp EQLOP exp .)
    ID              reduce using rule 95 (expresion -> exp EQLOP exp .)
    REGRESA         reduce using rule 95 (expresion -> exp EQLOP exp .)
    LEE             reduce using rule 95 (expresion -> exp EQLOP exp .)
    ESCRIBE         reduce using rule 95 (expresion -> exp EQLOP exp .)
    SI              reduce using rule 95 (expresion -> exp EQLOP exp .)
    MIENTRAS        reduce using rule 95 (expresion -> exp EQLOP exp .)
    DESDE           reduce using rule 95 (expresion -> exp EQLOP exp .)
    LPAREN          reduce using rule 95 (expresion -> exp EQLOP exp .)
    PLUS            reduce using rule 95 (expresion -> exp EQLOP exp .)
    MINUS           reduce using rule 95 (expresion -> exp EQLOP exp .)
    NUMBER          reduce using rule 95 (expresion -> exp EQLOP exp .)
    CTEF            reduce using rule 95 (expresion -> exp EQLOP exp .)
    CTEC            reduce using rule 95 (expresion -> exp EQLOP exp .)
    STRING          reduce using rule 95 (expresion -> exp EQLOP exp .)
    RPAREN          reduce using rule 95 (expresion -> exp EQLOP exp .)
    SEMICOL         reduce using rule 95 (expresion -> exp EQLOP exp .)
    COMMA           reduce using rule 95 (expresion -> exp EQLOP exp .)
    RBRACK          reduce using rule 95 (expresion -> exp EQLOP exp .)


state 176

    (96) expresion -> exp GEQUAL exp .

    RBRACKET        reduce using rule 96 (expresion -> exp GEQUAL exp .)
    ID              reduce using rule 96 (expresion -> exp GEQUAL exp .)
    REGRESA         reduce using rule 96 (expresion -> exp GEQUAL exp .)
    LEE             reduce using rule 96 (expresion -> exp GEQUAL exp .)
    ESCRIBE         reduce using rule 96 (expresion -> exp GEQUAL exp .)
    SI              reduce using rule 96 (expresion -> exp GEQUAL exp .)
    MIENTRAS        reduce using rule 96 (expresion -> exp GEQUAL exp .)
    DESDE           reduce using rule 96 (expresion -> exp GEQUAL exp .)
    LPAREN          reduce using rule 96 (expresion -> exp GEQUAL exp .)
    PLUS            reduce using rule 96 (expresion -> exp GEQUAL exp .)
    MINUS           reduce using rule 96 (expresion -> exp GEQUAL exp .)
    NUMBER          reduce using rule 96 (expresion -> exp GEQUAL exp .)
    CTEF            reduce using rule 96 (expresion -> exp GEQUAL exp .)
    CTEC            reduce using rule 96 (expresion -> exp GEQUAL exp .)
    STRING          reduce using rule 96 (expresion -> exp GEQUAL exp .)
    RPAREN          reduce using rule 96 (expresion -> exp GEQUAL exp .)
    SEMICOL         reduce using rule 96 (expresion -> exp GEQUAL exp .)
    COMMA           reduce using rule 96 (expresion -> exp GEQUAL exp .)
    RBRACK          reduce using rule 96 (expresion -> exp GEQUAL exp .)


state 177

    (97) expresion -> exp LEQUAL exp .

    RBRACKET        reduce using rule 97 (expresion -> exp LEQUAL exp .)
    ID              reduce using rule 97 (expresion -> exp LEQUAL exp .)
    REGRESA         reduce using rule 97 (expresion -> exp LEQUAL exp .)
    LEE             reduce using rule 97 (expresion -> exp LEQUAL exp .)
    ESCRIBE         reduce using rule 97 (expresion -> exp LEQUAL exp .)
    SI              reduce using rule 97 (expresion -> exp LEQUAL exp .)
    MIENTRAS        reduce using rule 97 (expresion -> exp LEQUAL exp .)
    DESDE           reduce using rule 97 (expresion -> exp LEQUAL exp .)
    LPAREN          reduce using rule 97 (expresion -> exp LEQUAL exp .)
    PLUS            reduce using rule 97 (expresion -> exp LEQUAL exp .)
    MINUS           reduce using rule 97 (expresion -> exp LEQUAL exp .)
    NUMBER          reduce using rule 97 (expresion -> exp LEQUAL exp .)
    CTEF            reduce using rule 97 (expresion -> exp LEQUAL exp .)
    CTEC            reduce using rule 97 (expresion -> exp LEQUAL exp .)
    STRING          reduce using rule 97 (expresion -> exp LEQUAL exp .)
    RPAREN          reduce using rule 97 (expresion -> exp LEQUAL exp .)
    SEMICOL         reduce using rule 97 (expresion -> exp LEQUAL exp .)
    COMMA           reduce using rule 97 (expresion -> exp LEQUAL exp .)
    RBRACK          reduce using rule 97 (expresion -> exp LEQUAL exp .)


state 178

    (98) expresion -> exp ABRACKET exp .

    RBRACKET        reduce using rule 98 (expresion -> exp ABRACKET exp .)
    ID              reduce using rule 98 (expresion -> exp ABRACKET exp .)
    REGRESA         reduce using rule 98 (expresion -> exp ABRACKET exp .)
    LEE             reduce using rule 98 (expresion -> exp ABRACKET exp .)
    ESCRIBE         reduce using rule 98 (expresion -> exp ABRACKET exp .)
    SI              reduce using rule 98 (expresion -> exp ABRACKET exp .)
    MIENTRAS        reduce using rule 98 (expresion -> exp ABRACKET exp .)
    DESDE           reduce using rule 98 (expresion -> exp ABRACKET exp .)
    LPAREN          reduce using rule 98 (expresion -> exp ABRACKET exp .)
    PLUS            reduce using rule 98 (expresion -> exp ABRACKET exp .)
    MINUS           reduce using rule 98 (expresion -> exp ABRACKET exp .)
    NUMBER          reduce using rule 98 (expresion -> exp ABRACKET exp .)
    CTEF            reduce using rule 98 (expresion -> exp ABRACKET exp .)
    CTEC            reduce using rule 98 (expresion -> exp ABRACKET exp .)
    STRING          reduce using rule 98 (expresion -> exp ABRACKET exp .)
    RPAREN          reduce using rule 98 (expresion -> exp ABRACKET exp .)
    SEMICOL         reduce using rule 98 (expresion -> exp ABRACKET exp .)
    COMMA           reduce using rule 98 (expresion -> exp ABRACKET exp .)
    RBRACK          reduce using rule 98 (expresion -> exp ABRACKET exp .)


state 179

    (101) expb -> PLUS exp .

    GTHAN           reduce using rule 101 (expb -> PLUS exp .)
    LTHAN           reduce using rule 101 (expb -> PLUS exp .)
    EQLOP           reduce using rule 101 (expb -> PLUS exp .)
    GEQUAL          reduce using rule 101 (expb -> PLUS exp .)
    LEQUAL          reduce using rule 101 (expb -> PLUS exp .)
    ABRACKET        reduce using rule 101 (expb -> PLUS exp .)
    RBRACKET        reduce using rule 101 (expb -> PLUS exp .)
    ID              reduce using rule 101 (expb -> PLUS exp .)
    REGRESA         reduce using rule 101 (expb -> PLUS exp .)
    LEE             reduce using rule 101 (expb -> PLUS exp .)
    ESCRIBE         reduce using rule 101 (expb -> PLUS exp .)
    SI              reduce using rule 101 (expb -> PLUS exp .)
    MIENTRAS        reduce using rule 101 (expb -> PLUS exp .)
    DESDE           reduce using rule 101 (expb -> PLUS exp .)
    LPAREN          reduce using rule 101 (expb -> PLUS exp .)
    PLUS            reduce using rule 101 (expb -> PLUS exp .)
    MINUS           reduce using rule 101 (expb -> PLUS exp .)
    NUMBER          reduce using rule 101 (expb -> PLUS exp .)
    CTEF            reduce using rule 101 (expb -> PLUS exp .)
    CTEC            reduce using rule 101 (expb -> PLUS exp .)
    STRING          reduce using rule 101 (expb -> PLUS exp .)
    RPAREN          reduce using rule 101 (expb -> PLUS exp .)
    SEMICOL         reduce using rule 101 (expb -> PLUS exp .)
    COMMA           reduce using rule 101 (expb -> PLUS exp .)
    RBRACK          reduce using rule 101 (expb -> PLUS exp .)
    HASTA           reduce using rule 101 (expb -> PLUS exp .)
    HACER           reduce using rule 101 (expb -> PLUS exp .)


state 180

    (102) expb -> MINUS exp .

    GTHAN           reduce using rule 102 (expb -> MINUS exp .)
    LTHAN           reduce using rule 102 (expb -> MINUS exp .)
    EQLOP           reduce using rule 102 (expb -> MINUS exp .)
    GEQUAL          reduce using rule 102 (expb -> MINUS exp .)
    LEQUAL          reduce using rule 102 (expb -> MINUS exp .)
    ABRACKET        reduce using rule 102 (expb -> MINUS exp .)
    RBRACKET        reduce using rule 102 (expb -> MINUS exp .)
    ID              reduce using rule 102 (expb -> MINUS exp .)
    REGRESA         reduce using rule 102 (expb -> MINUS exp .)
    LEE             reduce using rule 102 (expb -> MINUS exp .)
    ESCRIBE         reduce using rule 102 (expb -> MINUS exp .)
    SI              reduce using rule 102 (expb -> MINUS exp .)
    MIENTRAS        reduce using rule 102 (expb -> MINUS exp .)
    DESDE           reduce using rule 102 (expb -> MINUS exp .)
    LPAREN          reduce using rule 102 (expb -> MINUS exp .)
    PLUS            reduce using rule 102 (expb -> MINUS exp .)
    MINUS           reduce using rule 102 (expb -> MINUS exp .)
    NUMBER          reduce using rule 102 (expb -> MINUS exp .)
    CTEF            reduce using rule 102 (expb -> MINUS exp .)
    CTEC            reduce using rule 102 (expb -> MINUS exp .)
    STRING          reduce using rule 102 (expb -> MINUS exp .)
    RPAREN          reduce using rule 102 (expb -> MINUS exp .)
    SEMICOL         reduce using rule 102 (expb -> MINUS exp .)
    COMMA           reduce using rule 102 (expb -> MINUS exp .)
    RBRACK          reduce using rule 102 (expb -> MINUS exp .)
    HASTA           reduce using rule 102 (expb -> MINUS exp .)
    HACER           reduce using rule 102 (expb -> MINUS exp .)


state 181

    (105) terminob -> TIMES termino .

    PLUS            reduce using rule 105 (terminob -> TIMES termino .)
    MINUS           reduce using rule 105 (terminob -> TIMES termino .)
    GTHAN           reduce using rule 105 (terminob -> TIMES termino .)
    LTHAN           reduce using rule 105 (terminob -> TIMES termino .)
    EQLOP           reduce using rule 105 (terminob -> TIMES termino .)
    GEQUAL          reduce using rule 105 (terminob -> TIMES termino .)
    LEQUAL          reduce using rule 105 (terminob -> TIMES termino .)
    ABRACKET        reduce using rule 105 (terminob -> TIMES termino .)
    RBRACKET        reduce using rule 105 (terminob -> TIMES termino .)
    ID              reduce using rule 105 (terminob -> TIMES termino .)
    REGRESA         reduce using rule 105 (terminob -> TIMES termino .)
    LEE             reduce using rule 105 (terminob -> TIMES termino .)
    ESCRIBE         reduce using rule 105 (terminob -> TIMES termino .)
    SI              reduce using rule 105 (terminob -> TIMES termino .)
    MIENTRAS        reduce using rule 105 (terminob -> TIMES termino .)
    DESDE           reduce using rule 105 (terminob -> TIMES termino .)
    LPAREN          reduce using rule 105 (terminob -> TIMES termino .)
    NUMBER          reduce using rule 105 (terminob -> TIMES termino .)
    CTEF            reduce using rule 105 (terminob -> TIMES termino .)
    CTEC            reduce using rule 105 (terminob -> TIMES termino .)
    STRING          reduce using rule 105 (terminob -> TIMES termino .)
    RPAREN          reduce using rule 105 (terminob -> TIMES termino .)
    SEMICOL         reduce using rule 105 (terminob -> TIMES termino .)
    COMMA           reduce using rule 105 (terminob -> TIMES termino .)
    RBRACK          reduce using rule 105 (terminob -> TIMES termino .)
    HASTA           reduce using rule 105 (terminob -> TIMES termino .)
    HACER           reduce using rule 105 (terminob -> TIMES termino .)


state 182

    (106) terminob -> DIVIDE termino .

    PLUS            reduce using rule 106 (terminob -> DIVIDE termino .)
    MINUS           reduce using rule 106 (terminob -> DIVIDE termino .)
    GTHAN           reduce using rule 106 (terminob -> DIVIDE termino .)
    LTHAN           reduce using rule 106 (terminob -> DIVIDE termino .)
    EQLOP           reduce using rule 106 (terminob -> DIVIDE termino .)
    GEQUAL          reduce using rule 106 (terminob -> DIVIDE termino .)
    LEQUAL          reduce using rule 106 (terminob -> DIVIDE termino .)
    ABRACKET        reduce using rule 106 (terminob -> DIVIDE termino .)
    RBRACKET        reduce using rule 106 (terminob -> DIVIDE termino .)
    ID              reduce using rule 106 (terminob -> DIVIDE termino .)
    REGRESA         reduce using rule 106 (terminob -> DIVIDE termino .)
    LEE             reduce using rule 106 (terminob -> DIVIDE termino .)
    ESCRIBE         reduce using rule 106 (terminob -> DIVIDE termino .)
    SI              reduce using rule 106 (terminob -> DIVIDE termino .)
    MIENTRAS        reduce using rule 106 (terminob -> DIVIDE termino .)
    DESDE           reduce using rule 106 (terminob -> DIVIDE termino .)
    LPAREN          reduce using rule 106 (terminob -> DIVIDE termino .)
    NUMBER          reduce using rule 106 (terminob -> DIVIDE termino .)
    CTEF            reduce using rule 106 (terminob -> DIVIDE termino .)
    CTEC            reduce using rule 106 (terminob -> DIVIDE termino .)
    STRING          reduce using rule 106 (terminob -> DIVIDE termino .)
    RPAREN          reduce using rule 106 (terminob -> DIVIDE termino .)
    SEMICOL         reduce using rule 106 (terminob -> DIVIDE termino .)
    COMMA           reduce using rule 106 (terminob -> DIVIDE termino .)
    RBRACK          reduce using rule 106 (terminob -> DIVIDE termino .)
    HASTA           reduce using rule 106 (terminob -> DIVIDE termino .)
    HACER           reduce using rule 106 (terminob -> DIVIDE termino .)


state 183

    (42) funcionc -> vars agregacont bloque . reinicio funcion
    (46) reinicio -> . empty
    (125) empty -> .

    FUNCION         reduce using rule 125 (empty -> .)
    PRINCIPAL       reduce using rule 125 (empty -> .)

    reinicio                       shift and go to state 206
    empty                          shift and go to state 185

state 184

    (43) funcionc -> agregacont bloque reinicio . funcion
    (34) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (35) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (36) funcion -> . empty
    (125) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 125 (empty -> .)

    funcion                        shift and go to state 207
    empty                          shift and go to state 13

state 185

    (46) reinicio -> empty .

    FUNCION         reduce using rule 46 (reinicio -> empty .)
    PRINCIPAL       reduce using rule 46 (reinicio -> empty .)


state 186

    (61) asignacionb -> ID asign . SEMICOL
    (112) factor -> ID asign .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 208
    TIMES           reduce using rule 112 (factor -> ID asign .)
    DIVIDE          reduce using rule 112 (factor -> ID asign .)
    PLUS            reduce using rule 112 (factor -> ID asign .)
    MINUS           reduce using rule 112 (factor -> ID asign .)
    GTHAN           reduce using rule 112 (factor -> ID asign .)
    LTHAN           reduce using rule 112 (factor -> ID asign .)
    EQLOP           reduce using rule 112 (factor -> ID asign .)
    GEQUAL          reduce using rule 112 (factor -> ID asign .)
    LEQUAL          reduce using rule 112 (factor -> ID asign .)
    ABRACKET        reduce using rule 112 (factor -> ID asign .)

  ! SEMICOL         [ reduce using rule 112 (factor -> ID asign .) ]


state 187

    (60) asignacionb -> expresion SEMICOL .

    RBRACKET        reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    ID              reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    REGRESA         reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    LEE             reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    ESCRIBE         reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    SI              reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    MIENTRAS        reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    DESDE           reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    LPAREN          reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    PLUS            reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    MINUS           reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    NUMBER          reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    CTEF            reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    CTEC            reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    STRING          reduce using rule 60 (asignacionb -> expresion SEMICOL .)


state 188

    (59) asignacion -> ID asign EQUAL asignacionb .

    RBRACKET        reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    ID              reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    REGRESA         reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    LEE             reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    ESCRIBE         reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    SI              reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    MIENTRAS        reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    DESDE           reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    LPAREN          reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    PLUS            reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    MINUS           reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    NUMBER          reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    CTEF            reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    CTEC            reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    STRING          reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)


state 189

    (64) funcionvoid -> ID LPAREN fnvn1 expresion . fnvn2 RPAREN fnvn3 SEMICOL
    (66) fnvn2 -> . empty
    (125) empty -> .

    RPAREN          reduce using rule 125 (empty -> .)

    fnvn2                          shift and go to state 209
    empty                          shift and go to state 210

state 190

    (108) factor -> ID LPAREN llamadafun expresion . llamadafun2 RPAREN llamadafun3
    (114) llamadafun2 -> . empty
    (125) empty -> .

    RPAREN          reduce using rule 125 (empty -> .)

    llamadafun2                    shift and go to state 211
    empty                          shift and go to state 212

state 191

    (52) asign -> LBRACK arrn expresion . arrn2 RBRACK arrn3
    (56) arrn2 -> . empty
    (125) empty -> .

    RBRACK          reduce using rule 125 (empty -> .)

    arrn2                          shift and go to state 213
    empty                          shift and go to state 214

state 192

    (53) asign -> LBRACK arrn CTEI . arrn2 RBRACK arrn3
    (56) arrn2 -> . empty
    (125) empty -> .

    RBRACK          reduce using rule 125 (empty -> .)

    arrn2                          shift and go to state 215
    empty                          shift and go to state 214

state 193

    (54) asign -> LBRACK arrn CTEC . arrn2 RBRACK arrn3
    (89) cte -> CTEC .
    (56) arrn2 -> . empty
    (125) empty -> .

  ! reduce/reduce conflict for RBRACK resolved using rule 89 (cte -> CTEC .)
    TIMES           reduce using rule 89 (cte -> CTEC .)
    DIVIDE          reduce using rule 89 (cte -> CTEC .)
    PLUS            reduce using rule 89 (cte -> CTEC .)
    MINUS           reduce using rule 89 (cte -> CTEC .)
    GTHAN           reduce using rule 89 (cte -> CTEC .)
    LTHAN           reduce using rule 89 (cte -> CTEC .)
    EQLOP           reduce using rule 89 (cte -> CTEC .)
    GEQUAL          reduce using rule 89 (cte -> CTEC .)
    LEQUAL          reduce using rule 89 (cte -> CTEC .)
    ABRACKET        reduce using rule 89 (cte -> CTEC .)
    RBRACK          reduce using rule 89 (cte -> CTEC .)

  ! RBRACK          [ reduce using rule 125 (empty -> .) ]

    arrn2                          shift and go to state 216
    empty                          shift and go to state 214

state 194

    (113) llamadafun -> empty .

    LPAREN          reduce using rule 113 (llamadafun -> empty .)
    ID              reduce using rule 113 (llamadafun -> empty .)
    PLUS            reduce using rule 113 (llamadafun -> empty .)
    MINUS           reduce using rule 113 (llamadafun -> empty .)
    NUMBER          reduce using rule 113 (llamadafun -> empty .)
    CTEF            reduce using rule 113 (llamadafun -> empty .)
    CTEC            reduce using rule 113 (llamadafun -> empty .)
    STRING          reduce using rule 113 (llamadafun -> empty .)


state 195

    (62) retorno -> REGRESA LPAREN expresion retn . RPAREN SEMICOL

    RPAREN          shift and go to state 217


state 196

    (63) retn -> empty .

    RPAREN          reduce using rule 63 (retn -> empty .)


state 197

    (68) lee -> LEE LPAREN id leeb .

    RBRACKET        reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    ID              reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    REGRESA         reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    LEE             reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    ESCRIBE         reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    SI              reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    MIENTRAS        reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    DESDE           reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    LPAREN          reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    PLUS            reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    MINUS           reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    NUMBER          reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    CTEF            reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    CTEC            reduce using rule 68 (lee -> LEE LPAREN id leeb .)
    STRING          reduce using rule 68 (lee -> LEE LPAREN id leeb .)


state 198

    (69) leeb -> RPAREN . SEMICOL

    SEMICOL         shift and go to state 218


state 199

    (70) leeb -> COMMA . id leeb
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 219

state 200

    (71) escritura -> ESCRIBE LPAREN expresion prin1 . escriturab
    (72) escriturab -> . COMMA expresion prin1 escriturab
    (73) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 221
    RPAREN          shift and go to state 222

    escriturab                     shift and go to state 220

state 201

    (74) prin1 -> empty .

    COMMA           reduce using rule 74 (prin1 -> empty .)
    RPAREN          reduce using rule 74 (prin1 -> empty .)


state 202

    (75) decision -> SI LPAREN expresion pn1 . RPAREN ENTONCES decisionb

    RPAREN          shift and go to state 223


state 203

    (76) pn1 -> empty .

    RPAREN          reduce using rule 76 (pn1 -> empty .)


state 204

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN expresion . RPAREN HAZ rcn2 bloque rcn3

    RPAREN          shift and go to state 224


state 205

    (85) repeticionnocond -> DESDE id EQUAL exp . HASTA exp HACER bloque

    HASTA           shift and go to state 225


state 206

    (42) funcionc -> vars agregacont bloque reinicio . funcion
    (34) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (35) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (36) funcion -> . empty
    (125) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 125 (empty -> .)

    funcion                        shift and go to state 226
    empty                          shift and go to state 13

state 207

    (43) funcionc -> agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 43 (funcionc -> agregacont bloque reinicio funcion .)


state 208

    (61) asignacionb -> ID asign SEMICOL .

    RBRACKET        reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    ID              reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    REGRESA         reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    LEE             reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    ESCRIBE         reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    SI              reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    MIENTRAS        reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    DESDE           reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    LPAREN          reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    PLUS            reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    MINUS           reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    NUMBER          reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    CTEF            reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    CTEC            reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    STRING          reduce using rule 61 (asignacionb -> ID asign SEMICOL .)


state 209

    (64) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 . RPAREN fnvn3 SEMICOL

    RPAREN          shift and go to state 227


state 210

    (66) fnvn2 -> empty .

    RPAREN          reduce using rule 66 (fnvn2 -> empty .)


state 211

    (108) factor -> ID LPAREN llamadafun expresion llamadafun2 . RPAREN llamadafun3

    RPAREN          shift and go to state 228


state 212

    (114) llamadafun2 -> empty .

    RPAREN          reduce using rule 114 (llamadafun2 -> empty .)


state 213

    (52) asign -> LBRACK arrn expresion arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 229


state 214

    (56) arrn2 -> empty .

    RBRACK          reduce using rule 56 (arrn2 -> empty .)


state 215

    (53) asign -> LBRACK arrn CTEI arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 230


state 216

    (54) asign -> LBRACK arrn CTEC arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 231


state 217

    (62) retorno -> REGRESA LPAREN expresion retn RPAREN . SEMICOL

    SEMICOL         shift and go to state 232


state 218

    (69) leeb -> RPAREN SEMICOL .

    RBRACKET        reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    ID              reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    REGRESA         reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    LEE             reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    SI              reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    DESDE           reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    LPAREN          reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    PLUS            reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    MINUS           reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    NUMBER          reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    CTEF            reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    CTEC            reduce using rule 69 (leeb -> RPAREN SEMICOL .)
    STRING          reduce using rule 69 (leeb -> RPAREN SEMICOL .)


state 219

    (70) leeb -> COMMA id . leeb
    (69) leeb -> . RPAREN SEMICOL
    (70) leeb -> . COMMA id leeb

    RPAREN          shift and go to state 198
    COMMA           shift and go to state 199

    leeb                           shift and go to state 233

state 220

    (71) escritura -> ESCRIBE LPAREN expresion prin1 escriturab .

    RBRACKET        reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ID              reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    REGRESA         reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LEE             reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    SI              reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    DESDE           reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LPAREN          reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    PLUS            reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MINUS           reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    NUMBER          reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEF            reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEC            reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    STRING          reduce using rule 71 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)


state 221

    (72) escriturab -> COMMA . expresion prin1 escriturab
    (92) expresion -> . exp
    (93) expresion -> . exp GTHAN exp
    (94) expresion -> . exp LTHAN exp
    (95) expresion -> . exp EQLOP exp
    (96) expresion -> . exp GEQUAL exp
    (97) expresion -> . exp LEQUAL exp
    (98) expresion -> . exp ABRACKET exp
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 234
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 222

    (73) escriturab -> RPAREN . SEMICOL

    SEMICOL         shift and go to state 235


state 223

    (75) decision -> SI LPAREN expresion pn1 RPAREN . ENTONCES decisionb

    ENTONCES        shift and go to state 236


state 224

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN . HAZ rcn2 bloque rcn3

    HAZ             shift and go to state 237


state 225

    (85) repeticionnocond -> DESDE id EQUAL exp HASTA . exp HACER bloque
    (99) exp -> . termino
    (100) exp -> . termino expb
    (103) termino -> . factor
    (104) termino -> . factor terminob
    (107) factor -> . LPAREN expresion RPAREN
    (108) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (109) factor -> . PLUS cte
    (110) factor -> . MINUS cte
    (111) factor -> . cte
    (112) factor -> . ID asign
    (86) cte -> . ID
    (87) cte -> . NUMBER saveconst
    (88) cte -> . CTEF
    (89) cte -> . CTEC
    (90) cte -> . STRING

    LPAREN          shift and go to state 92
    ID              shift and go to state 123
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 238
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 226

    (42) funcionc -> vars agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 42 (funcionc -> vars agregacont bloque reinicio funcion .)


state 227

    (64) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN . fnvn3 SEMICOL
    (67) fnvn3 -> . empty
    (125) empty -> .

    SEMICOL         reduce using rule 125 (empty -> .)

    fnvn3                          shift and go to state 239
    empty                          shift and go to state 240

state 228

    (108) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN . llamadafun3
    (115) llamadafun3 -> . empty
    (125) empty -> .

    TIMES           reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GTHAN           reduce using rule 125 (empty -> .)
    LTHAN           reduce using rule 125 (empty -> .)
    EQLOP           reduce using rule 125 (empty -> .)
    GEQUAL          reduce using rule 125 (empty -> .)
    LEQUAL          reduce using rule 125 (empty -> .)
    ABRACKET        reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    SEMICOL         reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    RBRACK          reduce using rule 125 (empty -> .)
    HASTA           reduce using rule 125 (empty -> .)
    HACER           reduce using rule 125 (empty -> .)

    llamadafun3                    shift and go to state 241
    empty                          shift and go to state 242

state 229

    (52) asign -> LBRACK arrn expresion arrn2 RBRACK . arrn3
    (57) arrn3 -> . empty
    (125) empty -> .

    EQUAL           reduce using rule 125 (empty -> .)
    TIMES           reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GTHAN           reduce using rule 125 (empty -> .)
    LTHAN           reduce using rule 125 (empty -> .)
    EQLOP           reduce using rule 125 (empty -> .)
    GEQUAL          reduce using rule 125 (empty -> .)
    LEQUAL          reduce using rule 125 (empty -> .)
    ABRACKET        reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    SEMICOL         reduce using rule 125 (empty -> .)
    RBRACK          reduce using rule 125 (empty -> .)
    HASTA           reduce using rule 125 (empty -> .)
    HACER           reduce using rule 125 (empty -> .)

    arrn3                          shift and go to state 243
    empty                          shift and go to state 244

state 230

    (53) asign -> LBRACK arrn CTEI arrn2 RBRACK . arrn3
    (57) arrn3 -> . empty
    (125) empty -> .

    EQUAL           reduce using rule 125 (empty -> .)
    TIMES           reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GTHAN           reduce using rule 125 (empty -> .)
    LTHAN           reduce using rule 125 (empty -> .)
    EQLOP           reduce using rule 125 (empty -> .)
    GEQUAL          reduce using rule 125 (empty -> .)
    LEQUAL          reduce using rule 125 (empty -> .)
    ABRACKET        reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    SEMICOL         reduce using rule 125 (empty -> .)
    RBRACK          reduce using rule 125 (empty -> .)
    HASTA           reduce using rule 125 (empty -> .)
    HACER           reduce using rule 125 (empty -> .)

    arrn3                          shift and go to state 245
    empty                          shift and go to state 244

state 231

    (54) asign -> LBRACK arrn CTEC arrn2 RBRACK . arrn3
    (57) arrn3 -> . empty
    (125) empty -> .

    EQUAL           reduce using rule 125 (empty -> .)
    TIMES           reduce using rule 125 (empty -> .)
    DIVIDE          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    GTHAN           reduce using rule 125 (empty -> .)
    LTHAN           reduce using rule 125 (empty -> .)
    EQLOP           reduce using rule 125 (empty -> .)
    GEQUAL          reduce using rule 125 (empty -> .)
    LEQUAL          reduce using rule 125 (empty -> .)
    ABRACKET        reduce using rule 125 (empty -> .)
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)
    COMMA           reduce using rule 125 (empty -> .)
    SEMICOL         reduce using rule 125 (empty -> .)
    RBRACK          reduce using rule 125 (empty -> .)
    HASTA           reduce using rule 125 (empty -> .)
    HACER           reduce using rule 125 (empty -> .)

    arrn3                          shift and go to state 246
    empty                          shift and go to state 244

state 232

    (62) retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .

    RBRACKET        reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ID              reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    REGRESA         reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LEE             reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    SI              reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    DESDE           reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LPAREN          reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    PLUS            reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MINUS           reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    NUMBER          reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEF            reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEC            reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    STRING          reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)


state 233

    (70) leeb -> COMMA id leeb .

    RBRACKET        reduce using rule 70 (leeb -> COMMA id leeb .)
    ID              reduce using rule 70 (leeb -> COMMA id leeb .)
    REGRESA         reduce using rule 70 (leeb -> COMMA id leeb .)
    LEE             reduce using rule 70 (leeb -> COMMA id leeb .)
    ESCRIBE         reduce using rule 70 (leeb -> COMMA id leeb .)
    SI              reduce using rule 70 (leeb -> COMMA id leeb .)
    MIENTRAS        reduce using rule 70 (leeb -> COMMA id leeb .)
    DESDE           reduce using rule 70 (leeb -> COMMA id leeb .)
    LPAREN          reduce using rule 70 (leeb -> COMMA id leeb .)
    PLUS            reduce using rule 70 (leeb -> COMMA id leeb .)
    MINUS           reduce using rule 70 (leeb -> COMMA id leeb .)
    NUMBER          reduce using rule 70 (leeb -> COMMA id leeb .)
    CTEF            reduce using rule 70 (leeb -> COMMA id leeb .)
    CTEC            reduce using rule 70 (leeb -> COMMA id leeb .)
    STRING          reduce using rule 70 (leeb -> COMMA id leeb .)


state 234

    (72) escriturab -> COMMA expresion . prin1 escriturab
    (74) prin1 -> . empty
    (125) empty -> .

    COMMA           reduce using rule 125 (empty -> .)
    RPAREN          reduce using rule 125 (empty -> .)

    prin1                          shift and go to state 247
    empty                          shift and go to state 201

state 235

    (73) escriturab -> RPAREN SEMICOL .

    RBRACKET        reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    ID              reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    REGRESA         reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    LEE             reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    SI              reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    DESDE           reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    LPAREN          reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    PLUS            reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    MINUS           reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    NUMBER          reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    CTEF            reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    CTEC            reduce using rule 73 (escriturab -> RPAREN SEMICOL .)
    STRING          reduce using rule 73 (escriturab -> RPAREN SEMICOL .)


state 236

    (75) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES . decisionb
    (77) decisionb -> . bloque pn2
    (78) decisionb -> . bloque SINO pn3 bloque pn2
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    decisionb                      shift and go to state 248
    bloque                         shift and go to state 249

state 237

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ . rcn2 bloque rcn3
    (83) rcn2 -> . empty
    (125) empty -> .

    LBRACKET        reduce using rule 125 (empty -> .)

    rcn2                           shift and go to state 250
    empty                          shift and go to state 251

state 238

    (85) repeticionnocond -> DESDE id EQUAL exp HASTA exp . HACER bloque

    HACER           shift and go to state 252


state 239

    (64) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 . SEMICOL

    SEMICOL         shift and go to state 253


state 240

    (67) fnvn3 -> empty .

    SEMICOL         reduce using rule 67 (fnvn3 -> empty .)


state 241

    (108) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .

    TIMES           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DIVIDE          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    PLUS            reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MINUS           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GTHAN           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LTHAN           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    EQLOP           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GEQUAL          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEQUAL          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ABRACKET        reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACKET        reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ID              reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    REGRESA         reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEE             reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ESCRIBE         reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SI              reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MIENTRAS        reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DESDE           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LPAREN          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    NUMBER          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEF            reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEC            reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    STRING          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RPAREN          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SEMICOL         reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    COMMA           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACK          reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HASTA           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HACER           reduce using rule 108 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)


state 242

    (115) llamadafun3 -> empty .

    TIMES           reduce using rule 115 (llamadafun3 -> empty .)
    DIVIDE          reduce using rule 115 (llamadafun3 -> empty .)
    PLUS            reduce using rule 115 (llamadafun3 -> empty .)
    MINUS           reduce using rule 115 (llamadafun3 -> empty .)
    GTHAN           reduce using rule 115 (llamadafun3 -> empty .)
    LTHAN           reduce using rule 115 (llamadafun3 -> empty .)
    EQLOP           reduce using rule 115 (llamadafun3 -> empty .)
    GEQUAL          reduce using rule 115 (llamadafun3 -> empty .)
    LEQUAL          reduce using rule 115 (llamadafun3 -> empty .)
    ABRACKET        reduce using rule 115 (llamadafun3 -> empty .)
    RBRACKET        reduce using rule 115 (llamadafun3 -> empty .)
    ID              reduce using rule 115 (llamadafun3 -> empty .)
    REGRESA         reduce using rule 115 (llamadafun3 -> empty .)
    LEE             reduce using rule 115 (llamadafun3 -> empty .)
    ESCRIBE         reduce using rule 115 (llamadafun3 -> empty .)
    SI              reduce using rule 115 (llamadafun3 -> empty .)
    MIENTRAS        reduce using rule 115 (llamadafun3 -> empty .)
    DESDE           reduce using rule 115 (llamadafun3 -> empty .)
    LPAREN          reduce using rule 115 (llamadafun3 -> empty .)
    NUMBER          reduce using rule 115 (llamadafun3 -> empty .)
    CTEF            reduce using rule 115 (llamadafun3 -> empty .)
    CTEC            reduce using rule 115 (llamadafun3 -> empty .)
    STRING          reduce using rule 115 (llamadafun3 -> empty .)
    RPAREN          reduce using rule 115 (llamadafun3 -> empty .)
    SEMICOL         reduce using rule 115 (llamadafun3 -> empty .)
    COMMA           reduce using rule 115 (llamadafun3 -> empty .)
    RBRACK          reduce using rule 115 (llamadafun3 -> empty .)
    HASTA           reduce using rule 115 (llamadafun3 -> empty .)
    HACER           reduce using rule 115 (llamadafun3 -> empty .)


state 243

    (52) asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ID              reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    SI              reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)


state 244

    (57) arrn3 -> empty .

    EQUAL           reduce using rule 57 (arrn3 -> empty .)
    TIMES           reduce using rule 57 (arrn3 -> empty .)
    DIVIDE          reduce using rule 57 (arrn3 -> empty .)
    PLUS            reduce using rule 57 (arrn3 -> empty .)
    MINUS           reduce using rule 57 (arrn3 -> empty .)
    GTHAN           reduce using rule 57 (arrn3 -> empty .)
    LTHAN           reduce using rule 57 (arrn3 -> empty .)
    EQLOP           reduce using rule 57 (arrn3 -> empty .)
    GEQUAL          reduce using rule 57 (arrn3 -> empty .)
    LEQUAL          reduce using rule 57 (arrn3 -> empty .)
    ABRACKET        reduce using rule 57 (arrn3 -> empty .)
    RBRACKET        reduce using rule 57 (arrn3 -> empty .)
    ID              reduce using rule 57 (arrn3 -> empty .)
    REGRESA         reduce using rule 57 (arrn3 -> empty .)
    LEE             reduce using rule 57 (arrn3 -> empty .)
    ESCRIBE         reduce using rule 57 (arrn3 -> empty .)
    SI              reduce using rule 57 (arrn3 -> empty .)
    MIENTRAS        reduce using rule 57 (arrn3 -> empty .)
    DESDE           reduce using rule 57 (arrn3 -> empty .)
    LPAREN          reduce using rule 57 (arrn3 -> empty .)
    NUMBER          reduce using rule 57 (arrn3 -> empty .)
    CTEF            reduce using rule 57 (arrn3 -> empty .)
    CTEC            reduce using rule 57 (arrn3 -> empty .)
    STRING          reduce using rule 57 (arrn3 -> empty .)
    RPAREN          reduce using rule 57 (arrn3 -> empty .)
    COMMA           reduce using rule 57 (arrn3 -> empty .)
    SEMICOL         reduce using rule 57 (arrn3 -> empty .)
    RBRACK          reduce using rule 57 (arrn3 -> empty .)
    HASTA           reduce using rule 57 (arrn3 -> empty .)
    HACER           reduce using rule 57 (arrn3 -> empty .)


state 245

    (53) asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ID              reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    SI              reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)


state 246

    (54) asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ID              reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    SI              reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)


state 247

    (72) escriturab -> COMMA expresion prin1 . escriturab
    (72) escriturab -> . COMMA expresion prin1 escriturab
    (73) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 221
    RPAREN          shift and go to state 222

    escriturab                     shift and go to state 254

state 248

    (75) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .

    RBRACKET        reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ID              reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    REGRESA         reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LEE             reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ESCRIBE         reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    SI              reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MIENTRAS        reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    DESDE           reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LPAREN          reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    PLUS            reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MINUS           reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    NUMBER          reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEF            reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEC            reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    STRING          reduce using rule 75 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)


state 249

    (77) decisionb -> bloque . pn2
    (78) decisionb -> bloque . SINO pn3 bloque pn2
    (79) pn2 -> . empty
    (125) empty -> .

    SINO            shift and go to state 256
    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    pn2                            shift and go to state 255
    empty                          shift and go to state 257

state 250

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 . bloque rcn3
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 258

state 251

    (83) rcn2 -> empty .

    LBRACKET        reduce using rule 83 (rcn2 -> empty .)


state 252

    (85) repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER . bloque
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 259

state 253

    (64) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .

    RBRACKET        reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    ID              reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    REGRESA         reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    LEE             reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    ESCRIBE         reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    SI              reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    MIENTRAS        reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    DESDE           reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    LPAREN          reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    PLUS            reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    MINUS           reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    NUMBER          reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    CTEF            reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    CTEC            reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    STRING          reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)


state 254

    (72) escriturab -> COMMA expresion prin1 escriturab .

    RBRACKET        reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    ID              reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    REGRESA         reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    LEE             reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    SI              reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    DESDE           reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    LPAREN          reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    PLUS            reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    MINUS           reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    NUMBER          reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEF            reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEC            reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)
    STRING          reduce using rule 72 (escriturab -> COMMA expresion prin1 escriturab .)


state 255

    (77) decisionb -> bloque pn2 .

    RBRACKET        reduce using rule 77 (decisionb -> bloque pn2 .)
    ID              reduce using rule 77 (decisionb -> bloque pn2 .)
    REGRESA         reduce using rule 77 (decisionb -> bloque pn2 .)
    LEE             reduce using rule 77 (decisionb -> bloque pn2 .)
    ESCRIBE         reduce using rule 77 (decisionb -> bloque pn2 .)
    SI              reduce using rule 77 (decisionb -> bloque pn2 .)
    MIENTRAS        reduce using rule 77 (decisionb -> bloque pn2 .)
    DESDE           reduce using rule 77 (decisionb -> bloque pn2 .)
    LPAREN          reduce using rule 77 (decisionb -> bloque pn2 .)
    PLUS            reduce using rule 77 (decisionb -> bloque pn2 .)
    MINUS           reduce using rule 77 (decisionb -> bloque pn2 .)
    NUMBER          reduce using rule 77 (decisionb -> bloque pn2 .)
    CTEF            reduce using rule 77 (decisionb -> bloque pn2 .)
    CTEC            reduce using rule 77 (decisionb -> bloque pn2 .)
    STRING          reduce using rule 77 (decisionb -> bloque pn2 .)


state 256

    (78) decisionb -> bloque SINO . pn3 bloque pn2
    (80) pn3 -> . empty
    (125) empty -> .

    LBRACKET        reduce using rule 125 (empty -> .)

    pn3                            shift and go to state 260
    empty                          shift and go to state 261

state 257

    (79) pn2 -> empty .

    RBRACKET        reduce using rule 79 (pn2 -> empty .)
    ID              reduce using rule 79 (pn2 -> empty .)
    REGRESA         reduce using rule 79 (pn2 -> empty .)
    LEE             reduce using rule 79 (pn2 -> empty .)
    ESCRIBE         reduce using rule 79 (pn2 -> empty .)
    SI              reduce using rule 79 (pn2 -> empty .)
    MIENTRAS        reduce using rule 79 (pn2 -> empty .)
    DESDE           reduce using rule 79 (pn2 -> empty .)
    LPAREN          reduce using rule 79 (pn2 -> empty .)
    PLUS            reduce using rule 79 (pn2 -> empty .)
    MINUS           reduce using rule 79 (pn2 -> empty .)
    NUMBER          reduce using rule 79 (pn2 -> empty .)
    CTEF            reduce using rule 79 (pn2 -> empty .)
    CTEC            reduce using rule 79 (pn2 -> empty .)
    STRING          reduce using rule 79 (pn2 -> empty .)


state 258

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque . rcn3
    (84) rcn3 -> . empty
    (125) empty -> .

    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    rcn3                           shift and go to state 262
    empty                          shift and go to state 263

state 259

    (85) repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .

    RBRACKET        reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    ID              reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    REGRESA         reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    LEE             reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    ESCRIBE         reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    SI              reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    MIENTRAS        reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    DESDE           reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    LPAREN          reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    PLUS            reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    MINUS           reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    NUMBER          reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    CTEF            reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    CTEC            reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    STRING          reduce using rule 85 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)


state 260

    (78) decisionb -> bloque SINO pn3 . bloque pn2
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 264

state 261

    (80) pn3 -> empty .

    LBRACKET        reduce using rule 80 (pn3 -> empty .)


state 262

    (81) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .

    RBRACKET        reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ID              reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    REGRESA         reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LEE             reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ESCRIBE         reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    SI              reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MIENTRAS        reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    DESDE           reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LPAREN          reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    PLUS            reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MINUS           reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    NUMBER          reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEF            reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEC            reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    STRING          reduce using rule 81 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)


state 263

    (84) rcn3 -> empty .

    RBRACKET        reduce using rule 84 (rcn3 -> empty .)
    ID              reduce using rule 84 (rcn3 -> empty .)
    REGRESA         reduce using rule 84 (rcn3 -> empty .)
    LEE             reduce using rule 84 (rcn3 -> empty .)
    ESCRIBE         reduce using rule 84 (rcn3 -> empty .)
    SI              reduce using rule 84 (rcn3 -> empty .)
    MIENTRAS        reduce using rule 84 (rcn3 -> empty .)
    DESDE           reduce using rule 84 (rcn3 -> empty .)
    LPAREN          reduce using rule 84 (rcn3 -> empty .)
    PLUS            reduce using rule 84 (rcn3 -> empty .)
    MINUS           reduce using rule 84 (rcn3 -> empty .)
    NUMBER          reduce using rule 84 (rcn3 -> empty .)
    CTEF            reduce using rule 84 (rcn3 -> empty .)
    CTEC            reduce using rule 84 (rcn3 -> empty .)
    STRING          reduce using rule 84 (rcn3 -> empty .)


state 264

    (78) decisionb -> bloque SINO pn3 bloque . pn2
    (79) pn2 -> . empty
    (125) empty -> .

    RBRACKET        reduce using rule 125 (empty -> .)
    ID              reduce using rule 125 (empty -> .)
    REGRESA         reduce using rule 125 (empty -> .)
    LEE             reduce using rule 125 (empty -> .)
    ESCRIBE         reduce using rule 125 (empty -> .)
    SI              reduce using rule 125 (empty -> .)
    MIENTRAS        reduce using rule 125 (empty -> .)
    DESDE           reduce using rule 125 (empty -> .)
    LPAREN          reduce using rule 125 (empty -> .)
    PLUS            reduce using rule 125 (empty -> .)
    MINUS           reduce using rule 125 (empty -> .)
    NUMBER          reduce using rule 125 (empty -> .)
    CTEF            reduce using rule 125 (empty -> .)
    CTEC            reduce using rule 125 (empty -> .)
    STRING          reduce using rule 125 (empty -> .)

    pn2                            shift and go to state 265
    empty                          shift and go to state 257

state 265

    (78) decisionb -> bloque SINO pn3 bloque pn2 .

    RBRACKET        reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ID              reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    REGRESA         reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LEE             reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ESCRIBE         reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    SI              reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MIENTRAS        reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    DESDE           reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LPAREN          reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    PLUS            reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MINUS           reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    NUMBER          reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEF            reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEC            reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)
    STRING          reduce using rule 78 (decisionb -> bloque SINO pn3 bloque pn2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 123 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 186 resolved as shift
WARNING: reduce/reduce conflict in state 161 resolved using rule (fnvn1 -> empty)
WARNING: rejected rule (llamadafun -> empty) in state 161
WARNING: reduce/reduce conflict in state 193 resolved using rule (cte -> CTEC)
WARNING: rejected rule (empty -> <empty>) in state 193
