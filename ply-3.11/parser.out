Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    CTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA agregarfuncmain ID SEMICOL programab
Rule 2     programab -> vars funcion programac
Rule 3     programab -> programac
Rule 4     programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque
Rule 5     prinn -> empty
Rule 6     agregarfuncmain2 -> <empty>
Rule 7     agregarfuncmain -> <empty>
Rule 8     id -> ID agregavar
Rule 9     id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2
Rule 10    arreglo -> empty
Rule 11    arreglo2 -> empty
Rule 12    tipovar -> INT agregatipo
Rule 13    tipovar -> FLOAT agregatipo
Rule 14    tipovar -> CHAR agregatipo
Rule 15    tipovarfunc -> INT agregatipo
Rule 16    tipovarfunc -> FLOAT agregatipo
Rule 17    tipovarfunc -> CHAR agregatipo
Rule 18    tipofun -> INT
Rule 19    tipofun -> FLOAT
Rule 20    tipofun -> CHAR
Rule 21    tipofun -> VOID
Rule 22    agregatipo -> <empty>
Rule 23    vars -> VAR varsb
Rule 24    varsb -> tipovar varsc
Rule 25    varsb -> contVReset empty
Rule 26    varsc -> id COMMA varsc
Rule 27    varsc -> id SEMICOL varsb
Rule 28    varsc -> empty
Rule 29    contVReset -> empty
Rule 30    varsfunc -> tipovarfunc varsfuncb
Rule 31    varsfuncb -> id COMMA varsfuncb
Rule 32    varsfuncb -> varsfunc
Rule 33    varsfuncb -> id
Rule 34    funcion -> FUNCION aux2 ID LPAREN funcionb
Rule 35    funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
Rule 36    funcion -> empty
Rule 37    aux2 -> empty
Rule 38    agregafunc -> empty
Rule 39    funcionb -> RPAREN testeru funcionc
Rule 40    funcionb -> varsfunc RPAREN testeru funcionc
Rule 41    testeru -> empty
Rule 42    funcionc -> vars agregacont bloque reinicio funcion
Rule 43    funcionc -> agregacont bloque reinicio funcion
Rule 44    funcionc -> empty
Rule 45    agregacont -> empty
Rule 46    reinicio -> empty
Rule 47    bloque -> LBRACKET estatuto bloqueb
Rule 48    bloque -> LBRACKET RBRACKET
Rule 49    bloqueb -> RBRACKET helper
Rule 50    bloqueb -> estatuto bloqueb
Rule 51    helper -> empty
Rule 52    asign -> LBRACK arrn expresion arrn2 RBRACK arrn3
Rule 53    asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3
Rule 54    asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3
Rule 55    arrn -> empty
Rule 56    arrn2 -> empty
Rule 57    arrn3 -> empty
Rule 58    asignacion -> ID EQUAL asignacionb
Rule 59    asignacion -> ID asign EQUAL asignacionb
Rule 60    asignacionb -> expresion SEMICOL
Rule 61    asignacionb -> ID asign SEMICOL
Rule 62    retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL
Rule 63    retn -> empty
Rule 64    funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
Rule 65    funcionvoidb -> COMMA expresion fnvn2 funcionvoidb
Rule 66    funcionvoidb -> RPAREN fnvn3 SEMICOL
Rule 67    fnvn1 -> empty
Rule 68    fnvn2 -> empty
Rule 69    fnvn3 -> empty
Rule 70    lee -> LEE LPAREN id leeb
Rule 71    leeb -> RPAREN leen SEMICOL
Rule 72    leeb -> COMMA leen id leeb
Rule 73    leen -> empty
Rule 74    escritura -> ESCRIBE LPAREN expresion prin1 escriturab
Rule 75    escriturab -> COMMA expresion prin1 escriturab
Rule 76    escriturab -> RPAREN SEMICOL
Rule 77    prin1 -> empty
Rule 78    decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
Rule 79    pn1 -> empty
Rule 80    decisionb -> bloque pn2
Rule 81    decisionb -> bloque SINO pn3 bloque pn2
Rule 82    pn2 -> empty
Rule 83    pn3 -> empty
Rule 84    repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
Rule 85    rcn1 -> empty
Rule 86    rcn2 -> empty
Rule 87    rcn3 -> empty
Rule 88    repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque
Rule 89    rncns -> empty
Rule 90    rncn -> empty
Rule 91    cte -> ID
Rule 92    cte -> NUMBER saveconst
Rule 93    cte -> CTEF saveconst
Rule 94    cte -> CTEC
Rule 95    cte -> STRING savestringconst
Rule 96    saveconst -> empty
Rule 97    savestringconst -> empty
Rule 98    expresion -> exp
Rule 99    expresion -> exp GTHAN exp
Rule 100   expresion -> exp LTHAN exp
Rule 101   expresion -> exp EQLOP exp
Rule 102   expresion -> exp GEQUAL exp
Rule 103   expresion -> exp LEQUAL exp
Rule 104   expresion -> exp ABRACKET exp
Rule 105   exp -> termino
Rule 106   exp -> termino expb
Rule 107   expb -> PLUS exp
Rule 108   expb -> MINUS exp
Rule 109   termino -> factor
Rule 110   termino -> factor terminob
Rule 111   terminob -> TIMES termino
Rule 112   terminob -> DIVIDE termino
Rule 113   factor -> LPAREN expresion RPAREN
Rule 114   factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
Rule 115   factor -> PLUS cte
Rule 116   factor -> MINUS cte
Rule 117   factor -> cte
Rule 118   factor -> ID asign
Rule 119   llamadafun -> empty
Rule 120   llamadafun2 -> empty
Rule 121   llamadafun3 -> empty
Rule 122   estatuto -> asignacion
Rule 123   estatuto -> funcionvoid
Rule 124   estatuto -> retorno
Rule 125   estatuto -> lee
Rule 126   estatuto -> escritura
Rule 127   estatuto -> decision
Rule 128   estatuto -> repeticioncond
Rule 129   estatuto -> repeticionnocond
Rule 130   estatuto -> expresion
Rule 131   empty -> <empty>
Rule 132   agregavar -> <empty>

Terminals, with rules where they appear

ABRACKET             : 104
CHAR                 : 14 17 20
COLON                : 
COMMA                : 26 31 65 72 75
COMMENT              : 
CTEC                 : 54 94
CTEF                 : 93
CTEI                 : 53
CTES                 : 
DESDE                : 88
DIVIDE               : 112
ENTONCES             : 78
EQLOP                : 101
EQUAL                : 58 59 88
ESCRIBE              : 74
FLOAT                : 13 16 19
FUNCION              : 34 35
GEQUAL               : 102
GTHAN                : 99
HACER                : 88
HASTA                : 88
HAZ                  : 84
ID                   : 1 8 9 34 35 58 59 61 64 91 114 118
INT                  : 12 15 18
LBRACK               : 9 52 53 54
LBRACKET             : 47 48
LEE                  : 70
LEQUAL               : 103
LPAREN               : 4 34 35 62 64 70 74 78 84 113 114
LTHAN                : 100
MIENTRAS             : 84
MINUS                : 108 116
NUMBER               : 92
PLUS                 : 107 115
PRINCIPAL            : 4
PROGRAMA             : 1
RBRACK               : 9 52 53 54
RBRACKET             : 48 49
REGRESA              : 62
RPAREN               : 4 39 40 62 66 71 76 78 84 113 114
SEMICOL              : 1 27 60 61 62 66 71 76
SI                   : 78
SINO                 : 81
STRING               : 95
TIMES                : 111
VAR                  : 23
VOID                 : 21
error                : 

Nonterminals, with rules where they appear

agregacont           : 42 43
agregafunc           : 35
agregarfuncmain      : 1
agregarfuncmain2     : 4
agregatipo           : 12 13 14 15 16 17
agregavar            : 8 9
arreglo              : 9
arreglo2             : 9
arrn                 : 52 53 54
arrn2                : 52 53 54
arrn3                : 52 53 54
asign                : 59 61 118
asignacion           : 122
asignacionb          : 58 59
aux2                 : 34 35
bloque               : 4 42 43 80 81 81 84 88
bloqueb              : 47 50
contVReset           : 25
cte                  : 9 115 116 117
decision             : 127
decisionb            : 78
empty                : 5 10 11 25 28 29 36 37 38 41 44 45 46 51 55 56 57 63 67 68 69 73 77 79 82 83 85 86 87 89 90 96 97 119 120 121
escritura            : 126
escriturab           : 74 75
estatuto             : 47 50
exp                  : 88 88 98 99 99 100 100 101 101 102 102 103 103 104 104 107 108
expb                 : 106
expresion            : 52 60 62 64 65 74 75 78 84 113 114 130
factor               : 109 110
fnvn1                : 64
fnvn2                : 64 65
fnvn3                : 66
funcion              : 2 42 43
funcionb             : 34 35
funcionc             : 39 40
funcionvoid          : 123
funcionvoidb         : 64 65
helper               : 49
id                   : 26 27 31 33 70 72 88
lee                  : 125
leeb                 : 70 72
leen                 : 71 72
llamadafun           : 114
llamadafun2          : 114
llamadafun3          : 114
pn1                  : 78
pn2                  : 80 81
pn3                  : 81
prin1                : 74 75
prinn                : 4
programa             : 0
programab            : 1
programac            : 2 3
rcn1                 : 84
rcn2                 : 84
rcn3                 : 84
reinicio             : 42 43
repeticioncond       : 128
repeticionnocond     : 129
retn                 : 62
retorno              : 124
rncn                 : 88
rncns                : 88
saveconst            : 92 93
savestringconst      : 95
termino              : 105 106 111 112
terminob             : 110
testeru              : 39 40
tipofun              : 35
tipovar              : 24
tipovarfunc          : 30
vars                 : 2 42
varsb                : 23 27
varsc                : 24 26
varsfunc             : 32 40
varsfuncb            : 30 31

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA agregarfuncmain ID SEMICOL programab

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . agregarfuncmain ID SEMICOL programab
    (7) agregarfuncmain -> .

    ID              reduce using rule 7 (agregarfuncmain -> .)

    agregarfuncmain                shift and go to state 3

state 3

    (1) programa -> PROGRAMA agregarfuncmain . ID SEMICOL programab

    ID              shift and go to state 4


state 4

    (1) programa -> PROGRAMA agregarfuncmain ID . SEMICOL programab

    SEMICOL         shift and go to state 5


state 5

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL . programab
    (2) programab -> . vars funcion programac
    (3) programab -> . programac
    (23) vars -> . VAR varsb
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque

    VAR             shift and go to state 9
    PRINCIPAL       shift and go to state 10

    programab                      shift and go to state 6
    vars                           shift and go to state 7
    programac                      shift and go to state 8

state 6

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .

    $end            reduce using rule 1 (programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .)


state 7

    (2) programab -> vars . funcion programac
    (34) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (35) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (36) funcion -> . empty
    (131) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 131 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (3) programab -> programac .

    $end            reduce using rule 3 (programab -> programac .)


state 9

    (23) vars -> VAR . varsb
    (24) varsb -> . tipovar varsc
    (25) varsb -> . contVReset empty
    (12) tipovar -> . INT agregatipo
    (13) tipovar -> . FLOAT agregatipo
    (14) tipovar -> . CHAR agregatipo
    (29) contVReset -> . empty
    (131) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    varsb                          shift and go to state 14
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 10

    (4) programac -> PRINCIPAL . agregarfuncmain2 LPAREN RPAREN prinn bloque
    (6) agregarfuncmain2 -> .

    LPAREN          reduce using rule 6 (agregarfuncmain2 -> .)

    agregarfuncmain2               shift and go to state 21

state 11

    (2) programab -> vars funcion . programac
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque

    PRINCIPAL       shift and go to state 10

    programac                      shift and go to state 22

state 12

    (34) funcion -> FUNCION . aux2 ID LPAREN funcionb
    (35) funcion -> FUNCION . aux2 tipofun ID agregafunc LPAREN funcionb
    (37) aux2 -> . empty
    (131) empty -> .

    ID              reduce using rule 131 (empty -> .)
    INT             reduce using rule 131 (empty -> .)
    FLOAT           reduce using rule 131 (empty -> .)
    CHAR            reduce using rule 131 (empty -> .)
    VOID            reduce using rule 131 (empty -> .)

    aux2                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (36) funcion -> empty .

    PRINCIPAL       reduce using rule 36 (funcion -> empty .)


state 14

    (23) vars -> VAR varsb .

    FUNCION         reduce using rule 23 (vars -> VAR varsb .)
    PRINCIPAL       reduce using rule 23 (vars -> VAR varsb .)
    LBRACKET        reduce using rule 23 (vars -> VAR varsb .)


state 15

    (24) varsb -> tipovar . varsc
    (26) varsc -> . id COMMA varsc
    (27) varsc -> . id SEMICOL varsb
    (28) varsc -> . empty
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (131) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    varsc                          shift and go to state 25
    id                             shift and go to state 26
    empty                          shift and go to state 27

state 16

    (25) varsb -> contVReset . empty
    (131) empty -> .

    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    empty                          shift and go to state 29

state 17

    (29) contVReset -> empty .

    FUNCION         reduce using rule 29 (contVReset -> empty .)
    PRINCIPAL       reduce using rule 29 (contVReset -> empty .)
    LBRACKET        reduce using rule 29 (contVReset -> empty .)


state 18

    (12) tipovar -> INT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    FUNCION         reduce using rule 22 (agregatipo -> .)
    PRINCIPAL       reduce using rule 22 (agregatipo -> .)
    LBRACKET        reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 30

state 19

    (13) tipovar -> FLOAT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    FUNCION         reduce using rule 22 (agregatipo -> .)
    PRINCIPAL       reduce using rule 22 (agregatipo -> .)
    LBRACKET        reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 31

state 20

    (14) tipovar -> CHAR . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    FUNCION         reduce using rule 22 (agregatipo -> .)
    PRINCIPAL       reduce using rule 22 (agregatipo -> .)
    LBRACKET        reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 32

state 21

    (4) programac -> PRINCIPAL agregarfuncmain2 . LPAREN RPAREN prinn bloque

    LPAREN          shift and go to state 33


state 22

    (2) programab -> vars funcion programac .

    $end            reduce using rule 2 (programab -> vars funcion programac .)


state 23

    (34) funcion -> FUNCION aux2 . ID LPAREN funcionb
    (35) funcion -> FUNCION aux2 . tipofun ID agregafunc LPAREN funcionb
    (18) tipofun -> . INT
    (19) tipofun -> . FLOAT
    (20) tipofun -> . CHAR
    (21) tipofun -> . VOID

    ID              shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    VOID            shift and go to state 39

    tipofun                        shift and go to state 35

state 24

    (37) aux2 -> empty .

    ID              reduce using rule 37 (aux2 -> empty .)
    INT             reduce using rule 37 (aux2 -> empty .)
    FLOAT           reduce using rule 37 (aux2 -> empty .)
    CHAR            reduce using rule 37 (aux2 -> empty .)
    VOID            reduce using rule 37 (aux2 -> empty .)


state 25

    (24) varsb -> tipovar varsc .

    FUNCION         reduce using rule 24 (varsb -> tipovar varsc .)
    PRINCIPAL       reduce using rule 24 (varsb -> tipovar varsc .)
    LBRACKET        reduce using rule 24 (varsb -> tipovar varsc .)


state 26

    (26) varsc -> id . COMMA varsc
    (27) varsc -> id . SEMICOL varsb

    COMMA           shift and go to state 40
    SEMICOL         shift and go to state 41


state 27

    (28) varsc -> empty .

    FUNCION         reduce using rule 28 (varsc -> empty .)
    PRINCIPAL       reduce using rule 28 (varsc -> empty .)
    LBRACKET        reduce using rule 28 (varsc -> empty .)


state 28

    (8) id -> ID . agregavar
    (9) id -> ID . agregavar LBRACK arreglo cte RBRACK arreglo2
    (132) agregavar -> .

    LBRACK          reduce using rule 132 (agregavar -> .)
    COMMA           reduce using rule 132 (agregavar -> .)
    SEMICOL         reduce using rule 132 (agregavar -> .)
    RPAREN          reduce using rule 132 (agregavar -> .)
    EQUAL           reduce using rule 132 (agregavar -> .)

    agregavar                      shift and go to state 42

state 29

    (25) varsb -> contVReset empty .

    FUNCION         reduce using rule 25 (varsb -> contVReset empty .)
    PRINCIPAL       reduce using rule 25 (varsb -> contVReset empty .)
    LBRACKET        reduce using rule 25 (varsb -> contVReset empty .)


state 30

    (12) tipovar -> INT agregatipo .

    ID              reduce using rule 12 (tipovar -> INT agregatipo .)
    FUNCION         reduce using rule 12 (tipovar -> INT agregatipo .)
    PRINCIPAL       reduce using rule 12 (tipovar -> INT agregatipo .)
    LBRACKET        reduce using rule 12 (tipovar -> INT agregatipo .)


state 31

    (13) tipovar -> FLOAT agregatipo .

    ID              reduce using rule 13 (tipovar -> FLOAT agregatipo .)
    FUNCION         reduce using rule 13 (tipovar -> FLOAT agregatipo .)
    PRINCIPAL       reduce using rule 13 (tipovar -> FLOAT agregatipo .)
    LBRACKET        reduce using rule 13 (tipovar -> FLOAT agregatipo .)


state 32

    (14) tipovar -> CHAR agregatipo .

    ID              reduce using rule 14 (tipovar -> CHAR agregatipo .)
    FUNCION         reduce using rule 14 (tipovar -> CHAR agregatipo .)
    PRINCIPAL       reduce using rule 14 (tipovar -> CHAR agregatipo .)
    LBRACKET        reduce using rule 14 (tipovar -> CHAR agregatipo .)


state 33

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN . RPAREN prinn bloque

    RPAREN          shift and go to state 43


state 34

    (34) funcion -> FUNCION aux2 ID . LPAREN funcionb

    LPAREN          shift and go to state 44


state 35

    (35) funcion -> FUNCION aux2 tipofun . ID agregafunc LPAREN funcionb

    ID              shift and go to state 45


state 36

    (18) tipofun -> INT .

    ID              reduce using rule 18 (tipofun -> INT .)


state 37

    (19) tipofun -> FLOAT .

    ID              reduce using rule 19 (tipofun -> FLOAT .)


state 38

    (20) tipofun -> CHAR .

    ID              reduce using rule 20 (tipofun -> CHAR .)


state 39

    (21) tipofun -> VOID .

    ID              reduce using rule 21 (tipofun -> VOID .)


state 40

    (26) varsc -> id COMMA . varsc
    (26) varsc -> . id COMMA varsc
    (27) varsc -> . id SEMICOL varsb
    (28) varsc -> . empty
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (131) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    id                             shift and go to state 26
    varsc                          shift and go to state 46
    empty                          shift and go to state 27

state 41

    (27) varsc -> id SEMICOL . varsb
    (24) varsb -> . tipovar varsc
    (25) varsb -> . contVReset empty
    (12) tipovar -> . INT agregatipo
    (13) tipovar -> . FLOAT agregatipo
    (14) tipovar -> . CHAR agregatipo
    (29) contVReset -> . empty
    (131) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    varsb                          shift and go to state 47
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 42

    (8) id -> ID agregavar .
    (9) id -> ID agregavar . LBRACK arreglo cte RBRACK arreglo2

    COMMA           reduce using rule 8 (id -> ID agregavar .)
    SEMICOL         reduce using rule 8 (id -> ID agregavar .)
    RPAREN          reduce using rule 8 (id -> ID agregavar .)
    EQUAL           reduce using rule 8 (id -> ID agregavar .)
    LBRACK          shift and go to state 48


state 43

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN . prinn bloque
    (5) prinn -> . empty
    (131) empty -> .

    LBRACKET        reduce using rule 131 (empty -> .)

    prinn                          shift and go to state 49
    empty                          shift and go to state 50

state 44

    (34) funcion -> FUNCION aux2 ID LPAREN . funcionb
    (39) funcionb -> . RPAREN testeru funcionc
    (40) funcionb -> . varsfunc RPAREN testeru funcionc
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 51
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 45

    (35) funcion -> FUNCION aux2 tipofun ID . agregafunc LPAREN funcionb
    (38) agregafunc -> . empty
    (131) empty -> .

    LPAREN          reduce using rule 131 (empty -> .)

    agregafunc                     shift and go to state 58
    empty                          shift and go to state 59

state 46

    (26) varsc -> id COMMA varsc .

    FUNCION         reduce using rule 26 (varsc -> id COMMA varsc .)
    PRINCIPAL       reduce using rule 26 (varsc -> id COMMA varsc .)
    LBRACKET        reduce using rule 26 (varsc -> id COMMA varsc .)


state 47

    (27) varsc -> id SEMICOL varsb .

    FUNCION         reduce using rule 27 (varsc -> id SEMICOL varsb .)
    PRINCIPAL       reduce using rule 27 (varsc -> id SEMICOL varsb .)
    LBRACKET        reduce using rule 27 (varsc -> id SEMICOL varsb .)


state 48

    (9) id -> ID agregavar LBRACK . arreglo cte RBRACK arreglo2
    (10) arreglo -> . empty
    (131) empty -> .

    ID              reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    arreglo                        shift and go to state 60
    empty                          shift and go to state 61

state 49

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn . bloque
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 62

state 50

    (5) prinn -> empty .

    LBRACKET        reduce using rule 5 (prinn -> empty .)


state 51

    (34) funcion -> FUNCION aux2 ID LPAREN funcionb .

    PRINCIPAL       reduce using rule 34 (funcion -> FUNCION aux2 ID LPAREN funcionb .)


state 52

    (39) funcionb -> RPAREN . testeru funcionc
    (41) testeru -> . empty
    (131) empty -> .

    VAR             reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)

    testeru                        shift and go to state 64
    empty                          shift and go to state 65

state 53

    (40) funcionb -> varsfunc . RPAREN testeru funcionc

    RPAREN          shift and go to state 66


state 54

    (30) varsfunc -> tipovarfunc . varsfuncb
    (31) varsfuncb -> . id COMMA varsfuncb
    (32) varsfuncb -> . varsfunc
    (33) varsfuncb -> . id
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    tipovarfunc                    shift and go to state 54
    varsfuncb                      shift and go to state 67
    id                             shift and go to state 68
    varsfunc                       shift and go to state 69

state 55

    (15) tipovarfunc -> INT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    INT             reduce using rule 22 (agregatipo -> .)
    FLOAT           reduce using rule 22 (agregatipo -> .)
    CHAR            reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 70

state 56

    (16) tipovarfunc -> FLOAT . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    INT             reduce using rule 22 (agregatipo -> .)
    FLOAT           reduce using rule 22 (agregatipo -> .)
    CHAR            reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 71

state 57

    (17) tipovarfunc -> CHAR . agregatipo
    (22) agregatipo -> .

    ID              reduce using rule 22 (agregatipo -> .)
    INT             reduce using rule 22 (agregatipo -> .)
    FLOAT           reduce using rule 22 (agregatipo -> .)
    CHAR            reduce using rule 22 (agregatipo -> .)

    agregatipo                     shift and go to state 72

state 58

    (35) funcion -> FUNCION aux2 tipofun ID agregafunc . LPAREN funcionb

    LPAREN          shift and go to state 73


state 59

    (38) agregafunc -> empty .

    LPAREN          reduce using rule 38 (agregafunc -> empty .)


state 60

    (9) id -> ID agregavar LBRACK arreglo . cte RBRACK arreglo2
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 75

state 61

    (10) arreglo -> empty .

    ID              reduce using rule 10 (arreglo -> empty .)
    NUMBER          reduce using rule 10 (arreglo -> empty .)
    CTEF            reduce using rule 10 (arreglo -> empty .)
    CTEC            reduce using rule 10 (arreglo -> empty .)
    STRING          reduce using rule 10 (arreglo -> empty .)


state 62

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque .

    $end            reduce using rule 4 (programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque .)


state 63

    (47) bloque -> LBRACKET . estatuto bloqueb
    (48) bloque -> LBRACKET . RBRACKET
    (122) estatuto -> . asignacion
    (123) estatuto -> . funcionvoid
    (124) estatuto -> . retorno
    (125) estatuto -> . lee
    (126) estatuto -> . escritura
    (127) estatuto -> . decision
    (128) estatuto -> . repeticioncond
    (129) estatuto -> . repeticionnocond
    (130) estatuto -> . expresion
    (58) asignacion -> . ID EQUAL asignacionb
    (59) asignacion -> . ID asign EQUAL asignacionb
    (64) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (62) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (70) lee -> . LEE LPAREN id leeb
    (74) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (78) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (84) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (88) repeticionnocond -> . DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    RBRACKET        shift and go to state 81
    ID              shift and go to state 91
    REGRESA         shift and go to state 93
    LEE             shift and go to state 94
    ESCRIBE         shift and go to state 95
    SI              shift and go to state 96
    MIENTRAS        shift and go to state 97
    DESDE           shift and go to state 98
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 80
    asignacion                     shift and go to state 82
    funcionvoid                    shift and go to state 83
    retorno                        shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    decision                       shift and go to state 87
    repeticioncond                 shift and go to state 88
    repeticionnocond               shift and go to state 89
    expresion                      shift and go to state 90
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 64

    (39) funcionb -> RPAREN testeru . funcionc
    (42) funcionc -> . vars agregacont bloque reinicio funcion
    (43) funcionc -> . agregacont bloque reinicio funcion
    (44) funcionc -> . empty
    (23) vars -> . VAR varsb
    (45) agregacont -> . empty
    (131) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    funcionc                       shift and go to state 105
    vars                           shift and go to state 106
    agregacont                     shift and go to state 107
    empty                          shift and go to state 108

state 65

    (41) testeru -> empty .

    VAR             reduce using rule 41 (testeru -> empty .)
    LBRACKET        reduce using rule 41 (testeru -> empty .)
    PRINCIPAL       reduce using rule 41 (testeru -> empty .)


state 66

    (40) funcionb -> varsfunc RPAREN . testeru funcionc
    (41) testeru -> . empty
    (131) empty -> .

    VAR             reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)

    testeru                        shift and go to state 109
    empty                          shift and go to state 65

state 67

    (30) varsfunc -> tipovarfunc varsfuncb .

    RPAREN          reduce using rule 30 (varsfunc -> tipovarfunc varsfuncb .)


state 68

    (31) varsfuncb -> id . COMMA varsfuncb
    (33) varsfuncb -> id .

    COMMA           shift and go to state 110
    RPAREN          reduce using rule 33 (varsfuncb -> id .)


state 69

    (32) varsfuncb -> varsfunc .

    RPAREN          reduce using rule 32 (varsfuncb -> varsfunc .)


state 70

    (15) tipovarfunc -> INT agregatipo .

    ID              reduce using rule 15 (tipovarfunc -> INT agregatipo .)
    INT             reduce using rule 15 (tipovarfunc -> INT agregatipo .)
    FLOAT           reduce using rule 15 (tipovarfunc -> INT agregatipo .)
    CHAR            reduce using rule 15 (tipovarfunc -> INT agregatipo .)


state 71

    (16) tipovarfunc -> FLOAT agregatipo .

    ID              reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)
    INT             reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)
    FLOAT           reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)
    CHAR            reduce using rule 16 (tipovarfunc -> FLOAT agregatipo .)


state 72

    (17) tipovarfunc -> CHAR agregatipo .

    ID              reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)
    INT             reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)
    FLOAT           reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)
    CHAR            reduce using rule 17 (tipovarfunc -> CHAR agregatipo .)


state 73

    (35) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN . funcionb
    (39) funcionb -> . RPAREN testeru funcionc
    (40) funcionb -> . varsfunc RPAREN testeru funcionc
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 111
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 74

    (91) cte -> ID .

    RBRACK          reduce using rule 91 (cte -> ID .)
    TIMES           reduce using rule 91 (cte -> ID .)
    DIVIDE          reduce using rule 91 (cte -> ID .)
    PLUS            reduce using rule 91 (cte -> ID .)
    MINUS           reduce using rule 91 (cte -> ID .)
    GTHAN           reduce using rule 91 (cte -> ID .)
    LTHAN           reduce using rule 91 (cte -> ID .)
    EQLOP           reduce using rule 91 (cte -> ID .)
    GEQUAL          reduce using rule 91 (cte -> ID .)
    LEQUAL          reduce using rule 91 (cte -> ID .)
    ABRACKET        reduce using rule 91 (cte -> ID .)
    RBRACKET        reduce using rule 91 (cte -> ID .)
    ID              reduce using rule 91 (cte -> ID .)
    REGRESA         reduce using rule 91 (cte -> ID .)
    LEE             reduce using rule 91 (cte -> ID .)
    ESCRIBE         reduce using rule 91 (cte -> ID .)
    SI              reduce using rule 91 (cte -> ID .)
    MIENTRAS        reduce using rule 91 (cte -> ID .)
    DESDE           reduce using rule 91 (cte -> ID .)
    LPAREN          reduce using rule 91 (cte -> ID .)
    NUMBER          reduce using rule 91 (cte -> ID .)
    CTEF            reduce using rule 91 (cte -> ID .)
    CTEC            reduce using rule 91 (cte -> ID .)
    STRING          reduce using rule 91 (cte -> ID .)
    RPAREN          reduce using rule 91 (cte -> ID .)
    SEMICOL         reduce using rule 91 (cte -> ID .)
    COMMA           reduce using rule 91 (cte -> ID .)
    HASTA           reduce using rule 91 (cte -> ID .)
    HACER           reduce using rule 91 (cte -> ID .)


state 75

    (9) id -> ID agregavar LBRACK arreglo cte . RBRACK arreglo2

    RBRACK          shift and go to state 112


state 76

    (92) cte -> NUMBER . saveconst
    (96) saveconst -> . empty
    (131) empty -> .

    RBRACK          reduce using rule 131 (empty -> .)
    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    saveconst                      shift and go to state 113
    empty                          shift and go to state 114

state 77

    (93) cte -> CTEF . saveconst
    (96) saveconst -> . empty
    (131) empty -> .

    RBRACK          reduce using rule 131 (empty -> .)
    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    saveconst                      shift and go to state 115
    empty                          shift and go to state 114

state 78

    (94) cte -> CTEC .

    RBRACK          reduce using rule 94 (cte -> CTEC .)
    TIMES           reduce using rule 94 (cte -> CTEC .)
    DIVIDE          reduce using rule 94 (cte -> CTEC .)
    PLUS            reduce using rule 94 (cte -> CTEC .)
    MINUS           reduce using rule 94 (cte -> CTEC .)
    GTHAN           reduce using rule 94 (cte -> CTEC .)
    LTHAN           reduce using rule 94 (cte -> CTEC .)
    EQLOP           reduce using rule 94 (cte -> CTEC .)
    GEQUAL          reduce using rule 94 (cte -> CTEC .)
    LEQUAL          reduce using rule 94 (cte -> CTEC .)
    ABRACKET        reduce using rule 94 (cte -> CTEC .)
    RBRACKET        reduce using rule 94 (cte -> CTEC .)
    ID              reduce using rule 94 (cte -> CTEC .)
    REGRESA         reduce using rule 94 (cte -> CTEC .)
    LEE             reduce using rule 94 (cte -> CTEC .)
    ESCRIBE         reduce using rule 94 (cte -> CTEC .)
    SI              reduce using rule 94 (cte -> CTEC .)
    MIENTRAS        reduce using rule 94 (cte -> CTEC .)
    DESDE           reduce using rule 94 (cte -> CTEC .)
    LPAREN          reduce using rule 94 (cte -> CTEC .)
    NUMBER          reduce using rule 94 (cte -> CTEC .)
    CTEF            reduce using rule 94 (cte -> CTEC .)
    CTEC            reduce using rule 94 (cte -> CTEC .)
    STRING          reduce using rule 94 (cte -> CTEC .)
    RPAREN          reduce using rule 94 (cte -> CTEC .)
    SEMICOL         reduce using rule 94 (cte -> CTEC .)
    COMMA           reduce using rule 94 (cte -> CTEC .)
    HASTA           reduce using rule 94 (cte -> CTEC .)
    HACER           reduce using rule 94 (cte -> CTEC .)


state 79

    (95) cte -> STRING . savestringconst
    (97) savestringconst -> . empty
    (131) empty -> .

    RBRACK          reduce using rule 131 (empty -> .)
    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    savestringconst                shift and go to state 116
    empty                          shift and go to state 117

state 80

    (47) bloque -> LBRACKET estatuto . bloqueb
    (49) bloqueb -> . RBRACKET helper
    (50) bloqueb -> . estatuto bloqueb
    (122) estatuto -> . asignacion
    (123) estatuto -> . funcionvoid
    (124) estatuto -> . retorno
    (125) estatuto -> . lee
    (126) estatuto -> . escritura
    (127) estatuto -> . decision
    (128) estatuto -> . repeticioncond
    (129) estatuto -> . repeticionnocond
    (130) estatuto -> . expresion
    (58) asignacion -> . ID EQUAL asignacionb
    (59) asignacion -> . ID asign EQUAL asignacionb
    (64) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (62) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (70) lee -> . LEE LPAREN id leeb
    (74) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (78) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (84) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (88) repeticionnocond -> . DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    RBRACKET        shift and go to state 120
    ID              shift and go to state 91
    REGRESA         shift and go to state 93
    LEE             shift and go to state 94
    ESCRIBE         shift and go to state 95
    SI              shift and go to state 96
    MIENTRAS        shift and go to state 97
    DESDE           shift and go to state 98
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 118
    bloqueb                        shift and go to state 119
    asignacion                     shift and go to state 82
    funcionvoid                    shift and go to state 83
    retorno                        shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    decision                       shift and go to state 87
    repeticioncond                 shift and go to state 88
    repeticionnocond               shift and go to state 89
    expresion                      shift and go to state 90
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 81

    (48) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    FUNCION         reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    PRINCIPAL       reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    SINO            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    REGRESA         reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    LEE             reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    ESCRIBE         reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    SI              reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    MIENTRAS        reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    DESDE           reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    NUMBER          reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    CTEF            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    CTEC            reduce using rule 48 (bloque -> LBRACKET RBRACKET .)
    STRING          reduce using rule 48 (bloque -> LBRACKET RBRACKET .)


state 82

    (122) estatuto -> asignacion .

    RBRACKET        reduce using rule 122 (estatuto -> asignacion .)
    ID              reduce using rule 122 (estatuto -> asignacion .)
    REGRESA         reduce using rule 122 (estatuto -> asignacion .)
    LEE             reduce using rule 122 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 122 (estatuto -> asignacion .)
    SI              reduce using rule 122 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 122 (estatuto -> asignacion .)
    DESDE           reduce using rule 122 (estatuto -> asignacion .)
    LPAREN          reduce using rule 122 (estatuto -> asignacion .)
    PLUS            reduce using rule 122 (estatuto -> asignacion .)
    MINUS           reduce using rule 122 (estatuto -> asignacion .)
    NUMBER          reduce using rule 122 (estatuto -> asignacion .)
    CTEF            reduce using rule 122 (estatuto -> asignacion .)
    CTEC            reduce using rule 122 (estatuto -> asignacion .)
    STRING          reduce using rule 122 (estatuto -> asignacion .)


state 83

    (123) estatuto -> funcionvoid .

    RBRACKET        reduce using rule 123 (estatuto -> funcionvoid .)
    ID              reduce using rule 123 (estatuto -> funcionvoid .)
    REGRESA         reduce using rule 123 (estatuto -> funcionvoid .)
    LEE             reduce using rule 123 (estatuto -> funcionvoid .)
    ESCRIBE         reduce using rule 123 (estatuto -> funcionvoid .)
    SI              reduce using rule 123 (estatuto -> funcionvoid .)
    MIENTRAS        reduce using rule 123 (estatuto -> funcionvoid .)
    DESDE           reduce using rule 123 (estatuto -> funcionvoid .)
    LPAREN          reduce using rule 123 (estatuto -> funcionvoid .)
    PLUS            reduce using rule 123 (estatuto -> funcionvoid .)
    MINUS           reduce using rule 123 (estatuto -> funcionvoid .)
    NUMBER          reduce using rule 123 (estatuto -> funcionvoid .)
    CTEF            reduce using rule 123 (estatuto -> funcionvoid .)
    CTEC            reduce using rule 123 (estatuto -> funcionvoid .)
    STRING          reduce using rule 123 (estatuto -> funcionvoid .)


state 84

    (124) estatuto -> retorno .

    RBRACKET        reduce using rule 124 (estatuto -> retorno .)
    ID              reduce using rule 124 (estatuto -> retorno .)
    REGRESA         reduce using rule 124 (estatuto -> retorno .)
    LEE             reduce using rule 124 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 124 (estatuto -> retorno .)
    SI              reduce using rule 124 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 124 (estatuto -> retorno .)
    DESDE           reduce using rule 124 (estatuto -> retorno .)
    LPAREN          reduce using rule 124 (estatuto -> retorno .)
    PLUS            reduce using rule 124 (estatuto -> retorno .)
    MINUS           reduce using rule 124 (estatuto -> retorno .)
    NUMBER          reduce using rule 124 (estatuto -> retorno .)
    CTEF            reduce using rule 124 (estatuto -> retorno .)
    CTEC            reduce using rule 124 (estatuto -> retorno .)
    STRING          reduce using rule 124 (estatuto -> retorno .)


state 85

    (125) estatuto -> lee .

    RBRACKET        reduce using rule 125 (estatuto -> lee .)
    ID              reduce using rule 125 (estatuto -> lee .)
    REGRESA         reduce using rule 125 (estatuto -> lee .)
    LEE             reduce using rule 125 (estatuto -> lee .)
    ESCRIBE         reduce using rule 125 (estatuto -> lee .)
    SI              reduce using rule 125 (estatuto -> lee .)
    MIENTRAS        reduce using rule 125 (estatuto -> lee .)
    DESDE           reduce using rule 125 (estatuto -> lee .)
    LPAREN          reduce using rule 125 (estatuto -> lee .)
    PLUS            reduce using rule 125 (estatuto -> lee .)
    MINUS           reduce using rule 125 (estatuto -> lee .)
    NUMBER          reduce using rule 125 (estatuto -> lee .)
    CTEF            reduce using rule 125 (estatuto -> lee .)
    CTEC            reduce using rule 125 (estatuto -> lee .)
    STRING          reduce using rule 125 (estatuto -> lee .)


state 86

    (126) estatuto -> escritura .

    RBRACKET        reduce using rule 126 (estatuto -> escritura .)
    ID              reduce using rule 126 (estatuto -> escritura .)
    REGRESA         reduce using rule 126 (estatuto -> escritura .)
    LEE             reduce using rule 126 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 126 (estatuto -> escritura .)
    SI              reduce using rule 126 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 126 (estatuto -> escritura .)
    DESDE           reduce using rule 126 (estatuto -> escritura .)
    LPAREN          reduce using rule 126 (estatuto -> escritura .)
    PLUS            reduce using rule 126 (estatuto -> escritura .)
    MINUS           reduce using rule 126 (estatuto -> escritura .)
    NUMBER          reduce using rule 126 (estatuto -> escritura .)
    CTEF            reduce using rule 126 (estatuto -> escritura .)
    CTEC            reduce using rule 126 (estatuto -> escritura .)
    STRING          reduce using rule 126 (estatuto -> escritura .)


state 87

    (127) estatuto -> decision .

    RBRACKET        reduce using rule 127 (estatuto -> decision .)
    ID              reduce using rule 127 (estatuto -> decision .)
    REGRESA         reduce using rule 127 (estatuto -> decision .)
    LEE             reduce using rule 127 (estatuto -> decision .)
    ESCRIBE         reduce using rule 127 (estatuto -> decision .)
    SI              reduce using rule 127 (estatuto -> decision .)
    MIENTRAS        reduce using rule 127 (estatuto -> decision .)
    DESDE           reduce using rule 127 (estatuto -> decision .)
    LPAREN          reduce using rule 127 (estatuto -> decision .)
    PLUS            reduce using rule 127 (estatuto -> decision .)
    MINUS           reduce using rule 127 (estatuto -> decision .)
    NUMBER          reduce using rule 127 (estatuto -> decision .)
    CTEF            reduce using rule 127 (estatuto -> decision .)
    CTEC            reduce using rule 127 (estatuto -> decision .)
    STRING          reduce using rule 127 (estatuto -> decision .)


state 88

    (128) estatuto -> repeticioncond .

    RBRACKET        reduce using rule 128 (estatuto -> repeticioncond .)
    ID              reduce using rule 128 (estatuto -> repeticioncond .)
    REGRESA         reduce using rule 128 (estatuto -> repeticioncond .)
    LEE             reduce using rule 128 (estatuto -> repeticioncond .)
    ESCRIBE         reduce using rule 128 (estatuto -> repeticioncond .)
    SI              reduce using rule 128 (estatuto -> repeticioncond .)
    MIENTRAS        reduce using rule 128 (estatuto -> repeticioncond .)
    DESDE           reduce using rule 128 (estatuto -> repeticioncond .)
    LPAREN          reduce using rule 128 (estatuto -> repeticioncond .)
    PLUS            reduce using rule 128 (estatuto -> repeticioncond .)
    MINUS           reduce using rule 128 (estatuto -> repeticioncond .)
    NUMBER          reduce using rule 128 (estatuto -> repeticioncond .)
    CTEF            reduce using rule 128 (estatuto -> repeticioncond .)
    CTEC            reduce using rule 128 (estatuto -> repeticioncond .)
    STRING          reduce using rule 128 (estatuto -> repeticioncond .)


state 89

    (129) estatuto -> repeticionnocond .

    RBRACKET        reduce using rule 129 (estatuto -> repeticionnocond .)
    ID              reduce using rule 129 (estatuto -> repeticionnocond .)
    REGRESA         reduce using rule 129 (estatuto -> repeticionnocond .)
    LEE             reduce using rule 129 (estatuto -> repeticionnocond .)
    ESCRIBE         reduce using rule 129 (estatuto -> repeticionnocond .)
    SI              reduce using rule 129 (estatuto -> repeticionnocond .)
    MIENTRAS        reduce using rule 129 (estatuto -> repeticionnocond .)
    DESDE           reduce using rule 129 (estatuto -> repeticionnocond .)
    LPAREN          reduce using rule 129 (estatuto -> repeticionnocond .)
    PLUS            reduce using rule 129 (estatuto -> repeticionnocond .)
    MINUS           reduce using rule 129 (estatuto -> repeticionnocond .)
    NUMBER          reduce using rule 129 (estatuto -> repeticionnocond .)
    CTEF            reduce using rule 129 (estatuto -> repeticionnocond .)
    CTEC            reduce using rule 129 (estatuto -> repeticionnocond .)
    STRING          reduce using rule 129 (estatuto -> repeticionnocond .)


state 90

    (130) estatuto -> expresion .

    RBRACKET        reduce using rule 130 (estatuto -> expresion .)
    ID              reduce using rule 130 (estatuto -> expresion .)
    REGRESA         reduce using rule 130 (estatuto -> expresion .)
    LEE             reduce using rule 130 (estatuto -> expresion .)
    ESCRIBE         reduce using rule 130 (estatuto -> expresion .)
    SI              reduce using rule 130 (estatuto -> expresion .)
    MIENTRAS        reduce using rule 130 (estatuto -> expresion .)
    DESDE           reduce using rule 130 (estatuto -> expresion .)
    LPAREN          reduce using rule 130 (estatuto -> expresion .)
    PLUS            reduce using rule 130 (estatuto -> expresion .)
    MINUS           reduce using rule 130 (estatuto -> expresion .)
    NUMBER          reduce using rule 130 (estatuto -> expresion .)
    CTEF            reduce using rule 130 (estatuto -> expresion .)
    CTEC            reduce using rule 130 (estatuto -> expresion .)
    STRING          reduce using rule 130 (estatuto -> expresion .)


state 91

    (58) asignacion -> ID . EQUAL asignacionb
    (59) asignacion -> ID . asign EQUAL asignacionb
    (64) funcionvoid -> ID . LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (114) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (118) factor -> ID . asign
    (91) cte -> ID .
    (52) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (53) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           shift and go to state 121
    LPAREN          shift and go to state 123
    TIMES           reduce using rule 91 (cte -> ID .)
    DIVIDE          reduce using rule 91 (cte -> ID .)
    PLUS            reduce using rule 91 (cte -> ID .)
    MINUS           reduce using rule 91 (cte -> ID .)
    GTHAN           reduce using rule 91 (cte -> ID .)
    LTHAN           reduce using rule 91 (cte -> ID .)
    EQLOP           reduce using rule 91 (cte -> ID .)
    GEQUAL          reduce using rule 91 (cte -> ID .)
    LEQUAL          reduce using rule 91 (cte -> ID .)
    ABRACKET        reduce using rule 91 (cte -> ID .)
    RBRACKET        reduce using rule 91 (cte -> ID .)
    ID              reduce using rule 91 (cte -> ID .)
    REGRESA         reduce using rule 91 (cte -> ID .)
    LEE             reduce using rule 91 (cte -> ID .)
    ESCRIBE         reduce using rule 91 (cte -> ID .)
    SI              reduce using rule 91 (cte -> ID .)
    MIENTRAS        reduce using rule 91 (cte -> ID .)
    DESDE           reduce using rule 91 (cte -> ID .)
    NUMBER          reduce using rule 91 (cte -> ID .)
    CTEF            reduce using rule 91 (cte -> ID .)
    CTEC            reduce using rule 91 (cte -> ID .)
    STRING          reduce using rule 91 (cte -> ID .)
    LBRACK          shift and go to state 124

  ! LPAREN          [ reduce using rule 91 (cte -> ID .) ]

    asign                          shift and go to state 122

state 92

    (113) factor -> LPAREN . expresion RPAREN
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 125
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 93

    (62) retorno -> REGRESA . LPAREN expresion retn RPAREN SEMICOL

    LPAREN          shift and go to state 127


state 94

    (70) lee -> LEE . LPAREN id leeb

    LPAREN          shift and go to state 128


state 95

    (74) escritura -> ESCRIBE . LPAREN expresion prin1 escriturab

    LPAREN          shift and go to state 129


state 96

    (78) decision -> SI . LPAREN expresion pn1 RPAREN ENTONCES decisionb

    LPAREN          shift and go to state 130


state 97

    (84) repeticioncond -> MIENTRAS . rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (85) rcn1 -> . empty
    (131) empty -> .

    LPAREN          reduce using rule 131 (empty -> .)

    rcn1                           shift and go to state 131
    empty                          shift and go to state 132

state 98

    (88) repeticionnocond -> DESDE . rncns id EQUAL exp rncn HASTA exp HACER bloque
    (89) rncns -> . empty
    (131) empty -> .

    ID              reduce using rule 131 (empty -> .)

    rncns                          shift and go to state 133
    empty                          shift and go to state 134

state 99

    (98) expresion -> exp .
    (99) expresion -> exp . GTHAN exp
    (100) expresion -> exp . LTHAN exp
    (101) expresion -> exp . EQLOP exp
    (102) expresion -> exp . GEQUAL exp
    (103) expresion -> exp . LEQUAL exp
    (104) expresion -> exp . ABRACKET exp

    RBRACKET        reduce using rule 98 (expresion -> exp .)
    ID              reduce using rule 98 (expresion -> exp .)
    REGRESA         reduce using rule 98 (expresion -> exp .)
    LEE             reduce using rule 98 (expresion -> exp .)
    ESCRIBE         reduce using rule 98 (expresion -> exp .)
    SI              reduce using rule 98 (expresion -> exp .)
    MIENTRAS        reduce using rule 98 (expresion -> exp .)
    DESDE           reduce using rule 98 (expresion -> exp .)
    LPAREN          reduce using rule 98 (expresion -> exp .)
    PLUS            reduce using rule 98 (expresion -> exp .)
    MINUS           reduce using rule 98 (expresion -> exp .)
    NUMBER          reduce using rule 98 (expresion -> exp .)
    CTEF            reduce using rule 98 (expresion -> exp .)
    CTEC            reduce using rule 98 (expresion -> exp .)
    STRING          reduce using rule 98 (expresion -> exp .)
    RPAREN          reduce using rule 98 (expresion -> exp .)
    SEMICOL         reduce using rule 98 (expresion -> exp .)
    COMMA           reduce using rule 98 (expresion -> exp .)
    RBRACK          reduce using rule 98 (expresion -> exp .)
    GTHAN           shift and go to state 135
    LTHAN           shift and go to state 136
    EQLOP           shift and go to state 137
    GEQUAL          shift and go to state 138
    LEQUAL          shift and go to state 139
    ABRACKET        shift and go to state 140


state 100

    (105) exp -> termino .
    (106) exp -> termino . expb
    (107) expb -> . PLUS exp
    (108) expb -> . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GTHAN           reduce using rule 105 (exp -> termino .)
    LTHAN           reduce using rule 105 (exp -> termino .)
    EQLOP           reduce using rule 105 (exp -> termino .)
    GEQUAL          reduce using rule 105 (exp -> termino .)
    LEQUAL          reduce using rule 105 (exp -> termino .)
    ABRACKET        reduce using rule 105 (exp -> termino .)
    RBRACKET        reduce using rule 105 (exp -> termino .)
    ID              reduce using rule 105 (exp -> termino .)
    REGRESA         reduce using rule 105 (exp -> termino .)
    LEE             reduce using rule 105 (exp -> termino .)
    ESCRIBE         reduce using rule 105 (exp -> termino .)
    SI              reduce using rule 105 (exp -> termino .)
    MIENTRAS        reduce using rule 105 (exp -> termino .)
    DESDE           reduce using rule 105 (exp -> termino .)
    LPAREN          reduce using rule 105 (exp -> termino .)
    NUMBER          reduce using rule 105 (exp -> termino .)
    CTEF            reduce using rule 105 (exp -> termino .)
    CTEC            reduce using rule 105 (exp -> termino .)
    STRING          reduce using rule 105 (exp -> termino .)
    RPAREN          reduce using rule 105 (exp -> termino .)
    SEMICOL         reduce using rule 105 (exp -> termino .)
    COMMA           reduce using rule 105 (exp -> termino .)
    RBRACK          reduce using rule 105 (exp -> termino .)
    HASTA           reduce using rule 105 (exp -> termino .)
    HACER           reduce using rule 105 (exp -> termino .)
    PLUS            shift and go to state 142
    MINUS           shift and go to state 143

  ! PLUS            [ reduce using rule 105 (exp -> termino .) ]
  ! MINUS           [ reduce using rule 105 (exp -> termino .) ]

    expb                           shift and go to state 141

state 101

    (109) termino -> factor .
    (110) termino -> factor . terminob
    (111) terminob -> . TIMES termino
    (112) terminob -> . DIVIDE termino

    PLUS            reduce using rule 109 (termino -> factor .)
    MINUS           reduce using rule 109 (termino -> factor .)
    GTHAN           reduce using rule 109 (termino -> factor .)
    LTHAN           reduce using rule 109 (termino -> factor .)
    EQLOP           reduce using rule 109 (termino -> factor .)
    GEQUAL          reduce using rule 109 (termino -> factor .)
    LEQUAL          reduce using rule 109 (termino -> factor .)
    ABRACKET        reduce using rule 109 (termino -> factor .)
    RBRACKET        reduce using rule 109 (termino -> factor .)
    ID              reduce using rule 109 (termino -> factor .)
    REGRESA         reduce using rule 109 (termino -> factor .)
    LEE             reduce using rule 109 (termino -> factor .)
    ESCRIBE         reduce using rule 109 (termino -> factor .)
    SI              reduce using rule 109 (termino -> factor .)
    MIENTRAS        reduce using rule 109 (termino -> factor .)
    DESDE           reduce using rule 109 (termino -> factor .)
    LPAREN          reduce using rule 109 (termino -> factor .)
    NUMBER          reduce using rule 109 (termino -> factor .)
    CTEF            reduce using rule 109 (termino -> factor .)
    CTEC            reduce using rule 109 (termino -> factor .)
    STRING          reduce using rule 109 (termino -> factor .)
    RPAREN          reduce using rule 109 (termino -> factor .)
    SEMICOL         reduce using rule 109 (termino -> factor .)
    COMMA           reduce using rule 109 (termino -> factor .)
    RBRACK          reduce using rule 109 (termino -> factor .)
    HASTA           reduce using rule 109 (termino -> factor .)
    HACER           reduce using rule 109 (termino -> factor .)
    TIMES           shift and go to state 145
    DIVIDE          shift and go to state 146

    terminob                       shift and go to state 144

state 102

    (115) factor -> PLUS . cte
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 147

state 103

    (117) factor -> cte .

    TIMES           reduce using rule 117 (factor -> cte .)
    DIVIDE          reduce using rule 117 (factor -> cte .)
    PLUS            reduce using rule 117 (factor -> cte .)
    MINUS           reduce using rule 117 (factor -> cte .)
    GTHAN           reduce using rule 117 (factor -> cte .)
    LTHAN           reduce using rule 117 (factor -> cte .)
    EQLOP           reduce using rule 117 (factor -> cte .)
    GEQUAL          reduce using rule 117 (factor -> cte .)
    LEQUAL          reduce using rule 117 (factor -> cte .)
    ABRACKET        reduce using rule 117 (factor -> cte .)
    RBRACKET        reduce using rule 117 (factor -> cte .)
    ID              reduce using rule 117 (factor -> cte .)
    REGRESA         reduce using rule 117 (factor -> cte .)
    LEE             reduce using rule 117 (factor -> cte .)
    ESCRIBE         reduce using rule 117 (factor -> cte .)
    SI              reduce using rule 117 (factor -> cte .)
    MIENTRAS        reduce using rule 117 (factor -> cte .)
    DESDE           reduce using rule 117 (factor -> cte .)
    LPAREN          reduce using rule 117 (factor -> cte .)
    NUMBER          reduce using rule 117 (factor -> cte .)
    CTEF            reduce using rule 117 (factor -> cte .)
    CTEC            reduce using rule 117 (factor -> cte .)
    STRING          reduce using rule 117 (factor -> cte .)
    RPAREN          reduce using rule 117 (factor -> cte .)
    SEMICOL         reduce using rule 117 (factor -> cte .)
    COMMA           reduce using rule 117 (factor -> cte .)
    RBRACK          reduce using rule 117 (factor -> cte .)
    HASTA           reduce using rule 117 (factor -> cte .)
    HACER           reduce using rule 117 (factor -> cte .)


state 104

    (116) factor -> MINUS . cte
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    ID              shift and go to state 74
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    cte                            shift and go to state 148

state 105

    (39) funcionb -> RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 39 (funcionb -> RPAREN testeru funcionc .)


state 106

    (42) funcionc -> vars . agregacont bloque reinicio funcion
    (45) agregacont -> . empty
    (131) empty -> .

    LBRACKET        reduce using rule 131 (empty -> .)

    agregacont                     shift and go to state 149
    empty                          shift and go to state 150

state 107

    (43) funcionc -> agregacont . bloque reinicio funcion
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 151

state 108

    (44) funcionc -> empty .
    (45) agregacont -> empty .

    PRINCIPAL       reduce using rule 44 (funcionc -> empty .)
    LBRACKET        reduce using rule 45 (agregacont -> empty .)


state 109

    (40) funcionb -> varsfunc RPAREN testeru . funcionc
    (42) funcionc -> . vars agregacont bloque reinicio funcion
    (43) funcionc -> . agregacont bloque reinicio funcion
    (44) funcionc -> . empty
    (23) vars -> . VAR varsb
    (45) agregacont -> . empty
    (131) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 131 (empty -> .)
    LBRACKET        reduce using rule 131 (empty -> .)

    funcionc                       shift and go to state 152
    vars                           shift and go to state 106
    agregacont                     shift and go to state 107
    empty                          shift and go to state 108

state 110

    (31) varsfuncb -> id COMMA . varsfuncb
    (31) varsfuncb -> . id COMMA varsfuncb
    (32) varsfuncb -> . varsfunc
    (33) varsfuncb -> . id
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2
    (30) varsfunc -> . tipovarfunc varsfuncb
    (15) tipovarfunc -> . INT agregatipo
    (16) tipovarfunc -> . FLOAT agregatipo
    (17) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    id                             shift and go to state 68
    varsfuncb                      shift and go to state 153
    varsfunc                       shift and go to state 69
    tipovarfunc                    shift and go to state 54

state 111

    (35) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .

    PRINCIPAL       reduce using rule 35 (funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .)


state 112

    (9) id -> ID agregavar LBRACK arreglo cte RBRACK . arreglo2
    (11) arreglo2 -> . empty
    (131) empty -> .

    COMMA           reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    EQUAL           reduce using rule 131 (empty -> .)

    arreglo2                       shift and go to state 154
    empty                          shift and go to state 155

state 113

    (92) cte -> NUMBER saveconst .

    RBRACK          reduce using rule 92 (cte -> NUMBER saveconst .)
    TIMES           reduce using rule 92 (cte -> NUMBER saveconst .)
    DIVIDE          reduce using rule 92 (cte -> NUMBER saveconst .)
    PLUS            reduce using rule 92 (cte -> NUMBER saveconst .)
    MINUS           reduce using rule 92 (cte -> NUMBER saveconst .)
    GTHAN           reduce using rule 92 (cte -> NUMBER saveconst .)
    LTHAN           reduce using rule 92 (cte -> NUMBER saveconst .)
    EQLOP           reduce using rule 92 (cte -> NUMBER saveconst .)
    GEQUAL          reduce using rule 92 (cte -> NUMBER saveconst .)
    LEQUAL          reduce using rule 92 (cte -> NUMBER saveconst .)
    ABRACKET        reduce using rule 92 (cte -> NUMBER saveconst .)
    RBRACKET        reduce using rule 92 (cte -> NUMBER saveconst .)
    ID              reduce using rule 92 (cte -> NUMBER saveconst .)
    REGRESA         reduce using rule 92 (cte -> NUMBER saveconst .)
    LEE             reduce using rule 92 (cte -> NUMBER saveconst .)
    ESCRIBE         reduce using rule 92 (cte -> NUMBER saveconst .)
    SI              reduce using rule 92 (cte -> NUMBER saveconst .)
    MIENTRAS        reduce using rule 92 (cte -> NUMBER saveconst .)
    DESDE           reduce using rule 92 (cte -> NUMBER saveconst .)
    LPAREN          reduce using rule 92 (cte -> NUMBER saveconst .)
    NUMBER          reduce using rule 92 (cte -> NUMBER saveconst .)
    CTEF            reduce using rule 92 (cte -> NUMBER saveconst .)
    CTEC            reduce using rule 92 (cte -> NUMBER saveconst .)
    STRING          reduce using rule 92 (cte -> NUMBER saveconst .)
    RPAREN          reduce using rule 92 (cte -> NUMBER saveconst .)
    SEMICOL         reduce using rule 92 (cte -> NUMBER saveconst .)
    COMMA           reduce using rule 92 (cte -> NUMBER saveconst .)
    HASTA           reduce using rule 92 (cte -> NUMBER saveconst .)
    HACER           reduce using rule 92 (cte -> NUMBER saveconst .)


state 114

    (96) saveconst -> empty .

    RBRACK          reduce using rule 96 (saveconst -> empty .)
    TIMES           reduce using rule 96 (saveconst -> empty .)
    DIVIDE          reduce using rule 96 (saveconst -> empty .)
    PLUS            reduce using rule 96 (saveconst -> empty .)
    MINUS           reduce using rule 96 (saveconst -> empty .)
    GTHAN           reduce using rule 96 (saveconst -> empty .)
    LTHAN           reduce using rule 96 (saveconst -> empty .)
    EQLOP           reduce using rule 96 (saveconst -> empty .)
    GEQUAL          reduce using rule 96 (saveconst -> empty .)
    LEQUAL          reduce using rule 96 (saveconst -> empty .)
    ABRACKET        reduce using rule 96 (saveconst -> empty .)
    RBRACKET        reduce using rule 96 (saveconst -> empty .)
    ID              reduce using rule 96 (saveconst -> empty .)
    REGRESA         reduce using rule 96 (saveconst -> empty .)
    LEE             reduce using rule 96 (saveconst -> empty .)
    ESCRIBE         reduce using rule 96 (saveconst -> empty .)
    SI              reduce using rule 96 (saveconst -> empty .)
    MIENTRAS        reduce using rule 96 (saveconst -> empty .)
    DESDE           reduce using rule 96 (saveconst -> empty .)
    LPAREN          reduce using rule 96 (saveconst -> empty .)
    NUMBER          reduce using rule 96 (saveconst -> empty .)
    CTEF            reduce using rule 96 (saveconst -> empty .)
    CTEC            reduce using rule 96 (saveconst -> empty .)
    STRING          reduce using rule 96 (saveconst -> empty .)
    RPAREN          reduce using rule 96 (saveconst -> empty .)
    SEMICOL         reduce using rule 96 (saveconst -> empty .)
    COMMA           reduce using rule 96 (saveconst -> empty .)
    HASTA           reduce using rule 96 (saveconst -> empty .)
    HACER           reduce using rule 96 (saveconst -> empty .)


state 115

    (93) cte -> CTEF saveconst .

    RBRACK          reduce using rule 93 (cte -> CTEF saveconst .)
    TIMES           reduce using rule 93 (cte -> CTEF saveconst .)
    DIVIDE          reduce using rule 93 (cte -> CTEF saveconst .)
    PLUS            reduce using rule 93 (cte -> CTEF saveconst .)
    MINUS           reduce using rule 93 (cte -> CTEF saveconst .)
    GTHAN           reduce using rule 93 (cte -> CTEF saveconst .)
    LTHAN           reduce using rule 93 (cte -> CTEF saveconst .)
    EQLOP           reduce using rule 93 (cte -> CTEF saveconst .)
    GEQUAL          reduce using rule 93 (cte -> CTEF saveconst .)
    LEQUAL          reduce using rule 93 (cte -> CTEF saveconst .)
    ABRACKET        reduce using rule 93 (cte -> CTEF saveconst .)
    RBRACKET        reduce using rule 93 (cte -> CTEF saveconst .)
    ID              reduce using rule 93 (cte -> CTEF saveconst .)
    REGRESA         reduce using rule 93 (cte -> CTEF saveconst .)
    LEE             reduce using rule 93 (cte -> CTEF saveconst .)
    ESCRIBE         reduce using rule 93 (cte -> CTEF saveconst .)
    SI              reduce using rule 93 (cte -> CTEF saveconst .)
    MIENTRAS        reduce using rule 93 (cte -> CTEF saveconst .)
    DESDE           reduce using rule 93 (cte -> CTEF saveconst .)
    LPAREN          reduce using rule 93 (cte -> CTEF saveconst .)
    NUMBER          reduce using rule 93 (cte -> CTEF saveconst .)
    CTEF            reduce using rule 93 (cte -> CTEF saveconst .)
    CTEC            reduce using rule 93 (cte -> CTEF saveconst .)
    STRING          reduce using rule 93 (cte -> CTEF saveconst .)
    RPAREN          reduce using rule 93 (cte -> CTEF saveconst .)
    SEMICOL         reduce using rule 93 (cte -> CTEF saveconst .)
    COMMA           reduce using rule 93 (cte -> CTEF saveconst .)
    HASTA           reduce using rule 93 (cte -> CTEF saveconst .)
    HACER           reduce using rule 93 (cte -> CTEF saveconst .)


state 116

    (95) cte -> STRING savestringconst .

    RBRACK          reduce using rule 95 (cte -> STRING savestringconst .)
    TIMES           reduce using rule 95 (cte -> STRING savestringconst .)
    DIVIDE          reduce using rule 95 (cte -> STRING savestringconst .)
    PLUS            reduce using rule 95 (cte -> STRING savestringconst .)
    MINUS           reduce using rule 95 (cte -> STRING savestringconst .)
    GTHAN           reduce using rule 95 (cte -> STRING savestringconst .)
    LTHAN           reduce using rule 95 (cte -> STRING savestringconst .)
    EQLOP           reduce using rule 95 (cte -> STRING savestringconst .)
    GEQUAL          reduce using rule 95 (cte -> STRING savestringconst .)
    LEQUAL          reduce using rule 95 (cte -> STRING savestringconst .)
    ABRACKET        reduce using rule 95 (cte -> STRING savestringconst .)
    RBRACKET        reduce using rule 95 (cte -> STRING savestringconst .)
    ID              reduce using rule 95 (cte -> STRING savestringconst .)
    REGRESA         reduce using rule 95 (cte -> STRING savestringconst .)
    LEE             reduce using rule 95 (cte -> STRING savestringconst .)
    ESCRIBE         reduce using rule 95 (cte -> STRING savestringconst .)
    SI              reduce using rule 95 (cte -> STRING savestringconst .)
    MIENTRAS        reduce using rule 95 (cte -> STRING savestringconst .)
    DESDE           reduce using rule 95 (cte -> STRING savestringconst .)
    LPAREN          reduce using rule 95 (cte -> STRING savestringconst .)
    NUMBER          reduce using rule 95 (cte -> STRING savestringconst .)
    CTEF            reduce using rule 95 (cte -> STRING savestringconst .)
    CTEC            reduce using rule 95 (cte -> STRING savestringconst .)
    STRING          reduce using rule 95 (cte -> STRING savestringconst .)
    RPAREN          reduce using rule 95 (cte -> STRING savestringconst .)
    SEMICOL         reduce using rule 95 (cte -> STRING savestringconst .)
    COMMA           reduce using rule 95 (cte -> STRING savestringconst .)
    HASTA           reduce using rule 95 (cte -> STRING savestringconst .)
    HACER           reduce using rule 95 (cte -> STRING savestringconst .)


state 117

    (97) savestringconst -> empty .

    RBRACK          reduce using rule 97 (savestringconst -> empty .)
    TIMES           reduce using rule 97 (savestringconst -> empty .)
    DIVIDE          reduce using rule 97 (savestringconst -> empty .)
    PLUS            reduce using rule 97 (savestringconst -> empty .)
    MINUS           reduce using rule 97 (savestringconst -> empty .)
    GTHAN           reduce using rule 97 (savestringconst -> empty .)
    LTHAN           reduce using rule 97 (savestringconst -> empty .)
    EQLOP           reduce using rule 97 (savestringconst -> empty .)
    GEQUAL          reduce using rule 97 (savestringconst -> empty .)
    LEQUAL          reduce using rule 97 (savestringconst -> empty .)
    ABRACKET        reduce using rule 97 (savestringconst -> empty .)
    RBRACKET        reduce using rule 97 (savestringconst -> empty .)
    ID              reduce using rule 97 (savestringconst -> empty .)
    REGRESA         reduce using rule 97 (savestringconst -> empty .)
    LEE             reduce using rule 97 (savestringconst -> empty .)
    ESCRIBE         reduce using rule 97 (savestringconst -> empty .)
    SI              reduce using rule 97 (savestringconst -> empty .)
    MIENTRAS        reduce using rule 97 (savestringconst -> empty .)
    DESDE           reduce using rule 97 (savestringconst -> empty .)
    LPAREN          reduce using rule 97 (savestringconst -> empty .)
    NUMBER          reduce using rule 97 (savestringconst -> empty .)
    CTEF            reduce using rule 97 (savestringconst -> empty .)
    CTEC            reduce using rule 97 (savestringconst -> empty .)
    STRING          reduce using rule 97 (savestringconst -> empty .)
    RPAREN          reduce using rule 97 (savestringconst -> empty .)
    SEMICOL         reduce using rule 97 (savestringconst -> empty .)
    COMMA           reduce using rule 97 (savestringconst -> empty .)
    HASTA           reduce using rule 97 (savestringconst -> empty .)
    HACER           reduce using rule 97 (savestringconst -> empty .)


state 118

    (50) bloqueb -> estatuto . bloqueb
    (49) bloqueb -> . RBRACKET helper
    (50) bloqueb -> . estatuto bloqueb
    (122) estatuto -> . asignacion
    (123) estatuto -> . funcionvoid
    (124) estatuto -> . retorno
    (125) estatuto -> . lee
    (126) estatuto -> . escritura
    (127) estatuto -> . decision
    (128) estatuto -> . repeticioncond
    (129) estatuto -> . repeticionnocond
    (130) estatuto -> . expresion
    (58) asignacion -> . ID EQUAL asignacionb
    (59) asignacion -> . ID asign EQUAL asignacionb
    (64) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 funcionvoidb
    (62) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (70) lee -> . LEE LPAREN id leeb
    (74) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (78) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (84) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (88) repeticionnocond -> . DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    RBRACKET        shift and go to state 120
    ID              shift and go to state 91
    REGRESA         shift and go to state 93
    LEE             shift and go to state 94
    ESCRIBE         shift and go to state 95
    SI              shift and go to state 96
    MIENTRAS        shift and go to state 97
    DESDE           shift and go to state 98
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    estatuto                       shift and go to state 118
    bloqueb                        shift and go to state 156
    asignacion                     shift and go to state 82
    funcionvoid                    shift and go to state 83
    retorno                        shift and go to state 84
    lee                            shift and go to state 85
    escritura                      shift and go to state 86
    decision                       shift and go to state 87
    repeticioncond                 shift and go to state 88
    repeticionnocond               shift and go to state 89
    expresion                      shift and go to state 90
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 119

    (47) bloque -> LBRACKET estatuto bloqueb .

    $end            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    FUNCION         reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    PRINCIPAL       reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    SINO            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    RBRACKET        reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    ID              reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    REGRESA         reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    LEE             reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    ESCRIBE         reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    SI              reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    MIENTRAS        reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    DESDE           reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    LPAREN          reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    PLUS            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    MINUS           reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    NUMBER          reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    CTEF            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    CTEC            reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)
    STRING          reduce using rule 47 (bloque -> LBRACKET estatuto bloqueb .)


state 120

    (49) bloqueb -> RBRACKET . helper
    (51) helper -> . empty
    (131) empty -> .

    $end            reduce using rule 131 (empty -> .)
    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)
    SINO            reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    helper                         shift and go to state 157
    empty                          shift and go to state 158

state 121

    (58) asignacion -> ID EQUAL . asignacionb
    (60) asignacionb -> . expresion SEMICOL
    (61) asignacionb -> . ID asign SEMICOL
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    ID              shift and go to state 159
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacionb                    shift and go to state 160
    expresion                      shift and go to state 161
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 122

    (59) asignacion -> ID asign . EQUAL asignacionb
    (118) factor -> ID asign .

    EQUAL           shift and go to state 162
    TIMES           reduce using rule 118 (factor -> ID asign .)
    DIVIDE          reduce using rule 118 (factor -> ID asign .)
    PLUS            reduce using rule 118 (factor -> ID asign .)
    MINUS           reduce using rule 118 (factor -> ID asign .)
    GTHAN           reduce using rule 118 (factor -> ID asign .)
    LTHAN           reduce using rule 118 (factor -> ID asign .)
    EQLOP           reduce using rule 118 (factor -> ID asign .)
    GEQUAL          reduce using rule 118 (factor -> ID asign .)
    LEQUAL          reduce using rule 118 (factor -> ID asign .)
    ABRACKET        reduce using rule 118 (factor -> ID asign .)
    RBRACKET        reduce using rule 118 (factor -> ID asign .)
    ID              reduce using rule 118 (factor -> ID asign .)
    REGRESA         reduce using rule 118 (factor -> ID asign .)
    LEE             reduce using rule 118 (factor -> ID asign .)
    ESCRIBE         reduce using rule 118 (factor -> ID asign .)
    SI              reduce using rule 118 (factor -> ID asign .)
    MIENTRAS        reduce using rule 118 (factor -> ID asign .)
    DESDE           reduce using rule 118 (factor -> ID asign .)
    LPAREN          reduce using rule 118 (factor -> ID asign .)
    NUMBER          reduce using rule 118 (factor -> ID asign .)
    CTEF            reduce using rule 118 (factor -> ID asign .)
    CTEC            reduce using rule 118 (factor -> ID asign .)
    STRING          reduce using rule 118 (factor -> ID asign .)


state 123

    (64) funcionvoid -> ID LPAREN . fnvn1 expresion fnvn2 funcionvoidb
    (114) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (67) fnvn1 -> . empty
    (119) llamadafun -> . empty
    (131) empty -> .

    LPAREN          reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    fnvn1                          shift and go to state 163
    llamadafun                     shift and go to state 164
    empty                          shift and go to state 165

state 124

    (52) asign -> LBRACK . arrn expresion arrn2 RBRACK arrn3
    (53) asign -> LBRACK . arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> LBRACK . arrn CTEC arrn2 RBRACK arrn3
    (55) arrn -> . empty
    (131) empty -> .

    CTEI            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    arrn                           shift and go to state 166
    empty                          shift and go to state 167

state 125

    (113) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 168


state 126

    (114) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (118) factor -> ID . asign
    (91) cte -> ID .
    (52) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (53) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 169
    TIMES           reduce using rule 91 (cte -> ID .)
    DIVIDE          reduce using rule 91 (cte -> ID .)
    PLUS            reduce using rule 91 (cte -> ID .)
    MINUS           reduce using rule 91 (cte -> ID .)
    GTHAN           reduce using rule 91 (cte -> ID .)
    LTHAN           reduce using rule 91 (cte -> ID .)
    EQLOP           reduce using rule 91 (cte -> ID .)
    GEQUAL          reduce using rule 91 (cte -> ID .)
    LEQUAL          reduce using rule 91 (cte -> ID .)
    ABRACKET        reduce using rule 91 (cte -> ID .)
    RPAREN          reduce using rule 91 (cte -> ID .)
    COMMA           reduce using rule 91 (cte -> ID .)
    RBRACKET        reduce using rule 91 (cte -> ID .)
    ID              reduce using rule 91 (cte -> ID .)
    REGRESA         reduce using rule 91 (cte -> ID .)
    LEE             reduce using rule 91 (cte -> ID .)
    ESCRIBE         reduce using rule 91 (cte -> ID .)
    SI              reduce using rule 91 (cte -> ID .)
    MIENTRAS        reduce using rule 91 (cte -> ID .)
    DESDE           reduce using rule 91 (cte -> ID .)
    NUMBER          reduce using rule 91 (cte -> ID .)
    CTEF            reduce using rule 91 (cte -> ID .)
    CTEC            reduce using rule 91 (cte -> ID .)
    STRING          reduce using rule 91 (cte -> ID .)
    SEMICOL         reduce using rule 91 (cte -> ID .)
    RBRACK          reduce using rule 91 (cte -> ID .)
    HASTA           reduce using rule 91 (cte -> ID .)
    HACER           reduce using rule 91 (cte -> ID .)
    LBRACK          shift and go to state 124

  ! LPAREN          [ reduce using rule 91 (cte -> ID .) ]

    asign                          shift and go to state 170

state 127

    (62) retorno -> REGRESA LPAREN . expresion retn RPAREN SEMICOL
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 171
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 128

    (70) lee -> LEE LPAREN . id leeb
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 172

state 129

    (74) escritura -> ESCRIBE LPAREN . expresion prin1 escriturab
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 173
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 130

    (78) decision -> SI LPAREN . expresion pn1 RPAREN ENTONCES decisionb
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 174
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 131

    (84) repeticioncond -> MIENTRAS rcn1 . LPAREN expresion RPAREN HAZ rcn2 bloque rcn3

    LPAREN          shift and go to state 175


state 132

    (85) rcn1 -> empty .

    LPAREN          reduce using rule 85 (rcn1 -> empty .)


state 133

    (88) repeticionnocond -> DESDE rncns . id EQUAL exp rncn HASTA exp HACER bloque
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 176

state 134

    (89) rncns -> empty .

    ID              reduce using rule 89 (rncns -> empty .)


state 135

    (99) expresion -> exp GTHAN . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 177
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 136

    (100) expresion -> exp LTHAN . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 178
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 137

    (101) expresion -> exp EQLOP . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 179
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 138

    (102) expresion -> exp GEQUAL . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 180
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 139

    (103) expresion -> exp LEQUAL . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 181
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 140

    (104) expresion -> exp ABRACKET . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 182
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 141

    (106) exp -> termino expb .

    GTHAN           reduce using rule 106 (exp -> termino expb .)
    LTHAN           reduce using rule 106 (exp -> termino expb .)
    EQLOP           reduce using rule 106 (exp -> termino expb .)
    GEQUAL          reduce using rule 106 (exp -> termino expb .)
    LEQUAL          reduce using rule 106 (exp -> termino expb .)
    ABRACKET        reduce using rule 106 (exp -> termino expb .)
    RBRACKET        reduce using rule 106 (exp -> termino expb .)
    ID              reduce using rule 106 (exp -> termino expb .)
    REGRESA         reduce using rule 106 (exp -> termino expb .)
    LEE             reduce using rule 106 (exp -> termino expb .)
    ESCRIBE         reduce using rule 106 (exp -> termino expb .)
    SI              reduce using rule 106 (exp -> termino expb .)
    MIENTRAS        reduce using rule 106 (exp -> termino expb .)
    DESDE           reduce using rule 106 (exp -> termino expb .)
    LPAREN          reduce using rule 106 (exp -> termino expb .)
    PLUS            reduce using rule 106 (exp -> termino expb .)
    MINUS           reduce using rule 106 (exp -> termino expb .)
    NUMBER          reduce using rule 106 (exp -> termino expb .)
    CTEF            reduce using rule 106 (exp -> termino expb .)
    CTEC            reduce using rule 106 (exp -> termino expb .)
    STRING          reduce using rule 106 (exp -> termino expb .)
    RPAREN          reduce using rule 106 (exp -> termino expb .)
    SEMICOL         reduce using rule 106 (exp -> termino expb .)
    COMMA           reduce using rule 106 (exp -> termino expb .)
    RBRACK          reduce using rule 106 (exp -> termino expb .)
    HASTA           reduce using rule 106 (exp -> termino expb .)
    HACER           reduce using rule 106 (exp -> termino expb .)


state 142

    (107) expb -> PLUS . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 183
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 143

    (108) expb -> MINUS . exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 184
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 144

    (110) termino -> factor terminob .

    PLUS            reduce using rule 110 (termino -> factor terminob .)
    MINUS           reduce using rule 110 (termino -> factor terminob .)
    GTHAN           reduce using rule 110 (termino -> factor terminob .)
    LTHAN           reduce using rule 110 (termino -> factor terminob .)
    EQLOP           reduce using rule 110 (termino -> factor terminob .)
    GEQUAL          reduce using rule 110 (termino -> factor terminob .)
    LEQUAL          reduce using rule 110 (termino -> factor terminob .)
    ABRACKET        reduce using rule 110 (termino -> factor terminob .)
    RBRACKET        reduce using rule 110 (termino -> factor terminob .)
    ID              reduce using rule 110 (termino -> factor terminob .)
    REGRESA         reduce using rule 110 (termino -> factor terminob .)
    LEE             reduce using rule 110 (termino -> factor terminob .)
    ESCRIBE         reduce using rule 110 (termino -> factor terminob .)
    SI              reduce using rule 110 (termino -> factor terminob .)
    MIENTRAS        reduce using rule 110 (termino -> factor terminob .)
    DESDE           reduce using rule 110 (termino -> factor terminob .)
    LPAREN          reduce using rule 110 (termino -> factor terminob .)
    NUMBER          reduce using rule 110 (termino -> factor terminob .)
    CTEF            reduce using rule 110 (termino -> factor terminob .)
    CTEC            reduce using rule 110 (termino -> factor terminob .)
    STRING          reduce using rule 110 (termino -> factor terminob .)
    RPAREN          reduce using rule 110 (termino -> factor terminob .)
    SEMICOL         reduce using rule 110 (termino -> factor terminob .)
    COMMA           reduce using rule 110 (termino -> factor terminob .)
    RBRACK          reduce using rule 110 (termino -> factor terminob .)
    HASTA           reduce using rule 110 (termino -> factor terminob .)
    HACER           reduce using rule 110 (termino -> factor terminob .)


state 145

    (111) terminob -> TIMES . termino
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    termino                        shift and go to state 185
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 146

    (112) terminob -> DIVIDE . termino
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    termino                        shift and go to state 186
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 147

    (115) factor -> PLUS cte .

    TIMES           reduce using rule 115 (factor -> PLUS cte .)
    DIVIDE          reduce using rule 115 (factor -> PLUS cte .)
    PLUS            reduce using rule 115 (factor -> PLUS cte .)
    MINUS           reduce using rule 115 (factor -> PLUS cte .)
    GTHAN           reduce using rule 115 (factor -> PLUS cte .)
    LTHAN           reduce using rule 115 (factor -> PLUS cte .)
    EQLOP           reduce using rule 115 (factor -> PLUS cte .)
    GEQUAL          reduce using rule 115 (factor -> PLUS cte .)
    LEQUAL          reduce using rule 115 (factor -> PLUS cte .)
    ABRACKET        reduce using rule 115 (factor -> PLUS cte .)
    RBRACKET        reduce using rule 115 (factor -> PLUS cte .)
    ID              reduce using rule 115 (factor -> PLUS cte .)
    REGRESA         reduce using rule 115 (factor -> PLUS cte .)
    LEE             reduce using rule 115 (factor -> PLUS cte .)
    ESCRIBE         reduce using rule 115 (factor -> PLUS cte .)
    SI              reduce using rule 115 (factor -> PLUS cte .)
    MIENTRAS        reduce using rule 115 (factor -> PLUS cte .)
    DESDE           reduce using rule 115 (factor -> PLUS cte .)
    LPAREN          reduce using rule 115 (factor -> PLUS cte .)
    NUMBER          reduce using rule 115 (factor -> PLUS cte .)
    CTEF            reduce using rule 115 (factor -> PLUS cte .)
    CTEC            reduce using rule 115 (factor -> PLUS cte .)
    STRING          reduce using rule 115 (factor -> PLUS cte .)
    RPAREN          reduce using rule 115 (factor -> PLUS cte .)
    SEMICOL         reduce using rule 115 (factor -> PLUS cte .)
    COMMA           reduce using rule 115 (factor -> PLUS cte .)
    RBRACK          reduce using rule 115 (factor -> PLUS cte .)
    HASTA           reduce using rule 115 (factor -> PLUS cte .)
    HACER           reduce using rule 115 (factor -> PLUS cte .)


state 148

    (116) factor -> MINUS cte .

    TIMES           reduce using rule 116 (factor -> MINUS cte .)
    DIVIDE          reduce using rule 116 (factor -> MINUS cte .)
    PLUS            reduce using rule 116 (factor -> MINUS cte .)
    MINUS           reduce using rule 116 (factor -> MINUS cte .)
    GTHAN           reduce using rule 116 (factor -> MINUS cte .)
    LTHAN           reduce using rule 116 (factor -> MINUS cte .)
    EQLOP           reduce using rule 116 (factor -> MINUS cte .)
    GEQUAL          reduce using rule 116 (factor -> MINUS cte .)
    LEQUAL          reduce using rule 116 (factor -> MINUS cte .)
    ABRACKET        reduce using rule 116 (factor -> MINUS cte .)
    RBRACKET        reduce using rule 116 (factor -> MINUS cte .)
    ID              reduce using rule 116 (factor -> MINUS cte .)
    REGRESA         reduce using rule 116 (factor -> MINUS cte .)
    LEE             reduce using rule 116 (factor -> MINUS cte .)
    ESCRIBE         reduce using rule 116 (factor -> MINUS cte .)
    SI              reduce using rule 116 (factor -> MINUS cte .)
    MIENTRAS        reduce using rule 116 (factor -> MINUS cte .)
    DESDE           reduce using rule 116 (factor -> MINUS cte .)
    LPAREN          reduce using rule 116 (factor -> MINUS cte .)
    NUMBER          reduce using rule 116 (factor -> MINUS cte .)
    CTEF            reduce using rule 116 (factor -> MINUS cte .)
    CTEC            reduce using rule 116 (factor -> MINUS cte .)
    STRING          reduce using rule 116 (factor -> MINUS cte .)
    RPAREN          reduce using rule 116 (factor -> MINUS cte .)
    SEMICOL         reduce using rule 116 (factor -> MINUS cte .)
    COMMA           reduce using rule 116 (factor -> MINUS cte .)
    RBRACK          reduce using rule 116 (factor -> MINUS cte .)
    HASTA           reduce using rule 116 (factor -> MINUS cte .)
    HACER           reduce using rule 116 (factor -> MINUS cte .)


state 149

    (42) funcionc -> vars agregacont . bloque reinicio funcion
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 187

state 150

    (45) agregacont -> empty .

    LBRACKET        reduce using rule 45 (agregacont -> empty .)


state 151

    (43) funcionc -> agregacont bloque . reinicio funcion
    (46) reinicio -> . empty
    (131) empty -> .

    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)

    reinicio                       shift and go to state 188
    empty                          shift and go to state 189

state 152

    (40) funcionb -> varsfunc RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 40 (funcionb -> varsfunc RPAREN testeru funcionc .)


state 153

    (31) varsfuncb -> id COMMA varsfuncb .

    RPAREN          reduce using rule 31 (varsfuncb -> id COMMA varsfuncb .)


state 154

    (9) id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .

    COMMA           reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    SEMICOL         reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    RPAREN          reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)
    EQUAL           reduce using rule 9 (id -> ID agregavar LBRACK arreglo cte RBRACK arreglo2 .)


state 155

    (11) arreglo2 -> empty .

    COMMA           reduce using rule 11 (arreglo2 -> empty .)
    SEMICOL         reduce using rule 11 (arreglo2 -> empty .)
    RPAREN          reduce using rule 11 (arreglo2 -> empty .)
    EQUAL           reduce using rule 11 (arreglo2 -> empty .)


state 156

    (50) bloqueb -> estatuto bloqueb .

    $end            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    FUNCION         reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    PRINCIPAL       reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    SINO            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    RBRACKET        reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    ID              reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    REGRESA         reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    LEE             reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    ESCRIBE         reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    SI              reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    MIENTRAS        reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    DESDE           reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    LPAREN          reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    PLUS            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    MINUS           reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    NUMBER          reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    CTEF            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    CTEC            reduce using rule 50 (bloqueb -> estatuto bloqueb .)
    STRING          reduce using rule 50 (bloqueb -> estatuto bloqueb .)


state 157

    (49) bloqueb -> RBRACKET helper .

    $end            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    FUNCION         reduce using rule 49 (bloqueb -> RBRACKET helper .)
    PRINCIPAL       reduce using rule 49 (bloqueb -> RBRACKET helper .)
    SINO            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    RBRACKET        reduce using rule 49 (bloqueb -> RBRACKET helper .)
    ID              reduce using rule 49 (bloqueb -> RBRACKET helper .)
    REGRESA         reduce using rule 49 (bloqueb -> RBRACKET helper .)
    LEE             reduce using rule 49 (bloqueb -> RBRACKET helper .)
    ESCRIBE         reduce using rule 49 (bloqueb -> RBRACKET helper .)
    SI              reduce using rule 49 (bloqueb -> RBRACKET helper .)
    MIENTRAS        reduce using rule 49 (bloqueb -> RBRACKET helper .)
    DESDE           reduce using rule 49 (bloqueb -> RBRACKET helper .)
    LPAREN          reduce using rule 49 (bloqueb -> RBRACKET helper .)
    PLUS            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    MINUS           reduce using rule 49 (bloqueb -> RBRACKET helper .)
    NUMBER          reduce using rule 49 (bloqueb -> RBRACKET helper .)
    CTEF            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    CTEC            reduce using rule 49 (bloqueb -> RBRACKET helper .)
    STRING          reduce using rule 49 (bloqueb -> RBRACKET helper .)


state 158

    (51) helper -> empty .

    $end            reduce using rule 51 (helper -> empty .)
    FUNCION         reduce using rule 51 (helper -> empty .)
    PRINCIPAL       reduce using rule 51 (helper -> empty .)
    SINO            reduce using rule 51 (helper -> empty .)
    RBRACKET        reduce using rule 51 (helper -> empty .)
    ID              reduce using rule 51 (helper -> empty .)
    REGRESA         reduce using rule 51 (helper -> empty .)
    LEE             reduce using rule 51 (helper -> empty .)
    ESCRIBE         reduce using rule 51 (helper -> empty .)
    SI              reduce using rule 51 (helper -> empty .)
    MIENTRAS        reduce using rule 51 (helper -> empty .)
    DESDE           reduce using rule 51 (helper -> empty .)
    LPAREN          reduce using rule 51 (helper -> empty .)
    PLUS            reduce using rule 51 (helper -> empty .)
    MINUS           reduce using rule 51 (helper -> empty .)
    NUMBER          reduce using rule 51 (helper -> empty .)
    CTEF            reduce using rule 51 (helper -> empty .)
    CTEC            reduce using rule 51 (helper -> empty .)
    STRING          reduce using rule 51 (helper -> empty .)


state 159

    (61) asignacionb -> ID . asign SEMICOL
    (114) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (118) factor -> ID . asign
    (91) cte -> ID .
    (52) asign -> . LBRACK arrn expresion arrn2 RBRACK arrn3
    (53) asign -> . LBRACK arrn CTEI arrn2 RBRACK arrn3
    (54) asign -> . LBRACK arrn CTEC arrn2 RBRACK arrn3

    LPAREN          shift and go to state 169
    TIMES           reduce using rule 91 (cte -> ID .)
    DIVIDE          reduce using rule 91 (cte -> ID .)
    PLUS            reduce using rule 91 (cte -> ID .)
    MINUS           reduce using rule 91 (cte -> ID .)
    GTHAN           reduce using rule 91 (cte -> ID .)
    LTHAN           reduce using rule 91 (cte -> ID .)
    EQLOP           reduce using rule 91 (cte -> ID .)
    GEQUAL          reduce using rule 91 (cte -> ID .)
    LEQUAL          reduce using rule 91 (cte -> ID .)
    ABRACKET        reduce using rule 91 (cte -> ID .)
    SEMICOL         reduce using rule 91 (cte -> ID .)
    LBRACK          shift and go to state 124

    asign                          shift and go to state 190

state 160

    (58) asignacion -> ID EQUAL asignacionb .

    RBRACKET        reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    ID              reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    REGRESA         reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    LEE             reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    ESCRIBE         reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    SI              reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    MIENTRAS        reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    DESDE           reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    LPAREN          reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    PLUS            reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    MINUS           reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    NUMBER          reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    CTEF            reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    CTEC            reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)
    STRING          reduce using rule 58 (asignacion -> ID EQUAL asignacionb .)


state 161

    (60) asignacionb -> expresion . SEMICOL

    SEMICOL         shift and go to state 191


state 162

    (59) asignacion -> ID asign EQUAL . asignacionb
    (60) asignacionb -> . expresion SEMICOL
    (61) asignacionb -> . ID asign SEMICOL
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    ID              shift and go to state 159
    LPAREN          shift and go to state 92
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    asignacionb                    shift and go to state 192
    expresion                      shift and go to state 161
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 163

    (64) funcionvoid -> ID LPAREN fnvn1 . expresion fnvn2 funcionvoidb
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 193
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 164

    (114) factor -> ID LPAREN llamadafun . expresion llamadafun2 RPAREN llamadafun3
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 194
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 165

    (67) fnvn1 -> empty .
    (119) llamadafun -> empty .

  ! reduce/reduce conflict for LPAREN resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for NUMBER resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEC resolved using rule 67 (fnvn1 -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 67 (fnvn1 -> empty .)
    LPAREN          reduce using rule 67 (fnvn1 -> empty .)
    ID              reduce using rule 67 (fnvn1 -> empty .)
    PLUS            reduce using rule 67 (fnvn1 -> empty .)
    MINUS           reduce using rule 67 (fnvn1 -> empty .)
    NUMBER          reduce using rule 67 (fnvn1 -> empty .)
    CTEF            reduce using rule 67 (fnvn1 -> empty .)
    CTEC            reduce using rule 67 (fnvn1 -> empty .)
    STRING          reduce using rule 67 (fnvn1 -> empty .)

  ! LPAREN          [ reduce using rule 119 (llamadafun -> empty .) ]
  ! ID              [ reduce using rule 119 (llamadafun -> empty .) ]
  ! PLUS            [ reduce using rule 119 (llamadafun -> empty .) ]
  ! MINUS           [ reduce using rule 119 (llamadafun -> empty .) ]
  ! NUMBER          [ reduce using rule 119 (llamadafun -> empty .) ]
  ! CTEF            [ reduce using rule 119 (llamadafun -> empty .) ]
  ! CTEC            [ reduce using rule 119 (llamadafun -> empty .) ]
  ! STRING          [ reduce using rule 119 (llamadafun -> empty .) ]


state 166

    (52) asign -> LBRACK arrn . expresion arrn2 RBRACK arrn3
    (53) asign -> LBRACK arrn . CTEI arrn2 RBRACK arrn3
    (54) asign -> LBRACK arrn . CTEC arrn2 RBRACK arrn3
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    CTEI            shift and go to state 196
    CTEC            shift and go to state 197
    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    STRING          shift and go to state 79

    expresion                      shift and go to state 195
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 167

    (55) arrn -> empty .

    CTEI            reduce using rule 55 (arrn -> empty .)
    CTEC            reduce using rule 55 (arrn -> empty .)
    LPAREN          reduce using rule 55 (arrn -> empty .)
    ID              reduce using rule 55 (arrn -> empty .)
    PLUS            reduce using rule 55 (arrn -> empty .)
    MINUS           reduce using rule 55 (arrn -> empty .)
    NUMBER          reduce using rule 55 (arrn -> empty .)
    CTEF            reduce using rule 55 (arrn -> empty .)
    STRING          reduce using rule 55 (arrn -> empty .)


state 168

    (113) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    EQLOP           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    GEQUAL          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    LEQUAL          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    ABRACKET        reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    REGRESA         reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    LEE             reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    ESCRIBE         reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    SI              reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    MIENTRAS        reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    DESDE           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    CTEC            reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    SEMICOL         reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    RBRACK          reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    HASTA           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)
    HACER           reduce using rule 113 (factor -> LPAREN expresion RPAREN .)


state 169

    (114) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (119) llamadafun -> . empty
    (131) empty -> .

    LPAREN          reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    llamadafun                     shift and go to state 164
    empty                          shift and go to state 198

state 170

    (118) factor -> ID asign .

    TIMES           reduce using rule 118 (factor -> ID asign .)
    DIVIDE          reduce using rule 118 (factor -> ID asign .)
    PLUS            reduce using rule 118 (factor -> ID asign .)
    MINUS           reduce using rule 118 (factor -> ID asign .)
    GTHAN           reduce using rule 118 (factor -> ID asign .)
    LTHAN           reduce using rule 118 (factor -> ID asign .)
    EQLOP           reduce using rule 118 (factor -> ID asign .)
    GEQUAL          reduce using rule 118 (factor -> ID asign .)
    LEQUAL          reduce using rule 118 (factor -> ID asign .)
    ABRACKET        reduce using rule 118 (factor -> ID asign .)
    RPAREN          reduce using rule 118 (factor -> ID asign .)
    COMMA           reduce using rule 118 (factor -> ID asign .)
    RBRACKET        reduce using rule 118 (factor -> ID asign .)
    ID              reduce using rule 118 (factor -> ID asign .)
    REGRESA         reduce using rule 118 (factor -> ID asign .)
    LEE             reduce using rule 118 (factor -> ID asign .)
    ESCRIBE         reduce using rule 118 (factor -> ID asign .)
    SI              reduce using rule 118 (factor -> ID asign .)
    MIENTRAS        reduce using rule 118 (factor -> ID asign .)
    DESDE           reduce using rule 118 (factor -> ID asign .)
    LPAREN          reduce using rule 118 (factor -> ID asign .)
    NUMBER          reduce using rule 118 (factor -> ID asign .)
    CTEF            reduce using rule 118 (factor -> ID asign .)
    CTEC            reduce using rule 118 (factor -> ID asign .)
    STRING          reduce using rule 118 (factor -> ID asign .)
    SEMICOL         reduce using rule 118 (factor -> ID asign .)
    RBRACK          reduce using rule 118 (factor -> ID asign .)
    HASTA           reduce using rule 118 (factor -> ID asign .)
    HACER           reduce using rule 118 (factor -> ID asign .)


state 171

    (62) retorno -> REGRESA LPAREN expresion . retn RPAREN SEMICOL
    (63) retn -> . empty
    (131) empty -> .

    RPAREN          reduce using rule 131 (empty -> .)

    retn                           shift and go to state 199
    empty                          shift and go to state 200

state 172

    (70) lee -> LEE LPAREN id . leeb
    (71) leeb -> . RPAREN leen SEMICOL
    (72) leeb -> . COMMA leen id leeb

    RPAREN          shift and go to state 202
    COMMA           shift and go to state 203

    leeb                           shift and go to state 201

state 173

    (74) escritura -> ESCRIBE LPAREN expresion . prin1 escriturab
    (77) prin1 -> . empty
    (131) empty -> .

    COMMA           reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)

    prin1                          shift and go to state 204
    empty                          shift and go to state 205

state 174

    (78) decision -> SI LPAREN expresion . pn1 RPAREN ENTONCES decisionb
    (79) pn1 -> . empty
    (131) empty -> .

    RPAREN          reduce using rule 131 (empty -> .)

    pn1                            shift and go to state 206
    empty                          shift and go to state 207

state 175

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN . expresion RPAREN HAZ rcn2 bloque rcn3
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 208
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 176

    (88) repeticionnocond -> DESDE rncns id . EQUAL exp rncn HASTA exp HACER bloque

    EQUAL           shift and go to state 209


state 177

    (99) expresion -> exp GTHAN exp .

    RBRACKET        reduce using rule 99 (expresion -> exp GTHAN exp .)
    ID              reduce using rule 99 (expresion -> exp GTHAN exp .)
    REGRESA         reduce using rule 99 (expresion -> exp GTHAN exp .)
    LEE             reduce using rule 99 (expresion -> exp GTHAN exp .)
    ESCRIBE         reduce using rule 99 (expresion -> exp GTHAN exp .)
    SI              reduce using rule 99 (expresion -> exp GTHAN exp .)
    MIENTRAS        reduce using rule 99 (expresion -> exp GTHAN exp .)
    DESDE           reduce using rule 99 (expresion -> exp GTHAN exp .)
    LPAREN          reduce using rule 99 (expresion -> exp GTHAN exp .)
    PLUS            reduce using rule 99 (expresion -> exp GTHAN exp .)
    MINUS           reduce using rule 99 (expresion -> exp GTHAN exp .)
    NUMBER          reduce using rule 99 (expresion -> exp GTHAN exp .)
    CTEF            reduce using rule 99 (expresion -> exp GTHAN exp .)
    CTEC            reduce using rule 99 (expresion -> exp GTHAN exp .)
    STRING          reduce using rule 99 (expresion -> exp GTHAN exp .)
    RPAREN          reduce using rule 99 (expresion -> exp GTHAN exp .)
    SEMICOL         reduce using rule 99 (expresion -> exp GTHAN exp .)
    COMMA           reduce using rule 99 (expresion -> exp GTHAN exp .)
    RBRACK          reduce using rule 99 (expresion -> exp GTHAN exp .)


state 178

    (100) expresion -> exp LTHAN exp .

    RBRACKET        reduce using rule 100 (expresion -> exp LTHAN exp .)
    ID              reduce using rule 100 (expresion -> exp LTHAN exp .)
    REGRESA         reduce using rule 100 (expresion -> exp LTHAN exp .)
    LEE             reduce using rule 100 (expresion -> exp LTHAN exp .)
    ESCRIBE         reduce using rule 100 (expresion -> exp LTHAN exp .)
    SI              reduce using rule 100 (expresion -> exp LTHAN exp .)
    MIENTRAS        reduce using rule 100 (expresion -> exp LTHAN exp .)
    DESDE           reduce using rule 100 (expresion -> exp LTHAN exp .)
    LPAREN          reduce using rule 100 (expresion -> exp LTHAN exp .)
    PLUS            reduce using rule 100 (expresion -> exp LTHAN exp .)
    MINUS           reduce using rule 100 (expresion -> exp LTHAN exp .)
    NUMBER          reduce using rule 100 (expresion -> exp LTHAN exp .)
    CTEF            reduce using rule 100 (expresion -> exp LTHAN exp .)
    CTEC            reduce using rule 100 (expresion -> exp LTHAN exp .)
    STRING          reduce using rule 100 (expresion -> exp LTHAN exp .)
    RPAREN          reduce using rule 100 (expresion -> exp LTHAN exp .)
    SEMICOL         reduce using rule 100 (expresion -> exp LTHAN exp .)
    COMMA           reduce using rule 100 (expresion -> exp LTHAN exp .)
    RBRACK          reduce using rule 100 (expresion -> exp LTHAN exp .)


state 179

    (101) expresion -> exp EQLOP exp .

    RBRACKET        reduce using rule 101 (expresion -> exp EQLOP exp .)
    ID              reduce using rule 101 (expresion -> exp EQLOP exp .)
    REGRESA         reduce using rule 101 (expresion -> exp EQLOP exp .)
    LEE             reduce using rule 101 (expresion -> exp EQLOP exp .)
    ESCRIBE         reduce using rule 101 (expresion -> exp EQLOP exp .)
    SI              reduce using rule 101 (expresion -> exp EQLOP exp .)
    MIENTRAS        reduce using rule 101 (expresion -> exp EQLOP exp .)
    DESDE           reduce using rule 101 (expresion -> exp EQLOP exp .)
    LPAREN          reduce using rule 101 (expresion -> exp EQLOP exp .)
    PLUS            reduce using rule 101 (expresion -> exp EQLOP exp .)
    MINUS           reduce using rule 101 (expresion -> exp EQLOP exp .)
    NUMBER          reduce using rule 101 (expresion -> exp EQLOP exp .)
    CTEF            reduce using rule 101 (expresion -> exp EQLOP exp .)
    CTEC            reduce using rule 101 (expresion -> exp EQLOP exp .)
    STRING          reduce using rule 101 (expresion -> exp EQLOP exp .)
    RPAREN          reduce using rule 101 (expresion -> exp EQLOP exp .)
    SEMICOL         reduce using rule 101 (expresion -> exp EQLOP exp .)
    COMMA           reduce using rule 101 (expresion -> exp EQLOP exp .)
    RBRACK          reduce using rule 101 (expresion -> exp EQLOP exp .)


state 180

    (102) expresion -> exp GEQUAL exp .

    RBRACKET        reduce using rule 102 (expresion -> exp GEQUAL exp .)
    ID              reduce using rule 102 (expresion -> exp GEQUAL exp .)
    REGRESA         reduce using rule 102 (expresion -> exp GEQUAL exp .)
    LEE             reduce using rule 102 (expresion -> exp GEQUAL exp .)
    ESCRIBE         reduce using rule 102 (expresion -> exp GEQUAL exp .)
    SI              reduce using rule 102 (expresion -> exp GEQUAL exp .)
    MIENTRAS        reduce using rule 102 (expresion -> exp GEQUAL exp .)
    DESDE           reduce using rule 102 (expresion -> exp GEQUAL exp .)
    LPAREN          reduce using rule 102 (expresion -> exp GEQUAL exp .)
    PLUS            reduce using rule 102 (expresion -> exp GEQUAL exp .)
    MINUS           reduce using rule 102 (expresion -> exp GEQUAL exp .)
    NUMBER          reduce using rule 102 (expresion -> exp GEQUAL exp .)
    CTEF            reduce using rule 102 (expresion -> exp GEQUAL exp .)
    CTEC            reduce using rule 102 (expresion -> exp GEQUAL exp .)
    STRING          reduce using rule 102 (expresion -> exp GEQUAL exp .)
    RPAREN          reduce using rule 102 (expresion -> exp GEQUAL exp .)
    SEMICOL         reduce using rule 102 (expresion -> exp GEQUAL exp .)
    COMMA           reduce using rule 102 (expresion -> exp GEQUAL exp .)
    RBRACK          reduce using rule 102 (expresion -> exp GEQUAL exp .)


state 181

    (103) expresion -> exp LEQUAL exp .

    RBRACKET        reduce using rule 103 (expresion -> exp LEQUAL exp .)
    ID              reduce using rule 103 (expresion -> exp LEQUAL exp .)
    REGRESA         reduce using rule 103 (expresion -> exp LEQUAL exp .)
    LEE             reduce using rule 103 (expresion -> exp LEQUAL exp .)
    ESCRIBE         reduce using rule 103 (expresion -> exp LEQUAL exp .)
    SI              reduce using rule 103 (expresion -> exp LEQUAL exp .)
    MIENTRAS        reduce using rule 103 (expresion -> exp LEQUAL exp .)
    DESDE           reduce using rule 103 (expresion -> exp LEQUAL exp .)
    LPAREN          reduce using rule 103 (expresion -> exp LEQUAL exp .)
    PLUS            reduce using rule 103 (expresion -> exp LEQUAL exp .)
    MINUS           reduce using rule 103 (expresion -> exp LEQUAL exp .)
    NUMBER          reduce using rule 103 (expresion -> exp LEQUAL exp .)
    CTEF            reduce using rule 103 (expresion -> exp LEQUAL exp .)
    CTEC            reduce using rule 103 (expresion -> exp LEQUAL exp .)
    STRING          reduce using rule 103 (expresion -> exp LEQUAL exp .)
    RPAREN          reduce using rule 103 (expresion -> exp LEQUAL exp .)
    SEMICOL         reduce using rule 103 (expresion -> exp LEQUAL exp .)
    COMMA           reduce using rule 103 (expresion -> exp LEQUAL exp .)
    RBRACK          reduce using rule 103 (expresion -> exp LEQUAL exp .)


state 182

    (104) expresion -> exp ABRACKET exp .

    RBRACKET        reduce using rule 104 (expresion -> exp ABRACKET exp .)
    ID              reduce using rule 104 (expresion -> exp ABRACKET exp .)
    REGRESA         reduce using rule 104 (expresion -> exp ABRACKET exp .)
    LEE             reduce using rule 104 (expresion -> exp ABRACKET exp .)
    ESCRIBE         reduce using rule 104 (expresion -> exp ABRACKET exp .)
    SI              reduce using rule 104 (expresion -> exp ABRACKET exp .)
    MIENTRAS        reduce using rule 104 (expresion -> exp ABRACKET exp .)
    DESDE           reduce using rule 104 (expresion -> exp ABRACKET exp .)
    LPAREN          reduce using rule 104 (expresion -> exp ABRACKET exp .)
    PLUS            reduce using rule 104 (expresion -> exp ABRACKET exp .)
    MINUS           reduce using rule 104 (expresion -> exp ABRACKET exp .)
    NUMBER          reduce using rule 104 (expresion -> exp ABRACKET exp .)
    CTEF            reduce using rule 104 (expresion -> exp ABRACKET exp .)
    CTEC            reduce using rule 104 (expresion -> exp ABRACKET exp .)
    STRING          reduce using rule 104 (expresion -> exp ABRACKET exp .)
    RPAREN          reduce using rule 104 (expresion -> exp ABRACKET exp .)
    SEMICOL         reduce using rule 104 (expresion -> exp ABRACKET exp .)
    COMMA           reduce using rule 104 (expresion -> exp ABRACKET exp .)
    RBRACK          reduce using rule 104 (expresion -> exp ABRACKET exp .)


state 183

    (107) expb -> PLUS exp .

    GTHAN           reduce using rule 107 (expb -> PLUS exp .)
    LTHAN           reduce using rule 107 (expb -> PLUS exp .)
    EQLOP           reduce using rule 107 (expb -> PLUS exp .)
    GEQUAL          reduce using rule 107 (expb -> PLUS exp .)
    LEQUAL          reduce using rule 107 (expb -> PLUS exp .)
    ABRACKET        reduce using rule 107 (expb -> PLUS exp .)
    RBRACKET        reduce using rule 107 (expb -> PLUS exp .)
    ID              reduce using rule 107 (expb -> PLUS exp .)
    REGRESA         reduce using rule 107 (expb -> PLUS exp .)
    LEE             reduce using rule 107 (expb -> PLUS exp .)
    ESCRIBE         reduce using rule 107 (expb -> PLUS exp .)
    SI              reduce using rule 107 (expb -> PLUS exp .)
    MIENTRAS        reduce using rule 107 (expb -> PLUS exp .)
    DESDE           reduce using rule 107 (expb -> PLUS exp .)
    LPAREN          reduce using rule 107 (expb -> PLUS exp .)
    PLUS            reduce using rule 107 (expb -> PLUS exp .)
    MINUS           reduce using rule 107 (expb -> PLUS exp .)
    NUMBER          reduce using rule 107 (expb -> PLUS exp .)
    CTEF            reduce using rule 107 (expb -> PLUS exp .)
    CTEC            reduce using rule 107 (expb -> PLUS exp .)
    STRING          reduce using rule 107 (expb -> PLUS exp .)
    RPAREN          reduce using rule 107 (expb -> PLUS exp .)
    SEMICOL         reduce using rule 107 (expb -> PLUS exp .)
    COMMA           reduce using rule 107 (expb -> PLUS exp .)
    RBRACK          reduce using rule 107 (expb -> PLUS exp .)
    HASTA           reduce using rule 107 (expb -> PLUS exp .)
    HACER           reduce using rule 107 (expb -> PLUS exp .)


state 184

    (108) expb -> MINUS exp .

    GTHAN           reduce using rule 108 (expb -> MINUS exp .)
    LTHAN           reduce using rule 108 (expb -> MINUS exp .)
    EQLOP           reduce using rule 108 (expb -> MINUS exp .)
    GEQUAL          reduce using rule 108 (expb -> MINUS exp .)
    LEQUAL          reduce using rule 108 (expb -> MINUS exp .)
    ABRACKET        reduce using rule 108 (expb -> MINUS exp .)
    RBRACKET        reduce using rule 108 (expb -> MINUS exp .)
    ID              reduce using rule 108 (expb -> MINUS exp .)
    REGRESA         reduce using rule 108 (expb -> MINUS exp .)
    LEE             reduce using rule 108 (expb -> MINUS exp .)
    ESCRIBE         reduce using rule 108 (expb -> MINUS exp .)
    SI              reduce using rule 108 (expb -> MINUS exp .)
    MIENTRAS        reduce using rule 108 (expb -> MINUS exp .)
    DESDE           reduce using rule 108 (expb -> MINUS exp .)
    LPAREN          reduce using rule 108 (expb -> MINUS exp .)
    PLUS            reduce using rule 108 (expb -> MINUS exp .)
    MINUS           reduce using rule 108 (expb -> MINUS exp .)
    NUMBER          reduce using rule 108 (expb -> MINUS exp .)
    CTEF            reduce using rule 108 (expb -> MINUS exp .)
    CTEC            reduce using rule 108 (expb -> MINUS exp .)
    STRING          reduce using rule 108 (expb -> MINUS exp .)
    RPAREN          reduce using rule 108 (expb -> MINUS exp .)
    SEMICOL         reduce using rule 108 (expb -> MINUS exp .)
    COMMA           reduce using rule 108 (expb -> MINUS exp .)
    RBRACK          reduce using rule 108 (expb -> MINUS exp .)
    HASTA           reduce using rule 108 (expb -> MINUS exp .)
    HACER           reduce using rule 108 (expb -> MINUS exp .)


state 185

    (111) terminob -> TIMES termino .

    PLUS            reduce using rule 111 (terminob -> TIMES termino .)
    MINUS           reduce using rule 111 (terminob -> TIMES termino .)
    GTHAN           reduce using rule 111 (terminob -> TIMES termino .)
    LTHAN           reduce using rule 111 (terminob -> TIMES termino .)
    EQLOP           reduce using rule 111 (terminob -> TIMES termino .)
    GEQUAL          reduce using rule 111 (terminob -> TIMES termino .)
    LEQUAL          reduce using rule 111 (terminob -> TIMES termino .)
    ABRACKET        reduce using rule 111 (terminob -> TIMES termino .)
    RBRACKET        reduce using rule 111 (terminob -> TIMES termino .)
    ID              reduce using rule 111 (terminob -> TIMES termino .)
    REGRESA         reduce using rule 111 (terminob -> TIMES termino .)
    LEE             reduce using rule 111 (terminob -> TIMES termino .)
    ESCRIBE         reduce using rule 111 (terminob -> TIMES termino .)
    SI              reduce using rule 111 (terminob -> TIMES termino .)
    MIENTRAS        reduce using rule 111 (terminob -> TIMES termino .)
    DESDE           reduce using rule 111 (terminob -> TIMES termino .)
    LPAREN          reduce using rule 111 (terminob -> TIMES termino .)
    NUMBER          reduce using rule 111 (terminob -> TIMES termino .)
    CTEF            reduce using rule 111 (terminob -> TIMES termino .)
    CTEC            reduce using rule 111 (terminob -> TIMES termino .)
    STRING          reduce using rule 111 (terminob -> TIMES termino .)
    RPAREN          reduce using rule 111 (terminob -> TIMES termino .)
    SEMICOL         reduce using rule 111 (terminob -> TIMES termino .)
    COMMA           reduce using rule 111 (terminob -> TIMES termino .)
    RBRACK          reduce using rule 111 (terminob -> TIMES termino .)
    HASTA           reduce using rule 111 (terminob -> TIMES termino .)
    HACER           reduce using rule 111 (terminob -> TIMES termino .)


state 186

    (112) terminob -> DIVIDE termino .

    PLUS            reduce using rule 112 (terminob -> DIVIDE termino .)
    MINUS           reduce using rule 112 (terminob -> DIVIDE termino .)
    GTHAN           reduce using rule 112 (terminob -> DIVIDE termino .)
    LTHAN           reduce using rule 112 (terminob -> DIVIDE termino .)
    EQLOP           reduce using rule 112 (terminob -> DIVIDE termino .)
    GEQUAL          reduce using rule 112 (terminob -> DIVIDE termino .)
    LEQUAL          reduce using rule 112 (terminob -> DIVIDE termino .)
    ABRACKET        reduce using rule 112 (terminob -> DIVIDE termino .)
    RBRACKET        reduce using rule 112 (terminob -> DIVIDE termino .)
    ID              reduce using rule 112 (terminob -> DIVIDE termino .)
    REGRESA         reduce using rule 112 (terminob -> DIVIDE termino .)
    LEE             reduce using rule 112 (terminob -> DIVIDE termino .)
    ESCRIBE         reduce using rule 112 (terminob -> DIVIDE termino .)
    SI              reduce using rule 112 (terminob -> DIVIDE termino .)
    MIENTRAS        reduce using rule 112 (terminob -> DIVIDE termino .)
    DESDE           reduce using rule 112 (terminob -> DIVIDE termino .)
    LPAREN          reduce using rule 112 (terminob -> DIVIDE termino .)
    NUMBER          reduce using rule 112 (terminob -> DIVIDE termino .)
    CTEF            reduce using rule 112 (terminob -> DIVIDE termino .)
    CTEC            reduce using rule 112 (terminob -> DIVIDE termino .)
    STRING          reduce using rule 112 (terminob -> DIVIDE termino .)
    RPAREN          reduce using rule 112 (terminob -> DIVIDE termino .)
    SEMICOL         reduce using rule 112 (terminob -> DIVIDE termino .)
    COMMA           reduce using rule 112 (terminob -> DIVIDE termino .)
    RBRACK          reduce using rule 112 (terminob -> DIVIDE termino .)
    HASTA           reduce using rule 112 (terminob -> DIVIDE termino .)
    HACER           reduce using rule 112 (terminob -> DIVIDE termino .)


state 187

    (42) funcionc -> vars agregacont bloque . reinicio funcion
    (46) reinicio -> . empty
    (131) empty -> .

    FUNCION         reduce using rule 131 (empty -> .)
    PRINCIPAL       reduce using rule 131 (empty -> .)

    reinicio                       shift and go to state 210
    empty                          shift and go to state 189

state 188

    (43) funcionc -> agregacont bloque reinicio . funcion
    (34) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (35) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (36) funcion -> . empty
    (131) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 131 (empty -> .)

    funcion                        shift and go to state 211
    empty                          shift and go to state 13

state 189

    (46) reinicio -> empty .

    FUNCION         reduce using rule 46 (reinicio -> empty .)
    PRINCIPAL       reduce using rule 46 (reinicio -> empty .)


state 190

    (61) asignacionb -> ID asign . SEMICOL
    (118) factor -> ID asign .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 212
    TIMES           reduce using rule 118 (factor -> ID asign .)
    DIVIDE          reduce using rule 118 (factor -> ID asign .)
    PLUS            reduce using rule 118 (factor -> ID asign .)
    MINUS           reduce using rule 118 (factor -> ID asign .)
    GTHAN           reduce using rule 118 (factor -> ID asign .)
    LTHAN           reduce using rule 118 (factor -> ID asign .)
    EQLOP           reduce using rule 118 (factor -> ID asign .)
    GEQUAL          reduce using rule 118 (factor -> ID asign .)
    LEQUAL          reduce using rule 118 (factor -> ID asign .)
    ABRACKET        reduce using rule 118 (factor -> ID asign .)

  ! SEMICOL         [ reduce using rule 118 (factor -> ID asign .) ]


state 191

    (60) asignacionb -> expresion SEMICOL .

    RBRACKET        reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    ID              reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    REGRESA         reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    LEE             reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    ESCRIBE         reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    SI              reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    MIENTRAS        reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    DESDE           reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    LPAREN          reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    PLUS            reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    MINUS           reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    NUMBER          reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    CTEF            reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    CTEC            reduce using rule 60 (asignacionb -> expresion SEMICOL .)
    STRING          reduce using rule 60 (asignacionb -> expresion SEMICOL .)


state 192

    (59) asignacion -> ID asign EQUAL asignacionb .

    RBRACKET        reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    ID              reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    REGRESA         reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    LEE             reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    ESCRIBE         reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    SI              reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    MIENTRAS        reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    DESDE           reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    LPAREN          reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    PLUS            reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    MINUS           reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    NUMBER          reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    CTEF            reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    CTEC            reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)
    STRING          reduce using rule 59 (asignacion -> ID asign EQUAL asignacionb .)


state 193

    (64) funcionvoid -> ID LPAREN fnvn1 expresion . fnvn2 funcionvoidb
    (68) fnvn2 -> . empty
    (131) empty -> .

    COMMA           reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)

    fnvn2                          shift and go to state 213
    empty                          shift and go to state 214

state 194

    (114) factor -> ID LPAREN llamadafun expresion . llamadafun2 RPAREN llamadafun3
    (120) llamadafun2 -> . empty
    (131) empty -> .

    RPAREN          reduce using rule 131 (empty -> .)

    llamadafun2                    shift and go to state 215
    empty                          shift and go to state 216

state 195

    (52) asign -> LBRACK arrn expresion . arrn2 RBRACK arrn3
    (56) arrn2 -> . empty
    (131) empty -> .

    RBRACK          reduce using rule 131 (empty -> .)

    arrn2                          shift and go to state 217
    empty                          shift and go to state 218

state 196

    (53) asign -> LBRACK arrn CTEI . arrn2 RBRACK arrn3
    (56) arrn2 -> . empty
    (131) empty -> .

    RBRACK          reduce using rule 131 (empty -> .)

    arrn2                          shift and go to state 219
    empty                          shift and go to state 218

state 197

    (54) asign -> LBRACK arrn CTEC . arrn2 RBRACK arrn3
    (94) cte -> CTEC .
    (56) arrn2 -> . empty
    (131) empty -> .

  ! reduce/reduce conflict for RBRACK resolved using rule 94 (cte -> CTEC .)
    TIMES           reduce using rule 94 (cte -> CTEC .)
    DIVIDE          reduce using rule 94 (cte -> CTEC .)
    PLUS            reduce using rule 94 (cte -> CTEC .)
    MINUS           reduce using rule 94 (cte -> CTEC .)
    GTHAN           reduce using rule 94 (cte -> CTEC .)
    LTHAN           reduce using rule 94 (cte -> CTEC .)
    EQLOP           reduce using rule 94 (cte -> CTEC .)
    GEQUAL          reduce using rule 94 (cte -> CTEC .)
    LEQUAL          reduce using rule 94 (cte -> CTEC .)
    ABRACKET        reduce using rule 94 (cte -> CTEC .)
    RBRACK          reduce using rule 94 (cte -> CTEC .)

  ! RBRACK          [ reduce using rule 131 (empty -> .) ]

    arrn2                          shift and go to state 220
    empty                          shift and go to state 218

state 198

    (119) llamadafun -> empty .

    LPAREN          reduce using rule 119 (llamadafun -> empty .)
    ID              reduce using rule 119 (llamadafun -> empty .)
    PLUS            reduce using rule 119 (llamadafun -> empty .)
    MINUS           reduce using rule 119 (llamadafun -> empty .)
    NUMBER          reduce using rule 119 (llamadafun -> empty .)
    CTEF            reduce using rule 119 (llamadafun -> empty .)
    CTEC            reduce using rule 119 (llamadafun -> empty .)
    STRING          reduce using rule 119 (llamadafun -> empty .)


state 199

    (62) retorno -> REGRESA LPAREN expresion retn . RPAREN SEMICOL

    RPAREN          shift and go to state 221


state 200

    (63) retn -> empty .

    RPAREN          reduce using rule 63 (retn -> empty .)


state 201

    (70) lee -> LEE LPAREN id leeb .

    RBRACKET        reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    ID              reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    REGRESA         reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    LEE             reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    ESCRIBE         reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    SI              reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    MIENTRAS        reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    DESDE           reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    LPAREN          reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    PLUS            reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    MINUS           reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    NUMBER          reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    CTEF            reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    CTEC            reduce using rule 70 (lee -> LEE LPAREN id leeb .)
    STRING          reduce using rule 70 (lee -> LEE LPAREN id leeb .)


state 202

    (71) leeb -> RPAREN . leen SEMICOL
    (73) leen -> . empty
    (131) empty -> .

    SEMICOL         reduce using rule 131 (empty -> .)

    leen                           shift and go to state 222
    empty                          shift and go to state 223

state 203

    (72) leeb -> COMMA . leen id leeb
    (73) leen -> . empty
    (131) empty -> .

    ID              reduce using rule 131 (empty -> .)

    leen                           shift and go to state 224
    empty                          shift and go to state 223

state 204

    (74) escritura -> ESCRIBE LPAREN expresion prin1 . escriturab
    (75) escriturab -> . COMMA expresion prin1 escriturab
    (76) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 226
    RPAREN          shift and go to state 227

    escriturab                     shift and go to state 225

state 205

    (77) prin1 -> empty .

    COMMA           reduce using rule 77 (prin1 -> empty .)
    RPAREN          reduce using rule 77 (prin1 -> empty .)


state 206

    (78) decision -> SI LPAREN expresion pn1 . RPAREN ENTONCES decisionb

    RPAREN          shift and go to state 228


state 207

    (79) pn1 -> empty .

    RPAREN          reduce using rule 79 (pn1 -> empty .)


state 208

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN expresion . RPAREN HAZ rcn2 bloque rcn3

    RPAREN          shift and go to state 229


state 209

    (88) repeticionnocond -> DESDE rncns id EQUAL . exp rncn HASTA exp HACER bloque
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 230
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 210

    (42) funcionc -> vars agregacont bloque reinicio . funcion
    (34) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (35) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (36) funcion -> . empty
    (131) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 131 (empty -> .)

    funcion                        shift and go to state 231
    empty                          shift and go to state 13

state 211

    (43) funcionc -> agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 43 (funcionc -> agregacont bloque reinicio funcion .)


state 212

    (61) asignacionb -> ID asign SEMICOL .

    RBRACKET        reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    ID              reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    REGRESA         reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    LEE             reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    ESCRIBE         reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    SI              reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    MIENTRAS        reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    DESDE           reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    LPAREN          reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    PLUS            reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    MINUS           reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    NUMBER          reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    CTEF            reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    CTEC            reduce using rule 61 (asignacionb -> ID asign SEMICOL .)
    STRING          reduce using rule 61 (asignacionb -> ID asign SEMICOL .)


state 213

    (64) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 . funcionvoidb
    (65) funcionvoidb -> . COMMA expresion fnvn2 funcionvoidb
    (66) funcionvoidb -> . RPAREN fnvn3 SEMICOL

    COMMA           shift and go to state 233
    RPAREN          shift and go to state 234

    funcionvoidb                   shift and go to state 232

state 214

    (68) fnvn2 -> empty .

    COMMA           reduce using rule 68 (fnvn2 -> empty .)
    RPAREN          reduce using rule 68 (fnvn2 -> empty .)


state 215

    (114) factor -> ID LPAREN llamadafun expresion llamadafun2 . RPAREN llamadafun3

    RPAREN          shift and go to state 235


state 216

    (120) llamadafun2 -> empty .

    RPAREN          reduce using rule 120 (llamadafun2 -> empty .)


state 217

    (52) asign -> LBRACK arrn expresion arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 236


state 218

    (56) arrn2 -> empty .

    RBRACK          reduce using rule 56 (arrn2 -> empty .)


state 219

    (53) asign -> LBRACK arrn CTEI arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 237


state 220

    (54) asign -> LBRACK arrn CTEC arrn2 . RBRACK arrn3

    RBRACK          shift and go to state 238


state 221

    (62) retorno -> REGRESA LPAREN expresion retn RPAREN . SEMICOL

    SEMICOL         shift and go to state 239


state 222

    (71) leeb -> RPAREN leen . SEMICOL

    SEMICOL         shift and go to state 240


state 223

    (73) leen -> empty .

    SEMICOL         reduce using rule 73 (leen -> empty .)
    ID              reduce using rule 73 (leen -> empty .)


state 224

    (72) leeb -> COMMA leen . id leeb
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK arreglo cte RBRACK arreglo2

    ID              shift and go to state 28

    id                             shift and go to state 241

state 225

    (74) escritura -> ESCRIBE LPAREN expresion prin1 escriturab .

    RBRACKET        reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ID              reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    REGRESA         reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LEE             reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    SI              reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    DESDE           reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LPAREN          reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    PLUS            reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MINUS           reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    NUMBER          reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEF            reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEC            reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    STRING          reduce using rule 74 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)


state 226

    (75) escriturab -> COMMA . expresion prin1 escriturab
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 242
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 227

    (76) escriturab -> RPAREN . SEMICOL

    SEMICOL         shift and go to state 243


state 228

    (78) decision -> SI LPAREN expresion pn1 RPAREN . ENTONCES decisionb

    ENTONCES        shift and go to state 244


state 229

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN . HAZ rcn2 bloque rcn3

    HAZ             shift and go to state 245


state 230

    (88) repeticionnocond -> DESDE rncns id EQUAL exp . rncn HASTA exp HACER bloque
    (90) rncn -> . empty
    (131) empty -> .

    HASTA           reduce using rule 131 (empty -> .)

    rncn                           shift and go to state 246
    empty                          shift and go to state 247

state 231

    (42) funcionc -> vars agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 42 (funcionc -> vars agregacont bloque reinicio funcion .)


state 232

    (64) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .

    RBRACKET        reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    ID              reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    REGRESA         reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    LEE             reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    ESCRIBE         reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    SI              reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    MIENTRAS        reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    DESDE           reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    LPAREN          reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    PLUS            reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    MINUS           reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    NUMBER          reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    CTEF            reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    CTEC            reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)
    STRING          reduce using rule 64 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 funcionvoidb .)


state 233

    (65) funcionvoidb -> COMMA . expresion fnvn2 funcionvoidb
    (98) expresion -> . exp
    (99) expresion -> . exp GTHAN exp
    (100) expresion -> . exp LTHAN exp
    (101) expresion -> . exp EQLOP exp
    (102) expresion -> . exp GEQUAL exp
    (103) expresion -> . exp LEQUAL exp
    (104) expresion -> . exp ABRACKET exp
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    expresion                      shift and go to state 248
    exp                            shift and go to state 99
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 234

    (66) funcionvoidb -> RPAREN . fnvn3 SEMICOL
    (69) fnvn3 -> . empty
    (131) empty -> .

    SEMICOL         reduce using rule 131 (empty -> .)

    fnvn3                          shift and go to state 249
    empty                          shift and go to state 250

state 235

    (114) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN . llamadafun3
    (121) llamadafun3 -> . empty
    (131) empty -> .

    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    RBRACK          reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    llamadafun3                    shift and go to state 251
    empty                          shift and go to state 252

state 236

    (52) asign -> LBRACK arrn expresion arrn2 RBRACK . arrn3
    (57) arrn3 -> . empty
    (131) empty -> .

    EQUAL           reduce using rule 131 (empty -> .)
    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    RBRACK          reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    arrn3                          shift and go to state 253
    empty                          shift and go to state 254

state 237

    (53) asign -> LBRACK arrn CTEI arrn2 RBRACK . arrn3
    (57) arrn3 -> . empty
    (131) empty -> .

    EQUAL           reduce using rule 131 (empty -> .)
    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    RBRACK          reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    arrn3                          shift and go to state 255
    empty                          shift and go to state 254

state 238

    (54) asign -> LBRACK arrn CTEC arrn2 RBRACK . arrn3
    (57) arrn3 -> . empty
    (131) empty -> .

    EQUAL           reduce using rule 131 (empty -> .)
    TIMES           reduce using rule 131 (empty -> .)
    DIVIDE          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    GTHAN           reduce using rule 131 (empty -> .)
    LTHAN           reduce using rule 131 (empty -> .)
    EQLOP           reduce using rule 131 (empty -> .)
    GEQUAL          reduce using rule 131 (empty -> .)
    LEQUAL          reduce using rule 131 (empty -> .)
    ABRACKET        reduce using rule 131 (empty -> .)
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)
    COMMA           reduce using rule 131 (empty -> .)
    SEMICOL         reduce using rule 131 (empty -> .)
    RBRACK          reduce using rule 131 (empty -> .)
    HASTA           reduce using rule 131 (empty -> .)
    HACER           reduce using rule 131 (empty -> .)

    arrn3                          shift and go to state 256
    empty                          shift and go to state 254

state 239

    (62) retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .

    RBRACKET        reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ID              reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    REGRESA         reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LEE             reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    SI              reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    DESDE           reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LPAREN          reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    PLUS            reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MINUS           reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    NUMBER          reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEF            reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEC            reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    STRING          reduce using rule 62 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)


state 240

    (71) leeb -> RPAREN leen SEMICOL .

    RBRACKET        reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    ID              reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    REGRESA         reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    LEE             reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    ESCRIBE         reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    SI              reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    MIENTRAS        reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    DESDE           reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    LPAREN          reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    PLUS            reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    MINUS           reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    NUMBER          reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    CTEF            reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    CTEC            reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)
    STRING          reduce using rule 71 (leeb -> RPAREN leen SEMICOL .)


state 241

    (72) leeb -> COMMA leen id . leeb
    (71) leeb -> . RPAREN leen SEMICOL
    (72) leeb -> . COMMA leen id leeb

    RPAREN          shift and go to state 202
    COMMA           shift and go to state 203

    leeb                           shift and go to state 257

state 242

    (75) escriturab -> COMMA expresion . prin1 escriturab
    (77) prin1 -> . empty
    (131) empty -> .

    COMMA           reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)

    prin1                          shift and go to state 258
    empty                          shift and go to state 205

state 243

    (76) escriturab -> RPAREN SEMICOL .

    RBRACKET        reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    ID              reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    REGRESA         reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    LEE             reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    SI              reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    DESDE           reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    LPAREN          reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    PLUS            reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    MINUS           reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    NUMBER          reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    CTEF            reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    CTEC            reduce using rule 76 (escriturab -> RPAREN SEMICOL .)
    STRING          reduce using rule 76 (escriturab -> RPAREN SEMICOL .)


state 244

    (78) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES . decisionb
    (80) decisionb -> . bloque pn2
    (81) decisionb -> . bloque SINO pn3 bloque pn2
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    decisionb                      shift and go to state 259
    bloque                         shift and go to state 260

state 245

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ . rcn2 bloque rcn3
    (86) rcn2 -> . empty
    (131) empty -> .

    LBRACKET        reduce using rule 131 (empty -> .)

    rcn2                           shift and go to state 261
    empty                          shift and go to state 262

state 246

    (88) repeticionnocond -> DESDE rncns id EQUAL exp rncn . HASTA exp HACER bloque

    HASTA           shift and go to state 263


state 247

    (90) rncn -> empty .

    HASTA           reduce using rule 90 (rncn -> empty .)


state 248

    (65) funcionvoidb -> COMMA expresion . fnvn2 funcionvoidb
    (68) fnvn2 -> . empty
    (131) empty -> .

    COMMA           reduce using rule 131 (empty -> .)
    RPAREN          reduce using rule 131 (empty -> .)

    fnvn2                          shift and go to state 264
    empty                          shift and go to state 214

state 249

    (66) funcionvoidb -> RPAREN fnvn3 . SEMICOL

    SEMICOL         shift and go to state 265


state 250

    (69) fnvn3 -> empty .

    SEMICOL         reduce using rule 69 (fnvn3 -> empty .)


state 251

    (114) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .

    TIMES           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DIVIDE          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    PLUS            reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MINUS           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GTHAN           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LTHAN           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    EQLOP           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GEQUAL          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEQUAL          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ABRACKET        reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACKET        reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ID              reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    REGRESA         reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEE             reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ESCRIBE         reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SI              reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MIENTRAS        reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DESDE           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LPAREN          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    NUMBER          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEF            reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEC            reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    STRING          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RPAREN          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SEMICOL         reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    COMMA           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACK          reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HASTA           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HACER           reduce using rule 114 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)


state 252

    (121) llamadafun3 -> empty .

    TIMES           reduce using rule 121 (llamadafun3 -> empty .)
    DIVIDE          reduce using rule 121 (llamadafun3 -> empty .)
    PLUS            reduce using rule 121 (llamadafun3 -> empty .)
    MINUS           reduce using rule 121 (llamadafun3 -> empty .)
    GTHAN           reduce using rule 121 (llamadafun3 -> empty .)
    LTHAN           reduce using rule 121 (llamadafun3 -> empty .)
    EQLOP           reduce using rule 121 (llamadafun3 -> empty .)
    GEQUAL          reduce using rule 121 (llamadafun3 -> empty .)
    LEQUAL          reduce using rule 121 (llamadafun3 -> empty .)
    ABRACKET        reduce using rule 121 (llamadafun3 -> empty .)
    RBRACKET        reduce using rule 121 (llamadafun3 -> empty .)
    ID              reduce using rule 121 (llamadafun3 -> empty .)
    REGRESA         reduce using rule 121 (llamadafun3 -> empty .)
    LEE             reduce using rule 121 (llamadafun3 -> empty .)
    ESCRIBE         reduce using rule 121 (llamadafun3 -> empty .)
    SI              reduce using rule 121 (llamadafun3 -> empty .)
    MIENTRAS        reduce using rule 121 (llamadafun3 -> empty .)
    DESDE           reduce using rule 121 (llamadafun3 -> empty .)
    LPAREN          reduce using rule 121 (llamadafun3 -> empty .)
    NUMBER          reduce using rule 121 (llamadafun3 -> empty .)
    CTEF            reduce using rule 121 (llamadafun3 -> empty .)
    CTEC            reduce using rule 121 (llamadafun3 -> empty .)
    STRING          reduce using rule 121 (llamadafun3 -> empty .)
    RPAREN          reduce using rule 121 (llamadafun3 -> empty .)
    SEMICOL         reduce using rule 121 (llamadafun3 -> empty .)
    COMMA           reduce using rule 121 (llamadafun3 -> empty .)
    RBRACK          reduce using rule 121 (llamadafun3 -> empty .)
    HASTA           reduce using rule 121 (llamadafun3 -> empty .)
    HACER           reduce using rule 121 (llamadafun3 -> empty .)


state 253

    (52) asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ID              reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    SI              reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 52 (asign -> LBRACK arrn expresion arrn2 RBRACK arrn3 .)


state 254

    (57) arrn3 -> empty .

    EQUAL           reduce using rule 57 (arrn3 -> empty .)
    TIMES           reduce using rule 57 (arrn3 -> empty .)
    DIVIDE          reduce using rule 57 (arrn3 -> empty .)
    PLUS            reduce using rule 57 (arrn3 -> empty .)
    MINUS           reduce using rule 57 (arrn3 -> empty .)
    GTHAN           reduce using rule 57 (arrn3 -> empty .)
    LTHAN           reduce using rule 57 (arrn3 -> empty .)
    EQLOP           reduce using rule 57 (arrn3 -> empty .)
    GEQUAL          reduce using rule 57 (arrn3 -> empty .)
    LEQUAL          reduce using rule 57 (arrn3 -> empty .)
    ABRACKET        reduce using rule 57 (arrn3 -> empty .)
    RBRACKET        reduce using rule 57 (arrn3 -> empty .)
    ID              reduce using rule 57 (arrn3 -> empty .)
    REGRESA         reduce using rule 57 (arrn3 -> empty .)
    LEE             reduce using rule 57 (arrn3 -> empty .)
    ESCRIBE         reduce using rule 57 (arrn3 -> empty .)
    SI              reduce using rule 57 (arrn3 -> empty .)
    MIENTRAS        reduce using rule 57 (arrn3 -> empty .)
    DESDE           reduce using rule 57 (arrn3 -> empty .)
    LPAREN          reduce using rule 57 (arrn3 -> empty .)
    NUMBER          reduce using rule 57 (arrn3 -> empty .)
    CTEF            reduce using rule 57 (arrn3 -> empty .)
    CTEC            reduce using rule 57 (arrn3 -> empty .)
    STRING          reduce using rule 57 (arrn3 -> empty .)
    RPAREN          reduce using rule 57 (arrn3 -> empty .)
    COMMA           reduce using rule 57 (arrn3 -> empty .)
    SEMICOL         reduce using rule 57 (arrn3 -> empty .)
    RBRACK          reduce using rule 57 (arrn3 -> empty .)
    HASTA           reduce using rule 57 (arrn3 -> empty .)
    HACER           reduce using rule 57 (arrn3 -> empty .)


state 255

    (53) asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ID              reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    SI              reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 53 (asign -> LBRACK arrn CTEI arrn2 RBRACK arrn3 .)


state 256

    (54) asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .

    EQUAL           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    TIMES           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    DIVIDE          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    PLUS            reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    MINUS           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    GTHAN           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LTHAN           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    EQLOP           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    GEQUAL          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LEQUAL          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ABRACKET        reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RBRACKET        reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ID              reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    REGRESA         reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LEE             reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    ESCRIBE         reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    SI              reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    MIENTRAS        reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    DESDE           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    LPAREN          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    NUMBER          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    CTEF            reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    CTEC            reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    STRING          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RPAREN          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    COMMA           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    SEMICOL         reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    RBRACK          reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    HASTA           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)
    HACER           reduce using rule 54 (asign -> LBRACK arrn CTEC arrn2 RBRACK arrn3 .)


state 257

    (72) leeb -> COMMA leen id leeb .

    RBRACKET        reduce using rule 72 (leeb -> COMMA leen id leeb .)
    ID              reduce using rule 72 (leeb -> COMMA leen id leeb .)
    REGRESA         reduce using rule 72 (leeb -> COMMA leen id leeb .)
    LEE             reduce using rule 72 (leeb -> COMMA leen id leeb .)
    ESCRIBE         reduce using rule 72 (leeb -> COMMA leen id leeb .)
    SI              reduce using rule 72 (leeb -> COMMA leen id leeb .)
    MIENTRAS        reduce using rule 72 (leeb -> COMMA leen id leeb .)
    DESDE           reduce using rule 72 (leeb -> COMMA leen id leeb .)
    LPAREN          reduce using rule 72 (leeb -> COMMA leen id leeb .)
    PLUS            reduce using rule 72 (leeb -> COMMA leen id leeb .)
    MINUS           reduce using rule 72 (leeb -> COMMA leen id leeb .)
    NUMBER          reduce using rule 72 (leeb -> COMMA leen id leeb .)
    CTEF            reduce using rule 72 (leeb -> COMMA leen id leeb .)
    CTEC            reduce using rule 72 (leeb -> COMMA leen id leeb .)
    STRING          reduce using rule 72 (leeb -> COMMA leen id leeb .)


state 258

    (75) escriturab -> COMMA expresion prin1 . escriturab
    (75) escriturab -> . COMMA expresion prin1 escriturab
    (76) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 226
    RPAREN          shift and go to state 227

    escriturab                     shift and go to state 266

state 259

    (78) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .

    RBRACKET        reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ID              reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    REGRESA         reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LEE             reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ESCRIBE         reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    SI              reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MIENTRAS        reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    DESDE           reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LPAREN          reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    PLUS            reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MINUS           reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    NUMBER          reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEF            reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEC            reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    STRING          reduce using rule 78 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)


state 260

    (80) decisionb -> bloque . pn2
    (81) decisionb -> bloque . SINO pn3 bloque pn2
    (82) pn2 -> . empty
    (131) empty -> .

    SINO            shift and go to state 268
    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    pn2                            shift and go to state 267
    empty                          shift and go to state 269

state 261

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 . bloque rcn3
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 270

state 262

    (86) rcn2 -> empty .

    LBRACKET        reduce using rule 86 (rcn2 -> empty .)


state 263

    (88) repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA . exp HACER bloque
    (105) exp -> . termino
    (106) exp -> . termino expb
    (109) termino -> . factor
    (110) termino -> . factor terminob
    (113) factor -> . LPAREN expresion RPAREN
    (114) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (115) factor -> . PLUS cte
    (116) factor -> . MINUS cte
    (117) factor -> . cte
    (118) factor -> . ID asign
    (91) cte -> . ID
    (92) cte -> . NUMBER saveconst
    (93) cte -> . CTEF saveconst
    (94) cte -> . CTEC
    (95) cte -> . STRING savestringconst

    LPAREN          shift and go to state 92
    ID              shift and go to state 126
    PLUS            shift and go to state 102
    MINUS           shift and go to state 104
    NUMBER          shift and go to state 76
    CTEF            shift and go to state 77
    CTEC            shift and go to state 78
    STRING          shift and go to state 79

    exp                            shift and go to state 271
    termino                        shift and go to state 100
    factor                         shift and go to state 101
    cte                            shift and go to state 103

state 264

    (65) funcionvoidb -> COMMA expresion fnvn2 . funcionvoidb
    (65) funcionvoidb -> . COMMA expresion fnvn2 funcionvoidb
    (66) funcionvoidb -> . RPAREN fnvn3 SEMICOL

    COMMA           shift and go to state 233
    RPAREN          shift and go to state 234

    funcionvoidb                   shift and go to state 272

state 265

    (66) funcionvoidb -> RPAREN fnvn3 SEMICOL .

    RBRACKET        reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    ID              reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    REGRESA         reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    LEE             reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    ESCRIBE         reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    SI              reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    MIENTRAS        reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    DESDE           reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    LPAREN          reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    PLUS            reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    MINUS           reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    NUMBER          reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    CTEF            reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    CTEC            reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)
    STRING          reduce using rule 66 (funcionvoidb -> RPAREN fnvn3 SEMICOL .)


state 266

    (75) escriturab -> COMMA expresion prin1 escriturab .

    RBRACKET        reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    ID              reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    REGRESA         reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    LEE             reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    SI              reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    DESDE           reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    LPAREN          reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    PLUS            reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    MINUS           reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    NUMBER          reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEF            reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEC            reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)
    STRING          reduce using rule 75 (escriturab -> COMMA expresion prin1 escriturab .)


state 267

    (80) decisionb -> bloque pn2 .

    RBRACKET        reduce using rule 80 (decisionb -> bloque pn2 .)
    ID              reduce using rule 80 (decisionb -> bloque pn2 .)
    REGRESA         reduce using rule 80 (decisionb -> bloque pn2 .)
    LEE             reduce using rule 80 (decisionb -> bloque pn2 .)
    ESCRIBE         reduce using rule 80 (decisionb -> bloque pn2 .)
    SI              reduce using rule 80 (decisionb -> bloque pn2 .)
    MIENTRAS        reduce using rule 80 (decisionb -> bloque pn2 .)
    DESDE           reduce using rule 80 (decisionb -> bloque pn2 .)
    LPAREN          reduce using rule 80 (decisionb -> bloque pn2 .)
    PLUS            reduce using rule 80 (decisionb -> bloque pn2 .)
    MINUS           reduce using rule 80 (decisionb -> bloque pn2 .)
    NUMBER          reduce using rule 80 (decisionb -> bloque pn2 .)
    CTEF            reduce using rule 80 (decisionb -> bloque pn2 .)
    CTEC            reduce using rule 80 (decisionb -> bloque pn2 .)
    STRING          reduce using rule 80 (decisionb -> bloque pn2 .)


state 268

    (81) decisionb -> bloque SINO . pn3 bloque pn2
    (83) pn3 -> . empty
    (131) empty -> .

    LBRACKET        reduce using rule 131 (empty -> .)

    pn3                            shift and go to state 273
    empty                          shift and go to state 274

state 269

    (82) pn2 -> empty .

    RBRACKET        reduce using rule 82 (pn2 -> empty .)
    ID              reduce using rule 82 (pn2 -> empty .)
    REGRESA         reduce using rule 82 (pn2 -> empty .)
    LEE             reduce using rule 82 (pn2 -> empty .)
    ESCRIBE         reduce using rule 82 (pn2 -> empty .)
    SI              reduce using rule 82 (pn2 -> empty .)
    MIENTRAS        reduce using rule 82 (pn2 -> empty .)
    DESDE           reduce using rule 82 (pn2 -> empty .)
    LPAREN          reduce using rule 82 (pn2 -> empty .)
    PLUS            reduce using rule 82 (pn2 -> empty .)
    MINUS           reduce using rule 82 (pn2 -> empty .)
    NUMBER          reduce using rule 82 (pn2 -> empty .)
    CTEF            reduce using rule 82 (pn2 -> empty .)
    CTEC            reduce using rule 82 (pn2 -> empty .)
    STRING          reduce using rule 82 (pn2 -> empty .)


state 270

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque . rcn3
    (87) rcn3 -> . empty
    (131) empty -> .

    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    rcn3                           shift and go to state 275
    empty                          shift and go to state 276

state 271

    (88) repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp . HACER bloque

    HACER           shift and go to state 277


state 272

    (65) funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .

    RBRACKET        reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    ID              reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    REGRESA         reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    LEE             reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    ESCRIBE         reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    SI              reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    MIENTRAS        reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    DESDE           reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    LPAREN          reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    PLUS            reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    MINUS           reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    NUMBER          reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    CTEF            reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    CTEC            reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)
    STRING          reduce using rule 65 (funcionvoidb -> COMMA expresion fnvn2 funcionvoidb .)


state 273

    (81) decisionb -> bloque SINO pn3 . bloque pn2
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 278

state 274

    (83) pn3 -> empty .

    LBRACKET        reduce using rule 83 (pn3 -> empty .)


state 275

    (84) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .

    RBRACKET        reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ID              reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    REGRESA         reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LEE             reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ESCRIBE         reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    SI              reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MIENTRAS        reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    DESDE           reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LPAREN          reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    PLUS            reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MINUS           reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    NUMBER          reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEF            reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEC            reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    STRING          reduce using rule 84 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)


state 276

    (87) rcn3 -> empty .

    RBRACKET        reduce using rule 87 (rcn3 -> empty .)
    ID              reduce using rule 87 (rcn3 -> empty .)
    REGRESA         reduce using rule 87 (rcn3 -> empty .)
    LEE             reduce using rule 87 (rcn3 -> empty .)
    ESCRIBE         reduce using rule 87 (rcn3 -> empty .)
    SI              reduce using rule 87 (rcn3 -> empty .)
    MIENTRAS        reduce using rule 87 (rcn3 -> empty .)
    DESDE           reduce using rule 87 (rcn3 -> empty .)
    LPAREN          reduce using rule 87 (rcn3 -> empty .)
    PLUS            reduce using rule 87 (rcn3 -> empty .)
    MINUS           reduce using rule 87 (rcn3 -> empty .)
    NUMBER          reduce using rule 87 (rcn3 -> empty .)
    CTEF            reduce using rule 87 (rcn3 -> empty .)
    CTEC            reduce using rule 87 (rcn3 -> empty .)
    STRING          reduce using rule 87 (rcn3 -> empty .)


state 277

    (88) repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER . bloque
    (47) bloque -> . LBRACKET estatuto bloqueb
    (48) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 63

    bloque                         shift and go to state 279

state 278

    (81) decisionb -> bloque SINO pn3 bloque . pn2
    (82) pn2 -> . empty
    (131) empty -> .

    RBRACKET        reduce using rule 131 (empty -> .)
    ID              reduce using rule 131 (empty -> .)
    REGRESA         reduce using rule 131 (empty -> .)
    LEE             reduce using rule 131 (empty -> .)
    ESCRIBE         reduce using rule 131 (empty -> .)
    SI              reduce using rule 131 (empty -> .)
    MIENTRAS        reduce using rule 131 (empty -> .)
    DESDE           reduce using rule 131 (empty -> .)
    LPAREN          reduce using rule 131 (empty -> .)
    PLUS            reduce using rule 131 (empty -> .)
    MINUS           reduce using rule 131 (empty -> .)
    NUMBER          reduce using rule 131 (empty -> .)
    CTEF            reduce using rule 131 (empty -> .)
    CTEC            reduce using rule 131 (empty -> .)
    STRING          reduce using rule 131 (empty -> .)

    pn2                            shift and go to state 280
    empty                          shift and go to state 269

state 279

    (88) repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .

    RBRACKET        reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    ID              reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    REGRESA         reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    LEE             reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    ESCRIBE         reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    SI              reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    MIENTRAS        reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    DESDE           reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    LPAREN          reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    PLUS            reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    MINUS           reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    NUMBER          reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    CTEF            reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    CTEC            reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)
    STRING          reduce using rule 88 (repeticionnocond -> DESDE rncns id EQUAL exp rncn HASTA exp HACER bloque .)


state 280

    (81) decisionb -> bloque SINO pn3 bloque pn2 .

    RBRACKET        reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ID              reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    REGRESA         reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LEE             reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ESCRIBE         reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    SI              reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MIENTRAS        reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    DESDE           reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LPAREN          reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    PLUS            reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MINUS           reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    NUMBER          reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEF            reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEC            reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)
    STRING          reduce using rule 81 (decisionb -> bloque SINO pn3 bloque pn2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 91 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 126 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 165 resolved using rule (fnvn1 -> empty)
WARNING: rejected rule (llamadafun -> empty) in state 165
WARNING: reduce/reduce conflict in state 197 resolved using rule (cte -> CTEC)
WARNING: rejected rule (empty -> <empty>) in state 197
