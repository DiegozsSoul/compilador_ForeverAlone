Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COLON
    COMMENT
    CTES

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAMA agregarfuncmain ID SEMICOL programab
Rule 2     programab -> vars funcion programac
Rule 3     programab -> programac
Rule 4     programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque
Rule 5     prinn -> empty
Rule 6     agregarfuncmain2 -> <empty>
Rule 7     agregarfuncmain -> <empty>
Rule 8     id -> ID agregavar
Rule 9     id -> ID agregavar LBRACK cte RBRACK
Rule 10    tipovar -> INT agregatipo
Rule 11    tipovar -> FLOAT agregatipo
Rule 12    tipovar -> CHAR agregatipo
Rule 13    tipovarfunc -> INT agregatipo
Rule 14    tipovarfunc -> FLOAT agregatipo
Rule 15    tipovarfunc -> CHAR agregatipo
Rule 16    tipofun -> INT
Rule 17    tipofun -> FLOAT
Rule 18    tipofun -> CHAR
Rule 19    tipofun -> VOID
Rule 20    agregatipo -> <empty>
Rule 21    vars -> VAR varsb
Rule 22    varsb -> tipovar varsc
Rule 23    varsb -> contVReset empty
Rule 24    varsc -> id COMMA varsc
Rule 25    varsc -> id SEMICOL varsb
Rule 26    varsc -> empty
Rule 27    contVReset -> empty
Rule 28    varsfunc -> tipovarfunc varsfuncb
Rule 29    varsfuncb -> id COMMA varsfuncb
Rule 30    varsfuncb -> varsfunc
Rule 31    varsfuncb -> id
Rule 32    funcion -> FUNCION aux2 ID LPAREN funcionb
Rule 33    funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
Rule 34    funcion -> empty
Rule 35    aux2 -> empty
Rule 36    agregafunc -> empty
Rule 37    funcionb -> RPAREN testeru funcionc
Rule 38    funcionb -> varsfunc RPAREN testeru funcionc
Rule 39    testeru -> empty
Rule 40    funcionc -> vars agregacont bloque reinicio funcion
Rule 41    funcionc -> agregacont bloque reinicio funcion
Rule 42    funcionc -> empty
Rule 43    agregacont -> empty
Rule 44    reinicio -> empty
Rule 45    bloque -> LBRACKET estatuto bloqueb
Rule 46    bloque -> LBRACKET RBRACKET
Rule 47    bloqueb -> RBRACKET helper
Rule 48    bloqueb -> estatuto bloqueb
Rule 49    helper -> empty
Rule 50    asign -> LBRACK expresion RBRACK
Rule 51    asign -> LBRACK CTEI RBRACK
Rule 52    asign -> LBRACK CTEC RBRACK
Rule 53    asignacion -> ID EQUAL asignacionb
Rule 54    asignacion -> ID asign EQUAL asignacionb
Rule 55    asignacionb -> expresion SEMICOL
Rule 56    asignacionb -> ID asign SEMICOL
Rule 57    retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL
Rule 58    retn -> empty
Rule 59    funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
Rule 60    fnvn1 -> empty
Rule 61    fnvn2 -> empty
Rule 62    fnvn3 -> empty
Rule 63    lee -> LEE LPAREN id leeb
Rule 64    leeb -> RPAREN SEMICOL
Rule 65    leeb -> COMMA id leeb
Rule 66    escritura -> ESCRIBE LPAREN expresion prin1 escriturab
Rule 67    escriturab -> COMMA expresion prin1 escriturab
Rule 68    escriturab -> RPAREN SEMICOL
Rule 69    prin1 -> empty
Rule 70    decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
Rule 71    pn1 -> empty
Rule 72    decisionb -> bloque pn2
Rule 73    decisionb -> bloque SINO pn3 bloque pn2
Rule 74    pn2 -> empty
Rule 75    pn3 -> empty
Rule 76    repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
Rule 77    rcn1 -> empty
Rule 78    rcn2 -> empty
Rule 79    rcn3 -> empty
Rule 80    repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque
Rule 81    cte -> ID
Rule 82    cte -> NUMBER saveconst
Rule 83    cte -> CTEF
Rule 84    cte -> CTEC
Rule 85    cte -> STRING
Rule 86    saveconst -> empty
Rule 87    expresion -> exp
Rule 88    expresion -> exp GTHAN exp
Rule 89    expresion -> exp LTHAN exp
Rule 90    expresion -> exp EQLOP exp
Rule 91    expresion -> exp GEQUAL exp
Rule 92    expresion -> exp LEQUAL exp
Rule 93    expresion -> exp ABRACKET exp
Rule 94    exp -> termino
Rule 95    exp -> termino expb
Rule 96    expb -> PLUS exp
Rule 97    expb -> MINUS exp
Rule 98    termino -> factor
Rule 99    termino -> factor terminob
Rule 100   terminob -> TIMES termino
Rule 101   terminob -> DIVIDE termino
Rule 102   factor -> LPAREN expresion RPAREN
Rule 103   factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
Rule 104   factor -> PLUS cte
Rule 105   factor -> MINUS cte
Rule 106   factor -> cte
Rule 107   factor -> ID asign
Rule 108   llamadafun -> empty
Rule 109   llamadafun2 -> empty
Rule 110   llamadafun3 -> empty
Rule 111   estatuto -> asignacion
Rule 112   estatuto -> funcionvoid
Rule 113   estatuto -> retorno
Rule 114   estatuto -> lee
Rule 115   estatuto -> escritura
Rule 116   estatuto -> decision
Rule 117   estatuto -> repeticioncond
Rule 118   estatuto -> repeticionnocond
Rule 119   estatuto -> expresion
Rule 120   empty -> <empty>
Rule 121   agregavar -> <empty>

Terminals, with rules where they appear

ABRACKET             : 93
CHAR                 : 12 15 18
COLON                : 
COMMA                : 24 29 65 67
COMMENT              : 
CTEC                 : 52 84
CTEF                 : 83
CTEI                 : 51
CTES                 : 
DESDE                : 80
DIVIDE               : 101
ENTONCES             : 70
EQLOP                : 90
EQUAL                : 53 54 80
ESCRIBE              : 66
FLOAT                : 11 14 17
FUNCION              : 32 33
GEQUAL               : 91
GTHAN                : 88
HACER                : 80
HASTA                : 80
HAZ                  : 76
ID                   : 1 8 9 32 33 53 54 56 59 81 103 107
INT                  : 10 13 16
LBRACK               : 9 50 51 52
LBRACKET             : 45 46
LEE                  : 63
LEQUAL               : 92
LPAREN               : 4 32 33 57 59 63 66 70 76 102 103
LTHAN                : 89
MIENTRAS             : 76
MINUS                : 97 105
NUMBER               : 82
PLUS                 : 96 104
PRINCIPAL            : 4
PROGRAMA             : 1
RBRACK               : 9 50 51 52
RBRACKET             : 46 47
REGRESA              : 57
RPAREN               : 4 37 38 57 59 64 68 70 76 102 103
SEMICOL              : 1 25 55 56 57 59 64 68
SI                   : 70
SINO                 : 73
STRING               : 85
TIMES                : 100
VAR                  : 21
VOID                 : 19
error                : 

Nonterminals, with rules where they appear

agregacont           : 40 41
agregafunc           : 33
agregarfuncmain      : 1
agregarfuncmain2     : 4
agregatipo           : 10 11 12 13 14 15
agregavar            : 8 9
asign                : 54 56 107
asignacion           : 111
asignacionb          : 53 54
aux2                 : 32 33
bloque               : 4 40 41 72 73 73 76 80
bloqueb              : 45 48
contVReset           : 23
cte                  : 9 104 105 106
decision             : 116
decisionb            : 70
empty                : 5 23 26 27 34 35 36 39 42 43 44 49 58 60 61 62 69 71 74 75 77 78 79 86 108 109 110
escritura            : 115
escriturab           : 66 67
estatuto             : 45 48
exp                  : 80 80 87 88 88 89 89 90 90 91 91 92 92 93 93 96 97
expb                 : 95
expresion            : 50 55 57 59 66 67 70 76 102 103 119
factor               : 98 99
fnvn1                : 59
fnvn2                : 59
fnvn3                : 59
funcion              : 2 40 41
funcionb             : 32 33
funcionc             : 37 38
funcionvoid          : 112
helper               : 47
id                   : 24 25 29 31 63 65 80
lee                  : 114
leeb                 : 63 65
llamadafun           : 103
llamadafun2          : 103
llamadafun3          : 103
pn1                  : 70
pn2                  : 72 73
pn3                  : 73
prin1                : 66 67
prinn                : 4
programa             : 0
programab            : 1
programac            : 2 3
rcn1                 : 76
rcn2                 : 76
rcn3                 : 76
reinicio             : 40 41
repeticioncond       : 117
repeticionnocond     : 118
retn                 : 57
retorno              : 113
saveconst            : 82
termino              : 94 95 100 101
terminob             : 99
testeru              : 37 38
tipofun              : 33
tipovar              : 22
tipovarfunc          : 28
vars                 : 2 40
varsb                : 21 25
varsc                : 22 24
varsfunc             : 30 38
varsfuncb            : 28 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAMA agregarfuncmain ID SEMICOL programab

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> PROGRAMA . agregarfuncmain ID SEMICOL programab
    (7) agregarfuncmain -> .

    ID              reduce using rule 7 (agregarfuncmain -> .)

    agregarfuncmain                shift and go to state 3

state 3

    (1) programa -> PROGRAMA agregarfuncmain . ID SEMICOL programab

    ID              shift and go to state 4


state 4

    (1) programa -> PROGRAMA agregarfuncmain ID . SEMICOL programab

    SEMICOL         shift and go to state 5


state 5

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL . programab
    (2) programab -> . vars funcion programac
    (3) programab -> . programac
    (21) vars -> . VAR varsb
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque

    VAR             shift and go to state 9
    PRINCIPAL       shift and go to state 10

    programab                      shift and go to state 6
    vars                           shift and go to state 7
    programac                      shift and go to state 8

state 6

    (1) programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .

    $end            reduce using rule 1 (programa -> PROGRAMA agregarfuncmain ID SEMICOL programab .)


state 7

    (2) programab -> vars . funcion programac
    (32) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (33) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (34) funcion -> . empty
    (120) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 120 (empty -> .)

    funcion                        shift and go to state 11
    empty                          shift and go to state 13

state 8

    (3) programab -> programac .

    $end            reduce using rule 3 (programab -> programac .)


state 9

    (21) vars -> VAR . varsb
    (22) varsb -> . tipovar varsc
    (23) varsb -> . contVReset empty
    (10) tipovar -> . INT agregatipo
    (11) tipovar -> . FLOAT agregatipo
    (12) tipovar -> . CHAR agregatipo
    (27) contVReset -> . empty
    (120) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    varsb                          shift and go to state 14
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 10

    (4) programac -> PRINCIPAL . agregarfuncmain2 LPAREN RPAREN prinn bloque
    (6) agregarfuncmain2 -> .

    LPAREN          reduce using rule 6 (agregarfuncmain2 -> .)

    agregarfuncmain2               shift and go to state 21

state 11

    (2) programab -> vars funcion . programac
    (4) programac -> . PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque

    PRINCIPAL       shift and go to state 10

    programac                      shift and go to state 22

state 12

    (32) funcion -> FUNCION . aux2 ID LPAREN funcionb
    (33) funcion -> FUNCION . aux2 tipofun ID agregafunc LPAREN funcionb
    (35) aux2 -> . empty
    (120) empty -> .

    ID              reduce using rule 120 (empty -> .)
    INT             reduce using rule 120 (empty -> .)
    FLOAT           reduce using rule 120 (empty -> .)
    CHAR            reduce using rule 120 (empty -> .)
    VOID            reduce using rule 120 (empty -> .)

    aux2                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (34) funcion -> empty .

    PRINCIPAL       reduce using rule 34 (funcion -> empty .)


state 14

    (21) vars -> VAR varsb .

    FUNCION         reduce using rule 21 (vars -> VAR varsb .)
    PRINCIPAL       reduce using rule 21 (vars -> VAR varsb .)
    LBRACKET        reduce using rule 21 (vars -> VAR varsb .)


state 15

    (22) varsb -> tipovar . varsc
    (24) varsc -> . id COMMA varsc
    (25) varsc -> . id SEMICOL varsb
    (26) varsc -> . empty
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK
    (120) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    varsc                          shift and go to state 25
    id                             shift and go to state 26
    empty                          shift and go to state 27

state 16

    (23) varsb -> contVReset . empty
    (120) empty -> .

    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    empty                          shift and go to state 29

state 17

    (27) contVReset -> empty .

    FUNCION         reduce using rule 27 (contVReset -> empty .)
    PRINCIPAL       reduce using rule 27 (contVReset -> empty .)
    LBRACKET        reduce using rule 27 (contVReset -> empty .)


state 18

    (10) tipovar -> INT . agregatipo
    (20) agregatipo -> .

    ID              reduce using rule 20 (agregatipo -> .)
    FUNCION         reduce using rule 20 (agregatipo -> .)
    PRINCIPAL       reduce using rule 20 (agregatipo -> .)
    LBRACKET        reduce using rule 20 (agregatipo -> .)

    agregatipo                     shift and go to state 30

state 19

    (11) tipovar -> FLOAT . agregatipo
    (20) agregatipo -> .

    ID              reduce using rule 20 (agregatipo -> .)
    FUNCION         reduce using rule 20 (agregatipo -> .)
    PRINCIPAL       reduce using rule 20 (agregatipo -> .)
    LBRACKET        reduce using rule 20 (agregatipo -> .)

    agregatipo                     shift and go to state 31

state 20

    (12) tipovar -> CHAR . agregatipo
    (20) agregatipo -> .

    ID              reduce using rule 20 (agregatipo -> .)
    FUNCION         reduce using rule 20 (agregatipo -> .)
    PRINCIPAL       reduce using rule 20 (agregatipo -> .)
    LBRACKET        reduce using rule 20 (agregatipo -> .)

    agregatipo                     shift and go to state 32

state 21

    (4) programac -> PRINCIPAL agregarfuncmain2 . LPAREN RPAREN prinn bloque

    LPAREN          shift and go to state 33


state 22

    (2) programab -> vars funcion programac .

    $end            reduce using rule 2 (programab -> vars funcion programac .)


state 23

    (32) funcion -> FUNCION aux2 . ID LPAREN funcionb
    (33) funcion -> FUNCION aux2 . tipofun ID agregafunc LPAREN funcionb
    (16) tipofun -> . INT
    (17) tipofun -> . FLOAT
    (18) tipofun -> . CHAR
    (19) tipofun -> . VOID

    ID              shift and go to state 34
    INT             shift and go to state 36
    FLOAT           shift and go to state 37
    CHAR            shift and go to state 38
    VOID            shift and go to state 39

    tipofun                        shift and go to state 35

state 24

    (35) aux2 -> empty .

    ID              reduce using rule 35 (aux2 -> empty .)
    INT             reduce using rule 35 (aux2 -> empty .)
    FLOAT           reduce using rule 35 (aux2 -> empty .)
    CHAR            reduce using rule 35 (aux2 -> empty .)
    VOID            reduce using rule 35 (aux2 -> empty .)


state 25

    (22) varsb -> tipovar varsc .

    FUNCION         reduce using rule 22 (varsb -> tipovar varsc .)
    PRINCIPAL       reduce using rule 22 (varsb -> tipovar varsc .)
    LBRACKET        reduce using rule 22 (varsb -> tipovar varsc .)


state 26

    (24) varsc -> id . COMMA varsc
    (25) varsc -> id . SEMICOL varsb

    COMMA           shift and go to state 40
    SEMICOL         shift and go to state 41


state 27

    (26) varsc -> empty .

    FUNCION         reduce using rule 26 (varsc -> empty .)
    PRINCIPAL       reduce using rule 26 (varsc -> empty .)
    LBRACKET        reduce using rule 26 (varsc -> empty .)


state 28

    (8) id -> ID . agregavar
    (9) id -> ID . agregavar LBRACK cte RBRACK
    (121) agregavar -> .

    LBRACK          reduce using rule 121 (agregavar -> .)
    COMMA           reduce using rule 121 (agregavar -> .)
    SEMICOL         reduce using rule 121 (agregavar -> .)
    RPAREN          reduce using rule 121 (agregavar -> .)
    EQUAL           reduce using rule 121 (agregavar -> .)

    agregavar                      shift and go to state 42

state 29

    (23) varsb -> contVReset empty .

    FUNCION         reduce using rule 23 (varsb -> contVReset empty .)
    PRINCIPAL       reduce using rule 23 (varsb -> contVReset empty .)
    LBRACKET        reduce using rule 23 (varsb -> contVReset empty .)


state 30

    (10) tipovar -> INT agregatipo .

    ID              reduce using rule 10 (tipovar -> INT agregatipo .)
    FUNCION         reduce using rule 10 (tipovar -> INT agregatipo .)
    PRINCIPAL       reduce using rule 10 (tipovar -> INT agregatipo .)
    LBRACKET        reduce using rule 10 (tipovar -> INT agregatipo .)


state 31

    (11) tipovar -> FLOAT agregatipo .

    ID              reduce using rule 11 (tipovar -> FLOAT agregatipo .)
    FUNCION         reduce using rule 11 (tipovar -> FLOAT agregatipo .)
    PRINCIPAL       reduce using rule 11 (tipovar -> FLOAT agregatipo .)
    LBRACKET        reduce using rule 11 (tipovar -> FLOAT agregatipo .)


state 32

    (12) tipovar -> CHAR agregatipo .

    ID              reduce using rule 12 (tipovar -> CHAR agregatipo .)
    FUNCION         reduce using rule 12 (tipovar -> CHAR agregatipo .)
    PRINCIPAL       reduce using rule 12 (tipovar -> CHAR agregatipo .)
    LBRACKET        reduce using rule 12 (tipovar -> CHAR agregatipo .)


state 33

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN . RPAREN prinn bloque

    RPAREN          shift and go to state 43


state 34

    (32) funcion -> FUNCION aux2 ID . LPAREN funcionb

    LPAREN          shift and go to state 44


state 35

    (33) funcion -> FUNCION aux2 tipofun . ID agregafunc LPAREN funcionb

    ID              shift and go to state 45


state 36

    (16) tipofun -> INT .

    ID              reduce using rule 16 (tipofun -> INT .)


state 37

    (17) tipofun -> FLOAT .

    ID              reduce using rule 17 (tipofun -> FLOAT .)


state 38

    (18) tipofun -> CHAR .

    ID              reduce using rule 18 (tipofun -> CHAR .)


state 39

    (19) tipofun -> VOID .

    ID              reduce using rule 19 (tipofun -> VOID .)


state 40

    (24) varsc -> id COMMA . varsc
    (24) varsc -> . id COMMA varsc
    (25) varsc -> . id SEMICOL varsb
    (26) varsc -> . empty
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK
    (120) empty -> .

    ID              shift and go to state 28
    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    id                             shift and go to state 26
    varsc                          shift and go to state 46
    empty                          shift and go to state 27

state 41

    (25) varsc -> id SEMICOL . varsb
    (22) varsb -> . tipovar varsc
    (23) varsb -> . contVReset empty
    (10) tipovar -> . INT agregatipo
    (11) tipovar -> . FLOAT agregatipo
    (12) tipovar -> . CHAR agregatipo
    (27) contVReset -> . empty
    (120) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    CHAR            shift and go to state 20
    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    varsb                          shift and go to state 47
    tipovar                        shift and go to state 15
    contVReset                     shift and go to state 16
    empty                          shift and go to state 17

state 42

    (8) id -> ID agregavar .
    (9) id -> ID agregavar . LBRACK cte RBRACK

    COMMA           reduce using rule 8 (id -> ID agregavar .)
    SEMICOL         reduce using rule 8 (id -> ID agregavar .)
    RPAREN          reduce using rule 8 (id -> ID agregavar .)
    EQUAL           reduce using rule 8 (id -> ID agregavar .)
    LBRACK          shift and go to state 48


state 43

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN . prinn bloque
    (5) prinn -> . empty
    (120) empty -> .

    LBRACKET        reduce using rule 120 (empty -> .)

    prinn                          shift and go to state 49
    empty                          shift and go to state 50

state 44

    (32) funcion -> FUNCION aux2 ID LPAREN . funcionb
    (37) funcionb -> . RPAREN testeru funcionc
    (38) funcionb -> . varsfunc RPAREN testeru funcionc
    (28) varsfunc -> . tipovarfunc varsfuncb
    (13) tipovarfunc -> . INT agregatipo
    (14) tipovarfunc -> . FLOAT agregatipo
    (15) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 51
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 45

    (33) funcion -> FUNCION aux2 tipofun ID . agregafunc LPAREN funcionb
    (36) agregafunc -> . empty
    (120) empty -> .

    LPAREN          reduce using rule 120 (empty -> .)

    agregafunc                     shift and go to state 58
    empty                          shift and go to state 59

state 46

    (24) varsc -> id COMMA varsc .

    FUNCION         reduce using rule 24 (varsc -> id COMMA varsc .)
    PRINCIPAL       reduce using rule 24 (varsc -> id COMMA varsc .)
    LBRACKET        reduce using rule 24 (varsc -> id COMMA varsc .)


state 47

    (25) varsc -> id SEMICOL varsb .

    FUNCION         reduce using rule 25 (varsc -> id SEMICOL varsb .)
    PRINCIPAL       reduce using rule 25 (varsc -> id SEMICOL varsb .)
    LBRACKET        reduce using rule 25 (varsc -> id SEMICOL varsb .)


state 48

    (9) id -> ID agregavar LBRACK . cte RBRACK
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    ID              shift and go to state 60
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    cte                            shift and go to state 61

state 49

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn . bloque
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 66

state 50

    (5) prinn -> empty .

    LBRACKET        reduce using rule 5 (prinn -> empty .)


state 51

    (32) funcion -> FUNCION aux2 ID LPAREN funcionb .

    PRINCIPAL       reduce using rule 32 (funcion -> FUNCION aux2 ID LPAREN funcionb .)


state 52

    (37) funcionb -> RPAREN . testeru funcionc
    (39) testeru -> . empty
    (120) empty -> .

    VAR             reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)

    testeru                        shift and go to state 68
    empty                          shift and go to state 69

state 53

    (38) funcionb -> varsfunc . RPAREN testeru funcionc

    RPAREN          shift and go to state 70


state 54

    (28) varsfunc -> tipovarfunc . varsfuncb
    (29) varsfuncb -> . id COMMA varsfuncb
    (30) varsfuncb -> . varsfunc
    (31) varsfuncb -> . id
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK
    (28) varsfunc -> . tipovarfunc varsfuncb
    (13) tipovarfunc -> . INT agregatipo
    (14) tipovarfunc -> . FLOAT agregatipo
    (15) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    tipovarfunc                    shift and go to state 54
    varsfuncb                      shift and go to state 71
    id                             shift and go to state 72
    varsfunc                       shift and go to state 73

state 55

    (13) tipovarfunc -> INT . agregatipo
    (20) agregatipo -> .

    ID              reduce using rule 20 (agregatipo -> .)
    INT             reduce using rule 20 (agregatipo -> .)
    FLOAT           reduce using rule 20 (agregatipo -> .)
    CHAR            reduce using rule 20 (agregatipo -> .)

    agregatipo                     shift and go to state 74

state 56

    (14) tipovarfunc -> FLOAT . agregatipo
    (20) agregatipo -> .

    ID              reduce using rule 20 (agregatipo -> .)
    INT             reduce using rule 20 (agregatipo -> .)
    FLOAT           reduce using rule 20 (agregatipo -> .)
    CHAR            reduce using rule 20 (agregatipo -> .)

    agregatipo                     shift and go to state 75

state 57

    (15) tipovarfunc -> CHAR . agregatipo
    (20) agregatipo -> .

    ID              reduce using rule 20 (agregatipo -> .)
    INT             reduce using rule 20 (agregatipo -> .)
    FLOAT           reduce using rule 20 (agregatipo -> .)
    CHAR            reduce using rule 20 (agregatipo -> .)

    agregatipo                     shift and go to state 76

state 58

    (33) funcion -> FUNCION aux2 tipofun ID agregafunc . LPAREN funcionb

    LPAREN          shift and go to state 77


state 59

    (36) agregafunc -> empty .

    LPAREN          reduce using rule 36 (agregafunc -> empty .)


state 60

    (81) cte -> ID .

    RBRACK          reduce using rule 81 (cte -> ID .)
    TIMES           reduce using rule 81 (cte -> ID .)
    DIVIDE          reduce using rule 81 (cte -> ID .)
    PLUS            reduce using rule 81 (cte -> ID .)
    MINUS           reduce using rule 81 (cte -> ID .)
    GTHAN           reduce using rule 81 (cte -> ID .)
    LTHAN           reduce using rule 81 (cte -> ID .)
    EQLOP           reduce using rule 81 (cte -> ID .)
    GEQUAL          reduce using rule 81 (cte -> ID .)
    LEQUAL          reduce using rule 81 (cte -> ID .)
    ABRACKET        reduce using rule 81 (cte -> ID .)
    RBRACKET        reduce using rule 81 (cte -> ID .)
    ID              reduce using rule 81 (cte -> ID .)
    REGRESA         reduce using rule 81 (cte -> ID .)
    LEE             reduce using rule 81 (cte -> ID .)
    ESCRIBE         reduce using rule 81 (cte -> ID .)
    SI              reduce using rule 81 (cte -> ID .)
    MIENTRAS        reduce using rule 81 (cte -> ID .)
    DESDE           reduce using rule 81 (cte -> ID .)
    LPAREN          reduce using rule 81 (cte -> ID .)
    NUMBER          reduce using rule 81 (cte -> ID .)
    CTEF            reduce using rule 81 (cte -> ID .)
    CTEC            reduce using rule 81 (cte -> ID .)
    STRING          reduce using rule 81 (cte -> ID .)
    RPAREN          reduce using rule 81 (cte -> ID .)
    SEMICOL         reduce using rule 81 (cte -> ID .)
    COMMA           reduce using rule 81 (cte -> ID .)
    HASTA           reduce using rule 81 (cte -> ID .)
    HACER           reduce using rule 81 (cte -> ID .)


state 61

    (9) id -> ID agregavar LBRACK cte . RBRACK

    RBRACK          shift and go to state 78


state 62

    (82) cte -> NUMBER . saveconst
    (86) saveconst -> . empty
    (120) empty -> .

    RBRACK          reduce using rule 120 (empty -> .)
    TIMES           reduce using rule 120 (empty -> .)
    DIVIDE          reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    GTHAN           reduce using rule 120 (empty -> .)
    LTHAN           reduce using rule 120 (empty -> .)
    EQLOP           reduce using rule 120 (empty -> .)
    GEQUAL          reduce using rule 120 (empty -> .)
    LEQUAL          reduce using rule 120 (empty -> .)
    ABRACKET        reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    REGRESA         reduce using rule 120 (empty -> .)
    LEE             reduce using rule 120 (empty -> .)
    ESCRIBE         reduce using rule 120 (empty -> .)
    SI              reduce using rule 120 (empty -> .)
    MIENTRAS        reduce using rule 120 (empty -> .)
    DESDE           reduce using rule 120 (empty -> .)
    LPAREN          reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    SEMICOL         reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    HASTA           reduce using rule 120 (empty -> .)
    HACER           reduce using rule 120 (empty -> .)

    saveconst                      shift and go to state 79
    empty                          shift and go to state 80

state 63

    (83) cte -> CTEF .

    RBRACK          reduce using rule 83 (cte -> CTEF .)
    TIMES           reduce using rule 83 (cte -> CTEF .)
    DIVIDE          reduce using rule 83 (cte -> CTEF .)
    PLUS            reduce using rule 83 (cte -> CTEF .)
    MINUS           reduce using rule 83 (cte -> CTEF .)
    GTHAN           reduce using rule 83 (cte -> CTEF .)
    LTHAN           reduce using rule 83 (cte -> CTEF .)
    EQLOP           reduce using rule 83 (cte -> CTEF .)
    GEQUAL          reduce using rule 83 (cte -> CTEF .)
    LEQUAL          reduce using rule 83 (cte -> CTEF .)
    ABRACKET        reduce using rule 83 (cte -> CTEF .)
    RBRACKET        reduce using rule 83 (cte -> CTEF .)
    ID              reduce using rule 83 (cte -> CTEF .)
    REGRESA         reduce using rule 83 (cte -> CTEF .)
    LEE             reduce using rule 83 (cte -> CTEF .)
    ESCRIBE         reduce using rule 83 (cte -> CTEF .)
    SI              reduce using rule 83 (cte -> CTEF .)
    MIENTRAS        reduce using rule 83 (cte -> CTEF .)
    DESDE           reduce using rule 83 (cte -> CTEF .)
    LPAREN          reduce using rule 83 (cte -> CTEF .)
    NUMBER          reduce using rule 83 (cte -> CTEF .)
    CTEF            reduce using rule 83 (cte -> CTEF .)
    CTEC            reduce using rule 83 (cte -> CTEF .)
    STRING          reduce using rule 83 (cte -> CTEF .)
    RPAREN          reduce using rule 83 (cte -> CTEF .)
    SEMICOL         reduce using rule 83 (cte -> CTEF .)
    COMMA           reduce using rule 83 (cte -> CTEF .)
    HASTA           reduce using rule 83 (cte -> CTEF .)
    HACER           reduce using rule 83 (cte -> CTEF .)


state 64

    (84) cte -> CTEC .

    RBRACK          reduce using rule 84 (cte -> CTEC .)
    TIMES           reduce using rule 84 (cte -> CTEC .)
    DIVIDE          reduce using rule 84 (cte -> CTEC .)
    PLUS            reduce using rule 84 (cte -> CTEC .)
    MINUS           reduce using rule 84 (cte -> CTEC .)
    GTHAN           reduce using rule 84 (cte -> CTEC .)
    LTHAN           reduce using rule 84 (cte -> CTEC .)
    EQLOP           reduce using rule 84 (cte -> CTEC .)
    GEQUAL          reduce using rule 84 (cte -> CTEC .)
    LEQUAL          reduce using rule 84 (cte -> CTEC .)
    ABRACKET        reduce using rule 84 (cte -> CTEC .)
    RBRACKET        reduce using rule 84 (cte -> CTEC .)
    ID              reduce using rule 84 (cte -> CTEC .)
    REGRESA         reduce using rule 84 (cte -> CTEC .)
    LEE             reduce using rule 84 (cte -> CTEC .)
    ESCRIBE         reduce using rule 84 (cte -> CTEC .)
    SI              reduce using rule 84 (cte -> CTEC .)
    MIENTRAS        reduce using rule 84 (cte -> CTEC .)
    DESDE           reduce using rule 84 (cte -> CTEC .)
    LPAREN          reduce using rule 84 (cte -> CTEC .)
    NUMBER          reduce using rule 84 (cte -> CTEC .)
    CTEF            reduce using rule 84 (cte -> CTEC .)
    CTEC            reduce using rule 84 (cte -> CTEC .)
    STRING          reduce using rule 84 (cte -> CTEC .)
    RPAREN          reduce using rule 84 (cte -> CTEC .)
    SEMICOL         reduce using rule 84 (cte -> CTEC .)
    COMMA           reduce using rule 84 (cte -> CTEC .)
    HASTA           reduce using rule 84 (cte -> CTEC .)
    HACER           reduce using rule 84 (cte -> CTEC .)


state 65

    (85) cte -> STRING .

    RBRACK          reduce using rule 85 (cte -> STRING .)
    TIMES           reduce using rule 85 (cte -> STRING .)
    DIVIDE          reduce using rule 85 (cte -> STRING .)
    PLUS            reduce using rule 85 (cte -> STRING .)
    MINUS           reduce using rule 85 (cte -> STRING .)
    GTHAN           reduce using rule 85 (cte -> STRING .)
    LTHAN           reduce using rule 85 (cte -> STRING .)
    EQLOP           reduce using rule 85 (cte -> STRING .)
    GEQUAL          reduce using rule 85 (cte -> STRING .)
    LEQUAL          reduce using rule 85 (cte -> STRING .)
    ABRACKET        reduce using rule 85 (cte -> STRING .)
    RBRACKET        reduce using rule 85 (cte -> STRING .)
    ID              reduce using rule 85 (cte -> STRING .)
    REGRESA         reduce using rule 85 (cte -> STRING .)
    LEE             reduce using rule 85 (cte -> STRING .)
    ESCRIBE         reduce using rule 85 (cte -> STRING .)
    SI              reduce using rule 85 (cte -> STRING .)
    MIENTRAS        reduce using rule 85 (cte -> STRING .)
    DESDE           reduce using rule 85 (cte -> STRING .)
    LPAREN          reduce using rule 85 (cte -> STRING .)
    NUMBER          reduce using rule 85 (cte -> STRING .)
    CTEF            reduce using rule 85 (cte -> STRING .)
    CTEC            reduce using rule 85 (cte -> STRING .)
    STRING          reduce using rule 85 (cte -> STRING .)
    RPAREN          reduce using rule 85 (cte -> STRING .)
    SEMICOL         reduce using rule 85 (cte -> STRING .)
    COMMA           reduce using rule 85 (cte -> STRING .)
    HASTA           reduce using rule 85 (cte -> STRING .)
    HACER           reduce using rule 85 (cte -> STRING .)


state 66

    (4) programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque .

    $end            reduce using rule 4 (programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque .)


state 67

    (45) bloque -> LBRACKET . estatuto bloqueb
    (46) bloque -> LBRACKET . RBRACKET
    (111) estatuto -> . asignacion
    (112) estatuto -> . funcionvoid
    (113) estatuto -> . retorno
    (114) estatuto -> . lee
    (115) estatuto -> . escritura
    (116) estatuto -> . decision
    (117) estatuto -> . repeticioncond
    (118) estatuto -> . repeticionnocond
    (119) estatuto -> . expresion
    (53) asignacion -> . ID EQUAL asignacionb
    (54) asignacion -> . ID asign EQUAL asignacionb
    (59) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (57) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (63) lee -> . LEE LPAREN id leeb
    (66) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (70) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (76) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (80) repeticionnocond -> . DESDE id EQUAL exp HASTA exp HACER bloque
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    RBRACKET        shift and go to state 82
    ID              shift and go to state 92
    REGRESA         shift and go to state 94
    LEE             shift and go to state 95
    ESCRIBE         shift and go to state 96
    SI              shift and go to state 97
    MIENTRAS        shift and go to state 98
    DESDE           shift and go to state 99
    LPAREN          shift and go to state 93
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    estatuto                       shift and go to state 81
    asignacion                     shift and go to state 83
    funcionvoid                    shift and go to state 84
    retorno                        shift and go to state 85
    lee                            shift and go to state 86
    escritura                      shift and go to state 87
    decision                       shift and go to state 88
    repeticioncond                 shift and go to state 89
    repeticionnocond               shift and go to state 90
    expresion                      shift and go to state 91
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 68

    (37) funcionb -> RPAREN testeru . funcionc
    (40) funcionc -> . vars agregacont bloque reinicio funcion
    (41) funcionc -> . agregacont bloque reinicio funcion
    (42) funcionc -> . empty
    (21) vars -> . VAR varsb
    (43) agregacont -> . empty
    (120) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    funcionc                       shift and go to state 106
    vars                           shift and go to state 107
    agregacont                     shift and go to state 108
    empty                          shift and go to state 109

state 69

    (39) testeru -> empty .

    VAR             reduce using rule 39 (testeru -> empty .)
    LBRACKET        reduce using rule 39 (testeru -> empty .)
    PRINCIPAL       reduce using rule 39 (testeru -> empty .)


state 70

    (38) funcionb -> varsfunc RPAREN . testeru funcionc
    (39) testeru -> . empty
    (120) empty -> .

    VAR             reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)

    testeru                        shift and go to state 110
    empty                          shift and go to state 69

state 71

    (28) varsfunc -> tipovarfunc varsfuncb .

    RPAREN          reduce using rule 28 (varsfunc -> tipovarfunc varsfuncb .)


state 72

    (29) varsfuncb -> id . COMMA varsfuncb
    (31) varsfuncb -> id .

    COMMA           shift and go to state 111
    RPAREN          reduce using rule 31 (varsfuncb -> id .)


state 73

    (30) varsfuncb -> varsfunc .

    RPAREN          reduce using rule 30 (varsfuncb -> varsfunc .)


state 74

    (13) tipovarfunc -> INT agregatipo .

    ID              reduce using rule 13 (tipovarfunc -> INT agregatipo .)
    INT             reduce using rule 13 (tipovarfunc -> INT agregatipo .)
    FLOAT           reduce using rule 13 (tipovarfunc -> INT agregatipo .)
    CHAR            reduce using rule 13 (tipovarfunc -> INT agregatipo .)


state 75

    (14) tipovarfunc -> FLOAT agregatipo .

    ID              reduce using rule 14 (tipovarfunc -> FLOAT agregatipo .)
    INT             reduce using rule 14 (tipovarfunc -> FLOAT agregatipo .)
    FLOAT           reduce using rule 14 (tipovarfunc -> FLOAT agregatipo .)
    CHAR            reduce using rule 14 (tipovarfunc -> FLOAT agregatipo .)


state 76

    (15) tipovarfunc -> CHAR agregatipo .

    ID              reduce using rule 15 (tipovarfunc -> CHAR agregatipo .)
    INT             reduce using rule 15 (tipovarfunc -> CHAR agregatipo .)
    FLOAT           reduce using rule 15 (tipovarfunc -> CHAR agregatipo .)
    CHAR            reduce using rule 15 (tipovarfunc -> CHAR agregatipo .)


state 77

    (33) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN . funcionb
    (37) funcionb -> . RPAREN testeru funcionc
    (38) funcionb -> . varsfunc RPAREN testeru funcionc
    (28) varsfunc -> . tipovarfunc varsfuncb
    (13) tipovarfunc -> . INT agregatipo
    (14) tipovarfunc -> . FLOAT agregatipo
    (15) tipovarfunc -> . CHAR agregatipo

    RPAREN          shift and go to state 52
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    funcionb                       shift and go to state 112
    varsfunc                       shift and go to state 53
    tipovarfunc                    shift and go to state 54

state 78

    (9) id -> ID agregavar LBRACK cte RBRACK .

    COMMA           reduce using rule 9 (id -> ID agregavar LBRACK cte RBRACK .)
    SEMICOL         reduce using rule 9 (id -> ID agregavar LBRACK cte RBRACK .)
    RPAREN          reduce using rule 9 (id -> ID agregavar LBRACK cte RBRACK .)
    EQUAL           reduce using rule 9 (id -> ID agregavar LBRACK cte RBRACK .)


state 79

    (82) cte -> NUMBER saveconst .

    RBRACK          reduce using rule 82 (cte -> NUMBER saveconst .)
    TIMES           reduce using rule 82 (cte -> NUMBER saveconst .)
    DIVIDE          reduce using rule 82 (cte -> NUMBER saveconst .)
    PLUS            reduce using rule 82 (cte -> NUMBER saveconst .)
    MINUS           reduce using rule 82 (cte -> NUMBER saveconst .)
    GTHAN           reduce using rule 82 (cte -> NUMBER saveconst .)
    LTHAN           reduce using rule 82 (cte -> NUMBER saveconst .)
    EQLOP           reduce using rule 82 (cte -> NUMBER saveconst .)
    GEQUAL          reduce using rule 82 (cte -> NUMBER saveconst .)
    LEQUAL          reduce using rule 82 (cte -> NUMBER saveconst .)
    ABRACKET        reduce using rule 82 (cte -> NUMBER saveconst .)
    RBRACKET        reduce using rule 82 (cte -> NUMBER saveconst .)
    ID              reduce using rule 82 (cte -> NUMBER saveconst .)
    REGRESA         reduce using rule 82 (cte -> NUMBER saveconst .)
    LEE             reduce using rule 82 (cte -> NUMBER saveconst .)
    ESCRIBE         reduce using rule 82 (cte -> NUMBER saveconst .)
    SI              reduce using rule 82 (cte -> NUMBER saveconst .)
    MIENTRAS        reduce using rule 82 (cte -> NUMBER saveconst .)
    DESDE           reduce using rule 82 (cte -> NUMBER saveconst .)
    LPAREN          reduce using rule 82 (cte -> NUMBER saveconst .)
    NUMBER          reduce using rule 82 (cte -> NUMBER saveconst .)
    CTEF            reduce using rule 82 (cte -> NUMBER saveconst .)
    CTEC            reduce using rule 82 (cte -> NUMBER saveconst .)
    STRING          reduce using rule 82 (cte -> NUMBER saveconst .)
    RPAREN          reduce using rule 82 (cte -> NUMBER saveconst .)
    SEMICOL         reduce using rule 82 (cte -> NUMBER saveconst .)
    COMMA           reduce using rule 82 (cte -> NUMBER saveconst .)
    HASTA           reduce using rule 82 (cte -> NUMBER saveconst .)
    HACER           reduce using rule 82 (cte -> NUMBER saveconst .)


state 80

    (86) saveconst -> empty .

    RBRACK          reduce using rule 86 (saveconst -> empty .)
    TIMES           reduce using rule 86 (saveconst -> empty .)
    DIVIDE          reduce using rule 86 (saveconst -> empty .)
    PLUS            reduce using rule 86 (saveconst -> empty .)
    MINUS           reduce using rule 86 (saveconst -> empty .)
    GTHAN           reduce using rule 86 (saveconst -> empty .)
    LTHAN           reduce using rule 86 (saveconst -> empty .)
    EQLOP           reduce using rule 86 (saveconst -> empty .)
    GEQUAL          reduce using rule 86 (saveconst -> empty .)
    LEQUAL          reduce using rule 86 (saveconst -> empty .)
    ABRACKET        reduce using rule 86 (saveconst -> empty .)
    RBRACKET        reduce using rule 86 (saveconst -> empty .)
    ID              reduce using rule 86 (saveconst -> empty .)
    REGRESA         reduce using rule 86 (saveconst -> empty .)
    LEE             reduce using rule 86 (saveconst -> empty .)
    ESCRIBE         reduce using rule 86 (saveconst -> empty .)
    SI              reduce using rule 86 (saveconst -> empty .)
    MIENTRAS        reduce using rule 86 (saveconst -> empty .)
    DESDE           reduce using rule 86 (saveconst -> empty .)
    LPAREN          reduce using rule 86 (saveconst -> empty .)
    NUMBER          reduce using rule 86 (saveconst -> empty .)
    CTEF            reduce using rule 86 (saveconst -> empty .)
    CTEC            reduce using rule 86 (saveconst -> empty .)
    STRING          reduce using rule 86 (saveconst -> empty .)
    RPAREN          reduce using rule 86 (saveconst -> empty .)
    SEMICOL         reduce using rule 86 (saveconst -> empty .)
    COMMA           reduce using rule 86 (saveconst -> empty .)
    HASTA           reduce using rule 86 (saveconst -> empty .)
    HACER           reduce using rule 86 (saveconst -> empty .)


state 81

    (45) bloque -> LBRACKET estatuto . bloqueb
    (47) bloqueb -> . RBRACKET helper
    (48) bloqueb -> . estatuto bloqueb
    (111) estatuto -> . asignacion
    (112) estatuto -> . funcionvoid
    (113) estatuto -> . retorno
    (114) estatuto -> . lee
    (115) estatuto -> . escritura
    (116) estatuto -> . decision
    (117) estatuto -> . repeticioncond
    (118) estatuto -> . repeticionnocond
    (119) estatuto -> . expresion
    (53) asignacion -> . ID EQUAL asignacionb
    (54) asignacion -> . ID asign EQUAL asignacionb
    (59) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (57) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (63) lee -> . LEE LPAREN id leeb
    (66) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (70) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (76) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (80) repeticionnocond -> . DESDE id EQUAL exp HASTA exp HACER bloque
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    RBRACKET        shift and go to state 115
    ID              shift and go to state 92
    REGRESA         shift and go to state 94
    LEE             shift and go to state 95
    ESCRIBE         shift and go to state 96
    SI              shift and go to state 97
    MIENTRAS        shift and go to state 98
    DESDE           shift and go to state 99
    LPAREN          shift and go to state 93
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    estatuto                       shift and go to state 113
    bloqueb                        shift and go to state 114
    asignacion                     shift and go to state 83
    funcionvoid                    shift and go to state 84
    retorno                        shift and go to state 85
    lee                            shift and go to state 86
    escritura                      shift and go to state 87
    decision                       shift and go to state 88
    repeticioncond                 shift and go to state 89
    repeticionnocond               shift and go to state 90
    expresion                      shift and go to state 91
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 82

    (46) bloque -> LBRACKET RBRACKET .

    $end            reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    FUNCION         reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    PRINCIPAL       reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    SINO            reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    ID              reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    REGRESA         reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    LEE             reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    ESCRIBE         reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    SI              reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    MIENTRAS        reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    DESDE           reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    LPAREN          reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    NUMBER          reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    CTEF            reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    CTEC            reduce using rule 46 (bloque -> LBRACKET RBRACKET .)
    STRING          reduce using rule 46 (bloque -> LBRACKET RBRACKET .)


state 83

    (111) estatuto -> asignacion .

    RBRACKET        reduce using rule 111 (estatuto -> asignacion .)
    ID              reduce using rule 111 (estatuto -> asignacion .)
    REGRESA         reduce using rule 111 (estatuto -> asignacion .)
    LEE             reduce using rule 111 (estatuto -> asignacion .)
    ESCRIBE         reduce using rule 111 (estatuto -> asignacion .)
    SI              reduce using rule 111 (estatuto -> asignacion .)
    MIENTRAS        reduce using rule 111 (estatuto -> asignacion .)
    DESDE           reduce using rule 111 (estatuto -> asignacion .)
    LPAREN          reduce using rule 111 (estatuto -> asignacion .)
    PLUS            reduce using rule 111 (estatuto -> asignacion .)
    MINUS           reduce using rule 111 (estatuto -> asignacion .)
    NUMBER          reduce using rule 111 (estatuto -> asignacion .)
    CTEF            reduce using rule 111 (estatuto -> asignacion .)
    CTEC            reduce using rule 111 (estatuto -> asignacion .)
    STRING          reduce using rule 111 (estatuto -> asignacion .)


state 84

    (112) estatuto -> funcionvoid .

    RBRACKET        reduce using rule 112 (estatuto -> funcionvoid .)
    ID              reduce using rule 112 (estatuto -> funcionvoid .)
    REGRESA         reduce using rule 112 (estatuto -> funcionvoid .)
    LEE             reduce using rule 112 (estatuto -> funcionvoid .)
    ESCRIBE         reduce using rule 112 (estatuto -> funcionvoid .)
    SI              reduce using rule 112 (estatuto -> funcionvoid .)
    MIENTRAS        reduce using rule 112 (estatuto -> funcionvoid .)
    DESDE           reduce using rule 112 (estatuto -> funcionvoid .)
    LPAREN          reduce using rule 112 (estatuto -> funcionvoid .)
    PLUS            reduce using rule 112 (estatuto -> funcionvoid .)
    MINUS           reduce using rule 112 (estatuto -> funcionvoid .)
    NUMBER          reduce using rule 112 (estatuto -> funcionvoid .)
    CTEF            reduce using rule 112 (estatuto -> funcionvoid .)
    CTEC            reduce using rule 112 (estatuto -> funcionvoid .)
    STRING          reduce using rule 112 (estatuto -> funcionvoid .)


state 85

    (113) estatuto -> retorno .

    RBRACKET        reduce using rule 113 (estatuto -> retorno .)
    ID              reduce using rule 113 (estatuto -> retorno .)
    REGRESA         reduce using rule 113 (estatuto -> retorno .)
    LEE             reduce using rule 113 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 113 (estatuto -> retorno .)
    SI              reduce using rule 113 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 113 (estatuto -> retorno .)
    DESDE           reduce using rule 113 (estatuto -> retorno .)
    LPAREN          reduce using rule 113 (estatuto -> retorno .)
    PLUS            reduce using rule 113 (estatuto -> retorno .)
    MINUS           reduce using rule 113 (estatuto -> retorno .)
    NUMBER          reduce using rule 113 (estatuto -> retorno .)
    CTEF            reduce using rule 113 (estatuto -> retorno .)
    CTEC            reduce using rule 113 (estatuto -> retorno .)
    STRING          reduce using rule 113 (estatuto -> retorno .)


state 86

    (114) estatuto -> lee .

    RBRACKET        reduce using rule 114 (estatuto -> lee .)
    ID              reduce using rule 114 (estatuto -> lee .)
    REGRESA         reduce using rule 114 (estatuto -> lee .)
    LEE             reduce using rule 114 (estatuto -> lee .)
    ESCRIBE         reduce using rule 114 (estatuto -> lee .)
    SI              reduce using rule 114 (estatuto -> lee .)
    MIENTRAS        reduce using rule 114 (estatuto -> lee .)
    DESDE           reduce using rule 114 (estatuto -> lee .)
    LPAREN          reduce using rule 114 (estatuto -> lee .)
    PLUS            reduce using rule 114 (estatuto -> lee .)
    MINUS           reduce using rule 114 (estatuto -> lee .)
    NUMBER          reduce using rule 114 (estatuto -> lee .)
    CTEF            reduce using rule 114 (estatuto -> lee .)
    CTEC            reduce using rule 114 (estatuto -> lee .)
    STRING          reduce using rule 114 (estatuto -> lee .)


state 87

    (115) estatuto -> escritura .

    RBRACKET        reduce using rule 115 (estatuto -> escritura .)
    ID              reduce using rule 115 (estatuto -> escritura .)
    REGRESA         reduce using rule 115 (estatuto -> escritura .)
    LEE             reduce using rule 115 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 115 (estatuto -> escritura .)
    SI              reduce using rule 115 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 115 (estatuto -> escritura .)
    DESDE           reduce using rule 115 (estatuto -> escritura .)
    LPAREN          reduce using rule 115 (estatuto -> escritura .)
    PLUS            reduce using rule 115 (estatuto -> escritura .)
    MINUS           reduce using rule 115 (estatuto -> escritura .)
    NUMBER          reduce using rule 115 (estatuto -> escritura .)
    CTEF            reduce using rule 115 (estatuto -> escritura .)
    CTEC            reduce using rule 115 (estatuto -> escritura .)
    STRING          reduce using rule 115 (estatuto -> escritura .)


state 88

    (116) estatuto -> decision .

    RBRACKET        reduce using rule 116 (estatuto -> decision .)
    ID              reduce using rule 116 (estatuto -> decision .)
    REGRESA         reduce using rule 116 (estatuto -> decision .)
    LEE             reduce using rule 116 (estatuto -> decision .)
    ESCRIBE         reduce using rule 116 (estatuto -> decision .)
    SI              reduce using rule 116 (estatuto -> decision .)
    MIENTRAS        reduce using rule 116 (estatuto -> decision .)
    DESDE           reduce using rule 116 (estatuto -> decision .)
    LPAREN          reduce using rule 116 (estatuto -> decision .)
    PLUS            reduce using rule 116 (estatuto -> decision .)
    MINUS           reduce using rule 116 (estatuto -> decision .)
    NUMBER          reduce using rule 116 (estatuto -> decision .)
    CTEF            reduce using rule 116 (estatuto -> decision .)
    CTEC            reduce using rule 116 (estatuto -> decision .)
    STRING          reduce using rule 116 (estatuto -> decision .)


state 89

    (117) estatuto -> repeticioncond .

    RBRACKET        reduce using rule 117 (estatuto -> repeticioncond .)
    ID              reduce using rule 117 (estatuto -> repeticioncond .)
    REGRESA         reduce using rule 117 (estatuto -> repeticioncond .)
    LEE             reduce using rule 117 (estatuto -> repeticioncond .)
    ESCRIBE         reduce using rule 117 (estatuto -> repeticioncond .)
    SI              reduce using rule 117 (estatuto -> repeticioncond .)
    MIENTRAS        reduce using rule 117 (estatuto -> repeticioncond .)
    DESDE           reduce using rule 117 (estatuto -> repeticioncond .)
    LPAREN          reduce using rule 117 (estatuto -> repeticioncond .)
    PLUS            reduce using rule 117 (estatuto -> repeticioncond .)
    MINUS           reduce using rule 117 (estatuto -> repeticioncond .)
    NUMBER          reduce using rule 117 (estatuto -> repeticioncond .)
    CTEF            reduce using rule 117 (estatuto -> repeticioncond .)
    CTEC            reduce using rule 117 (estatuto -> repeticioncond .)
    STRING          reduce using rule 117 (estatuto -> repeticioncond .)


state 90

    (118) estatuto -> repeticionnocond .

    RBRACKET        reduce using rule 118 (estatuto -> repeticionnocond .)
    ID              reduce using rule 118 (estatuto -> repeticionnocond .)
    REGRESA         reduce using rule 118 (estatuto -> repeticionnocond .)
    LEE             reduce using rule 118 (estatuto -> repeticionnocond .)
    ESCRIBE         reduce using rule 118 (estatuto -> repeticionnocond .)
    SI              reduce using rule 118 (estatuto -> repeticionnocond .)
    MIENTRAS        reduce using rule 118 (estatuto -> repeticionnocond .)
    DESDE           reduce using rule 118 (estatuto -> repeticionnocond .)
    LPAREN          reduce using rule 118 (estatuto -> repeticionnocond .)
    PLUS            reduce using rule 118 (estatuto -> repeticionnocond .)
    MINUS           reduce using rule 118 (estatuto -> repeticionnocond .)
    NUMBER          reduce using rule 118 (estatuto -> repeticionnocond .)
    CTEF            reduce using rule 118 (estatuto -> repeticionnocond .)
    CTEC            reduce using rule 118 (estatuto -> repeticionnocond .)
    STRING          reduce using rule 118 (estatuto -> repeticionnocond .)


state 91

    (119) estatuto -> expresion .

    RBRACKET        reduce using rule 119 (estatuto -> expresion .)
    ID              reduce using rule 119 (estatuto -> expresion .)
    REGRESA         reduce using rule 119 (estatuto -> expresion .)
    LEE             reduce using rule 119 (estatuto -> expresion .)
    ESCRIBE         reduce using rule 119 (estatuto -> expresion .)
    SI              reduce using rule 119 (estatuto -> expresion .)
    MIENTRAS        reduce using rule 119 (estatuto -> expresion .)
    DESDE           reduce using rule 119 (estatuto -> expresion .)
    LPAREN          reduce using rule 119 (estatuto -> expresion .)
    PLUS            reduce using rule 119 (estatuto -> expresion .)
    MINUS           reduce using rule 119 (estatuto -> expresion .)
    NUMBER          reduce using rule 119 (estatuto -> expresion .)
    CTEF            reduce using rule 119 (estatuto -> expresion .)
    CTEC            reduce using rule 119 (estatuto -> expresion .)
    STRING          reduce using rule 119 (estatuto -> expresion .)


state 92

    (53) asignacion -> ID . EQUAL asignacionb
    (54) asignacion -> ID . asign EQUAL asignacionb
    (59) funcionvoid -> ID . LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (103) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (107) factor -> ID . asign
    (81) cte -> ID .
    (50) asign -> . LBRACK expresion RBRACK
    (51) asign -> . LBRACK CTEI RBRACK
    (52) asign -> . LBRACK CTEC RBRACK

  ! shift/reduce conflict for LPAREN resolved as shift
    EQUAL           shift and go to state 116
    LPAREN          shift and go to state 118
    TIMES           reduce using rule 81 (cte -> ID .)
    DIVIDE          reduce using rule 81 (cte -> ID .)
    PLUS            reduce using rule 81 (cte -> ID .)
    MINUS           reduce using rule 81 (cte -> ID .)
    GTHAN           reduce using rule 81 (cte -> ID .)
    LTHAN           reduce using rule 81 (cte -> ID .)
    EQLOP           reduce using rule 81 (cte -> ID .)
    GEQUAL          reduce using rule 81 (cte -> ID .)
    LEQUAL          reduce using rule 81 (cte -> ID .)
    ABRACKET        reduce using rule 81 (cte -> ID .)
    RBRACKET        reduce using rule 81 (cte -> ID .)
    ID              reduce using rule 81 (cte -> ID .)
    REGRESA         reduce using rule 81 (cte -> ID .)
    LEE             reduce using rule 81 (cte -> ID .)
    ESCRIBE         reduce using rule 81 (cte -> ID .)
    SI              reduce using rule 81 (cte -> ID .)
    MIENTRAS        reduce using rule 81 (cte -> ID .)
    DESDE           reduce using rule 81 (cte -> ID .)
    NUMBER          reduce using rule 81 (cte -> ID .)
    CTEF            reduce using rule 81 (cte -> ID .)
    CTEC            reduce using rule 81 (cte -> ID .)
    STRING          reduce using rule 81 (cte -> ID .)
    LBRACK          shift and go to state 119

  ! LPAREN          [ reduce using rule 81 (cte -> ID .) ]

    asign                          shift and go to state 117

state 93

    (102) factor -> LPAREN . expresion RPAREN
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 120
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 94

    (57) retorno -> REGRESA . LPAREN expresion retn RPAREN SEMICOL

    LPAREN          shift and go to state 122


state 95

    (63) lee -> LEE . LPAREN id leeb

    LPAREN          shift and go to state 123


state 96

    (66) escritura -> ESCRIBE . LPAREN expresion prin1 escriturab

    LPAREN          shift and go to state 124


state 97

    (70) decision -> SI . LPAREN expresion pn1 RPAREN ENTONCES decisionb

    LPAREN          shift and go to state 125


state 98

    (76) repeticioncond -> MIENTRAS . rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (77) rcn1 -> . empty
    (120) empty -> .

    LPAREN          reduce using rule 120 (empty -> .)

    rcn1                           shift and go to state 126
    empty                          shift and go to state 127

state 99

    (80) repeticionnocond -> DESDE . id EQUAL exp HASTA exp HACER bloque
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK

    ID              shift and go to state 28

    id                             shift and go to state 128

state 100

    (87) expresion -> exp .
    (88) expresion -> exp . GTHAN exp
    (89) expresion -> exp . LTHAN exp
    (90) expresion -> exp . EQLOP exp
    (91) expresion -> exp . GEQUAL exp
    (92) expresion -> exp . LEQUAL exp
    (93) expresion -> exp . ABRACKET exp

    RBRACKET        reduce using rule 87 (expresion -> exp .)
    ID              reduce using rule 87 (expresion -> exp .)
    REGRESA         reduce using rule 87 (expresion -> exp .)
    LEE             reduce using rule 87 (expresion -> exp .)
    ESCRIBE         reduce using rule 87 (expresion -> exp .)
    SI              reduce using rule 87 (expresion -> exp .)
    MIENTRAS        reduce using rule 87 (expresion -> exp .)
    DESDE           reduce using rule 87 (expresion -> exp .)
    LPAREN          reduce using rule 87 (expresion -> exp .)
    PLUS            reduce using rule 87 (expresion -> exp .)
    MINUS           reduce using rule 87 (expresion -> exp .)
    NUMBER          reduce using rule 87 (expresion -> exp .)
    CTEF            reduce using rule 87 (expresion -> exp .)
    CTEC            reduce using rule 87 (expresion -> exp .)
    STRING          reduce using rule 87 (expresion -> exp .)
    RPAREN          reduce using rule 87 (expresion -> exp .)
    SEMICOL         reduce using rule 87 (expresion -> exp .)
    RBRACK          reduce using rule 87 (expresion -> exp .)
    COMMA           reduce using rule 87 (expresion -> exp .)
    GTHAN           shift and go to state 129
    LTHAN           shift and go to state 130
    EQLOP           shift and go to state 131
    GEQUAL          shift and go to state 132
    LEQUAL          shift and go to state 133
    ABRACKET        shift and go to state 134


state 101

    (94) exp -> termino .
    (95) exp -> termino . expb
    (96) expb -> . PLUS exp
    (97) expb -> . MINUS exp

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GTHAN           reduce using rule 94 (exp -> termino .)
    LTHAN           reduce using rule 94 (exp -> termino .)
    EQLOP           reduce using rule 94 (exp -> termino .)
    GEQUAL          reduce using rule 94 (exp -> termino .)
    LEQUAL          reduce using rule 94 (exp -> termino .)
    ABRACKET        reduce using rule 94 (exp -> termino .)
    RBRACKET        reduce using rule 94 (exp -> termino .)
    ID              reduce using rule 94 (exp -> termino .)
    REGRESA         reduce using rule 94 (exp -> termino .)
    LEE             reduce using rule 94 (exp -> termino .)
    ESCRIBE         reduce using rule 94 (exp -> termino .)
    SI              reduce using rule 94 (exp -> termino .)
    MIENTRAS        reduce using rule 94 (exp -> termino .)
    DESDE           reduce using rule 94 (exp -> termino .)
    LPAREN          reduce using rule 94 (exp -> termino .)
    NUMBER          reduce using rule 94 (exp -> termino .)
    CTEF            reduce using rule 94 (exp -> termino .)
    CTEC            reduce using rule 94 (exp -> termino .)
    STRING          reduce using rule 94 (exp -> termino .)
    RPAREN          reduce using rule 94 (exp -> termino .)
    SEMICOL         reduce using rule 94 (exp -> termino .)
    RBRACK          reduce using rule 94 (exp -> termino .)
    COMMA           reduce using rule 94 (exp -> termino .)
    HASTA           reduce using rule 94 (exp -> termino .)
    HACER           reduce using rule 94 (exp -> termino .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137

  ! PLUS            [ reduce using rule 94 (exp -> termino .) ]
  ! MINUS           [ reduce using rule 94 (exp -> termino .) ]

    expb                           shift and go to state 135

state 102

    (98) termino -> factor .
    (99) termino -> factor . terminob
    (100) terminob -> . TIMES termino
    (101) terminob -> . DIVIDE termino

    PLUS            reduce using rule 98 (termino -> factor .)
    MINUS           reduce using rule 98 (termino -> factor .)
    GTHAN           reduce using rule 98 (termino -> factor .)
    LTHAN           reduce using rule 98 (termino -> factor .)
    EQLOP           reduce using rule 98 (termino -> factor .)
    GEQUAL          reduce using rule 98 (termino -> factor .)
    LEQUAL          reduce using rule 98 (termino -> factor .)
    ABRACKET        reduce using rule 98 (termino -> factor .)
    RBRACKET        reduce using rule 98 (termino -> factor .)
    ID              reduce using rule 98 (termino -> factor .)
    REGRESA         reduce using rule 98 (termino -> factor .)
    LEE             reduce using rule 98 (termino -> factor .)
    ESCRIBE         reduce using rule 98 (termino -> factor .)
    SI              reduce using rule 98 (termino -> factor .)
    MIENTRAS        reduce using rule 98 (termino -> factor .)
    DESDE           reduce using rule 98 (termino -> factor .)
    LPAREN          reduce using rule 98 (termino -> factor .)
    NUMBER          reduce using rule 98 (termino -> factor .)
    CTEF            reduce using rule 98 (termino -> factor .)
    CTEC            reduce using rule 98 (termino -> factor .)
    STRING          reduce using rule 98 (termino -> factor .)
    RPAREN          reduce using rule 98 (termino -> factor .)
    SEMICOL         reduce using rule 98 (termino -> factor .)
    RBRACK          reduce using rule 98 (termino -> factor .)
    COMMA           reduce using rule 98 (termino -> factor .)
    HASTA           reduce using rule 98 (termino -> factor .)
    HACER           reduce using rule 98 (termino -> factor .)
    TIMES           shift and go to state 139
    DIVIDE          shift and go to state 140

    terminob                       shift and go to state 138

state 103

    (104) factor -> PLUS . cte
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    ID              shift and go to state 60
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    cte                            shift and go to state 141

state 104

    (106) factor -> cte .

    TIMES           reduce using rule 106 (factor -> cte .)
    DIVIDE          reduce using rule 106 (factor -> cte .)
    PLUS            reduce using rule 106 (factor -> cte .)
    MINUS           reduce using rule 106 (factor -> cte .)
    GTHAN           reduce using rule 106 (factor -> cte .)
    LTHAN           reduce using rule 106 (factor -> cte .)
    EQLOP           reduce using rule 106 (factor -> cte .)
    GEQUAL          reduce using rule 106 (factor -> cte .)
    LEQUAL          reduce using rule 106 (factor -> cte .)
    ABRACKET        reduce using rule 106 (factor -> cte .)
    RBRACKET        reduce using rule 106 (factor -> cte .)
    ID              reduce using rule 106 (factor -> cte .)
    REGRESA         reduce using rule 106 (factor -> cte .)
    LEE             reduce using rule 106 (factor -> cte .)
    ESCRIBE         reduce using rule 106 (factor -> cte .)
    SI              reduce using rule 106 (factor -> cte .)
    MIENTRAS        reduce using rule 106 (factor -> cte .)
    DESDE           reduce using rule 106 (factor -> cte .)
    LPAREN          reduce using rule 106 (factor -> cte .)
    NUMBER          reduce using rule 106 (factor -> cte .)
    CTEF            reduce using rule 106 (factor -> cte .)
    CTEC            reduce using rule 106 (factor -> cte .)
    STRING          reduce using rule 106 (factor -> cte .)
    RPAREN          reduce using rule 106 (factor -> cte .)
    SEMICOL         reduce using rule 106 (factor -> cte .)
    RBRACK          reduce using rule 106 (factor -> cte .)
    COMMA           reduce using rule 106 (factor -> cte .)
    HASTA           reduce using rule 106 (factor -> cte .)
    HACER           reduce using rule 106 (factor -> cte .)


state 105

    (105) factor -> MINUS . cte
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    ID              shift and go to state 60
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    cte                            shift and go to state 142

state 106

    (37) funcionb -> RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 37 (funcionb -> RPAREN testeru funcionc .)


state 107

    (40) funcionc -> vars . agregacont bloque reinicio funcion
    (43) agregacont -> . empty
    (120) empty -> .

    LBRACKET        reduce using rule 120 (empty -> .)

    agregacont                     shift and go to state 143
    empty                          shift and go to state 144

state 108

    (41) funcionc -> agregacont . bloque reinicio funcion
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 145

state 109

    (42) funcionc -> empty .
    (43) agregacont -> empty .

    PRINCIPAL       reduce using rule 42 (funcionc -> empty .)
    LBRACKET        reduce using rule 43 (agregacont -> empty .)


state 110

    (38) funcionb -> varsfunc RPAREN testeru . funcionc
    (40) funcionc -> . vars agregacont bloque reinicio funcion
    (41) funcionc -> . agregacont bloque reinicio funcion
    (42) funcionc -> . empty
    (21) vars -> . VAR varsb
    (43) agregacont -> . empty
    (120) empty -> .

    VAR             shift and go to state 9
    PRINCIPAL       reduce using rule 120 (empty -> .)
    LBRACKET        reduce using rule 120 (empty -> .)

    funcionc                       shift and go to state 146
    vars                           shift and go to state 107
    agregacont                     shift and go to state 108
    empty                          shift and go to state 109

state 111

    (29) varsfuncb -> id COMMA . varsfuncb
    (29) varsfuncb -> . id COMMA varsfuncb
    (30) varsfuncb -> . varsfunc
    (31) varsfuncb -> . id
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK
    (28) varsfunc -> . tipovarfunc varsfuncb
    (13) tipovarfunc -> . INT agregatipo
    (14) tipovarfunc -> . FLOAT agregatipo
    (15) tipovarfunc -> . CHAR agregatipo

    ID              shift and go to state 28
    INT             shift and go to state 55
    FLOAT           shift and go to state 56
    CHAR            shift and go to state 57

    id                             shift and go to state 72
    varsfuncb                      shift and go to state 147
    varsfunc                       shift and go to state 73
    tipovarfunc                    shift and go to state 54

state 112

    (33) funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .

    PRINCIPAL       reduce using rule 33 (funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb .)


state 113

    (48) bloqueb -> estatuto . bloqueb
    (47) bloqueb -> . RBRACKET helper
    (48) bloqueb -> . estatuto bloqueb
    (111) estatuto -> . asignacion
    (112) estatuto -> . funcionvoid
    (113) estatuto -> . retorno
    (114) estatuto -> . lee
    (115) estatuto -> . escritura
    (116) estatuto -> . decision
    (117) estatuto -> . repeticioncond
    (118) estatuto -> . repeticionnocond
    (119) estatuto -> . expresion
    (53) asignacion -> . ID EQUAL asignacionb
    (54) asignacion -> . ID asign EQUAL asignacionb
    (59) funcionvoid -> . ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (57) retorno -> . REGRESA LPAREN expresion retn RPAREN SEMICOL
    (63) lee -> . LEE LPAREN id leeb
    (66) escritura -> . ESCRIBE LPAREN expresion prin1 escriturab
    (70) decision -> . SI LPAREN expresion pn1 RPAREN ENTONCES decisionb
    (76) repeticioncond -> . MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3
    (80) repeticionnocond -> . DESDE id EQUAL exp HASTA exp HACER bloque
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    RBRACKET        shift and go to state 115
    ID              shift and go to state 92
    REGRESA         shift and go to state 94
    LEE             shift and go to state 95
    ESCRIBE         shift and go to state 96
    SI              shift and go to state 97
    MIENTRAS        shift and go to state 98
    DESDE           shift and go to state 99
    LPAREN          shift and go to state 93
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    estatuto                       shift and go to state 113
    bloqueb                        shift and go to state 148
    asignacion                     shift and go to state 83
    funcionvoid                    shift and go to state 84
    retorno                        shift and go to state 85
    lee                            shift and go to state 86
    escritura                      shift and go to state 87
    decision                       shift and go to state 88
    repeticioncond                 shift and go to state 89
    repeticionnocond               shift and go to state 90
    expresion                      shift and go to state 91
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 114

    (45) bloque -> LBRACKET estatuto bloqueb .

    $end            reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    FUNCION         reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    PRINCIPAL       reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    SINO            reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    RBRACKET        reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    ID              reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    REGRESA         reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    LEE             reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    ESCRIBE         reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    SI              reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    MIENTRAS        reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    DESDE           reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    LPAREN          reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    PLUS            reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    MINUS           reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    NUMBER          reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    CTEF            reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    CTEC            reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)
    STRING          reduce using rule 45 (bloque -> LBRACKET estatuto bloqueb .)


state 115

    (47) bloqueb -> RBRACKET . helper
    (49) helper -> . empty
    (120) empty -> .

    $end            reduce using rule 120 (empty -> .)
    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)
    SINO            reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    REGRESA         reduce using rule 120 (empty -> .)
    LEE             reduce using rule 120 (empty -> .)
    ESCRIBE         reduce using rule 120 (empty -> .)
    SI              reduce using rule 120 (empty -> .)
    MIENTRAS        reduce using rule 120 (empty -> .)
    DESDE           reduce using rule 120 (empty -> .)
    LPAREN          reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)

    helper                         shift and go to state 149
    empty                          shift and go to state 150

state 116

    (53) asignacion -> ID EQUAL . asignacionb
    (55) asignacionb -> . expresion SEMICOL
    (56) asignacionb -> . ID asign SEMICOL
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    ID              shift and go to state 151
    LPAREN          shift and go to state 93
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    asignacionb                    shift and go to state 152
    expresion                      shift and go to state 153
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 117

    (54) asignacion -> ID asign . EQUAL asignacionb
    (107) factor -> ID asign .

    EQUAL           shift and go to state 154
    TIMES           reduce using rule 107 (factor -> ID asign .)
    DIVIDE          reduce using rule 107 (factor -> ID asign .)
    PLUS            reduce using rule 107 (factor -> ID asign .)
    MINUS           reduce using rule 107 (factor -> ID asign .)
    GTHAN           reduce using rule 107 (factor -> ID asign .)
    LTHAN           reduce using rule 107 (factor -> ID asign .)
    EQLOP           reduce using rule 107 (factor -> ID asign .)
    GEQUAL          reduce using rule 107 (factor -> ID asign .)
    LEQUAL          reduce using rule 107 (factor -> ID asign .)
    ABRACKET        reduce using rule 107 (factor -> ID asign .)
    RBRACKET        reduce using rule 107 (factor -> ID asign .)
    ID              reduce using rule 107 (factor -> ID asign .)
    REGRESA         reduce using rule 107 (factor -> ID asign .)
    LEE             reduce using rule 107 (factor -> ID asign .)
    ESCRIBE         reduce using rule 107 (factor -> ID asign .)
    SI              reduce using rule 107 (factor -> ID asign .)
    MIENTRAS        reduce using rule 107 (factor -> ID asign .)
    DESDE           reduce using rule 107 (factor -> ID asign .)
    LPAREN          reduce using rule 107 (factor -> ID asign .)
    NUMBER          reduce using rule 107 (factor -> ID asign .)
    CTEF            reduce using rule 107 (factor -> ID asign .)
    CTEC            reduce using rule 107 (factor -> ID asign .)
    STRING          reduce using rule 107 (factor -> ID asign .)


state 118

    (59) funcionvoid -> ID LPAREN . fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL
    (103) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (60) fnvn1 -> . empty
    (108) llamadafun -> . empty
    (120) empty -> .

    LPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)

    fnvn1                          shift and go to state 155
    llamadafun                     shift and go to state 156
    empty                          shift and go to state 157

state 119

    (50) asign -> LBRACK . expresion RBRACK
    (51) asign -> LBRACK . CTEI RBRACK
    (52) asign -> LBRACK . CTEC RBRACK
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    CTEI            shift and go to state 159
    CTEC            shift and go to state 160
    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    STRING          shift and go to state 65

    expresion                      shift and go to state 158
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 120

    (102) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 161


state 121

    (103) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (107) factor -> ID . asign
    (81) cte -> ID .
    (50) asign -> . LBRACK expresion RBRACK
    (51) asign -> . LBRACK CTEI RBRACK
    (52) asign -> . LBRACK CTEC RBRACK

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 162
    TIMES           reduce using rule 81 (cte -> ID .)
    DIVIDE          reduce using rule 81 (cte -> ID .)
    PLUS            reduce using rule 81 (cte -> ID .)
    MINUS           reduce using rule 81 (cte -> ID .)
    GTHAN           reduce using rule 81 (cte -> ID .)
    LTHAN           reduce using rule 81 (cte -> ID .)
    EQLOP           reduce using rule 81 (cte -> ID .)
    GEQUAL          reduce using rule 81 (cte -> ID .)
    LEQUAL          reduce using rule 81 (cte -> ID .)
    ABRACKET        reduce using rule 81 (cte -> ID .)
    RPAREN          reduce using rule 81 (cte -> ID .)
    RBRACK          reduce using rule 81 (cte -> ID .)
    COMMA           reduce using rule 81 (cte -> ID .)
    RBRACKET        reduce using rule 81 (cte -> ID .)
    ID              reduce using rule 81 (cte -> ID .)
    REGRESA         reduce using rule 81 (cte -> ID .)
    LEE             reduce using rule 81 (cte -> ID .)
    ESCRIBE         reduce using rule 81 (cte -> ID .)
    SI              reduce using rule 81 (cte -> ID .)
    MIENTRAS        reduce using rule 81 (cte -> ID .)
    DESDE           reduce using rule 81 (cte -> ID .)
    NUMBER          reduce using rule 81 (cte -> ID .)
    CTEF            reduce using rule 81 (cte -> ID .)
    CTEC            reduce using rule 81 (cte -> ID .)
    STRING          reduce using rule 81 (cte -> ID .)
    SEMICOL         reduce using rule 81 (cte -> ID .)
    HASTA           reduce using rule 81 (cte -> ID .)
    HACER           reduce using rule 81 (cte -> ID .)
    LBRACK          shift and go to state 119

  ! LPAREN          [ reduce using rule 81 (cte -> ID .) ]

    asign                          shift and go to state 163

state 122

    (57) retorno -> REGRESA LPAREN . expresion retn RPAREN SEMICOL
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 164
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 123

    (63) lee -> LEE LPAREN . id leeb
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK

    ID              shift and go to state 28

    id                             shift and go to state 165

state 124

    (66) escritura -> ESCRIBE LPAREN . expresion prin1 escriturab
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 166
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 125

    (70) decision -> SI LPAREN . expresion pn1 RPAREN ENTONCES decisionb
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 167
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 126

    (76) repeticioncond -> MIENTRAS rcn1 . LPAREN expresion RPAREN HAZ rcn2 bloque rcn3

    LPAREN          shift and go to state 168


state 127

    (77) rcn1 -> empty .

    LPAREN          reduce using rule 77 (rcn1 -> empty .)


state 128

    (80) repeticionnocond -> DESDE id . EQUAL exp HASTA exp HACER bloque

    EQUAL           shift and go to state 169


state 129

    (88) expresion -> exp GTHAN . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 170
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 130

    (89) expresion -> exp LTHAN . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 171
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 131

    (90) expresion -> exp EQLOP . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 172
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 132

    (91) expresion -> exp GEQUAL . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 173
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 133

    (92) expresion -> exp LEQUAL . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 174
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 134

    (93) expresion -> exp ABRACKET . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 175
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 135

    (95) exp -> termino expb .

    GTHAN           reduce using rule 95 (exp -> termino expb .)
    LTHAN           reduce using rule 95 (exp -> termino expb .)
    EQLOP           reduce using rule 95 (exp -> termino expb .)
    GEQUAL          reduce using rule 95 (exp -> termino expb .)
    LEQUAL          reduce using rule 95 (exp -> termino expb .)
    ABRACKET        reduce using rule 95 (exp -> termino expb .)
    RBRACKET        reduce using rule 95 (exp -> termino expb .)
    ID              reduce using rule 95 (exp -> termino expb .)
    REGRESA         reduce using rule 95 (exp -> termino expb .)
    LEE             reduce using rule 95 (exp -> termino expb .)
    ESCRIBE         reduce using rule 95 (exp -> termino expb .)
    SI              reduce using rule 95 (exp -> termino expb .)
    MIENTRAS        reduce using rule 95 (exp -> termino expb .)
    DESDE           reduce using rule 95 (exp -> termino expb .)
    LPAREN          reduce using rule 95 (exp -> termino expb .)
    PLUS            reduce using rule 95 (exp -> termino expb .)
    MINUS           reduce using rule 95 (exp -> termino expb .)
    NUMBER          reduce using rule 95 (exp -> termino expb .)
    CTEF            reduce using rule 95 (exp -> termino expb .)
    CTEC            reduce using rule 95 (exp -> termino expb .)
    STRING          reduce using rule 95 (exp -> termino expb .)
    RPAREN          reduce using rule 95 (exp -> termino expb .)
    SEMICOL         reduce using rule 95 (exp -> termino expb .)
    RBRACK          reduce using rule 95 (exp -> termino expb .)
    COMMA           reduce using rule 95 (exp -> termino expb .)
    HASTA           reduce using rule 95 (exp -> termino expb .)
    HACER           reduce using rule 95 (exp -> termino expb .)


state 136

    (96) expb -> PLUS . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 176
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 137

    (97) expb -> MINUS . exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 177
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 138

    (99) termino -> factor terminob .

    PLUS            reduce using rule 99 (termino -> factor terminob .)
    MINUS           reduce using rule 99 (termino -> factor terminob .)
    GTHAN           reduce using rule 99 (termino -> factor terminob .)
    LTHAN           reduce using rule 99 (termino -> factor terminob .)
    EQLOP           reduce using rule 99 (termino -> factor terminob .)
    GEQUAL          reduce using rule 99 (termino -> factor terminob .)
    LEQUAL          reduce using rule 99 (termino -> factor terminob .)
    ABRACKET        reduce using rule 99 (termino -> factor terminob .)
    RBRACKET        reduce using rule 99 (termino -> factor terminob .)
    ID              reduce using rule 99 (termino -> factor terminob .)
    REGRESA         reduce using rule 99 (termino -> factor terminob .)
    LEE             reduce using rule 99 (termino -> factor terminob .)
    ESCRIBE         reduce using rule 99 (termino -> factor terminob .)
    SI              reduce using rule 99 (termino -> factor terminob .)
    MIENTRAS        reduce using rule 99 (termino -> factor terminob .)
    DESDE           reduce using rule 99 (termino -> factor terminob .)
    LPAREN          reduce using rule 99 (termino -> factor terminob .)
    NUMBER          reduce using rule 99 (termino -> factor terminob .)
    CTEF            reduce using rule 99 (termino -> factor terminob .)
    CTEC            reduce using rule 99 (termino -> factor terminob .)
    STRING          reduce using rule 99 (termino -> factor terminob .)
    RPAREN          reduce using rule 99 (termino -> factor terminob .)
    SEMICOL         reduce using rule 99 (termino -> factor terminob .)
    RBRACK          reduce using rule 99 (termino -> factor terminob .)
    COMMA           reduce using rule 99 (termino -> factor terminob .)
    HASTA           reduce using rule 99 (termino -> factor terminob .)
    HACER           reduce using rule 99 (termino -> factor terminob .)


state 139

    (100) terminob -> TIMES . termino
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    termino                        shift and go to state 178
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 140

    (101) terminob -> DIVIDE . termino
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    termino                        shift and go to state 179
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 141

    (104) factor -> PLUS cte .

    TIMES           reduce using rule 104 (factor -> PLUS cte .)
    DIVIDE          reduce using rule 104 (factor -> PLUS cte .)
    PLUS            reduce using rule 104 (factor -> PLUS cte .)
    MINUS           reduce using rule 104 (factor -> PLUS cte .)
    GTHAN           reduce using rule 104 (factor -> PLUS cte .)
    LTHAN           reduce using rule 104 (factor -> PLUS cte .)
    EQLOP           reduce using rule 104 (factor -> PLUS cte .)
    GEQUAL          reduce using rule 104 (factor -> PLUS cte .)
    LEQUAL          reduce using rule 104 (factor -> PLUS cte .)
    ABRACKET        reduce using rule 104 (factor -> PLUS cte .)
    RBRACKET        reduce using rule 104 (factor -> PLUS cte .)
    ID              reduce using rule 104 (factor -> PLUS cte .)
    REGRESA         reduce using rule 104 (factor -> PLUS cte .)
    LEE             reduce using rule 104 (factor -> PLUS cte .)
    ESCRIBE         reduce using rule 104 (factor -> PLUS cte .)
    SI              reduce using rule 104 (factor -> PLUS cte .)
    MIENTRAS        reduce using rule 104 (factor -> PLUS cte .)
    DESDE           reduce using rule 104 (factor -> PLUS cte .)
    LPAREN          reduce using rule 104 (factor -> PLUS cte .)
    NUMBER          reduce using rule 104 (factor -> PLUS cte .)
    CTEF            reduce using rule 104 (factor -> PLUS cte .)
    CTEC            reduce using rule 104 (factor -> PLUS cte .)
    STRING          reduce using rule 104 (factor -> PLUS cte .)
    RPAREN          reduce using rule 104 (factor -> PLUS cte .)
    SEMICOL         reduce using rule 104 (factor -> PLUS cte .)
    RBRACK          reduce using rule 104 (factor -> PLUS cte .)
    COMMA           reduce using rule 104 (factor -> PLUS cte .)
    HASTA           reduce using rule 104 (factor -> PLUS cte .)
    HACER           reduce using rule 104 (factor -> PLUS cte .)


state 142

    (105) factor -> MINUS cte .

    TIMES           reduce using rule 105 (factor -> MINUS cte .)
    DIVIDE          reduce using rule 105 (factor -> MINUS cte .)
    PLUS            reduce using rule 105 (factor -> MINUS cte .)
    MINUS           reduce using rule 105 (factor -> MINUS cte .)
    GTHAN           reduce using rule 105 (factor -> MINUS cte .)
    LTHAN           reduce using rule 105 (factor -> MINUS cte .)
    EQLOP           reduce using rule 105 (factor -> MINUS cte .)
    GEQUAL          reduce using rule 105 (factor -> MINUS cte .)
    LEQUAL          reduce using rule 105 (factor -> MINUS cte .)
    ABRACKET        reduce using rule 105 (factor -> MINUS cte .)
    RBRACKET        reduce using rule 105 (factor -> MINUS cte .)
    ID              reduce using rule 105 (factor -> MINUS cte .)
    REGRESA         reduce using rule 105 (factor -> MINUS cte .)
    LEE             reduce using rule 105 (factor -> MINUS cte .)
    ESCRIBE         reduce using rule 105 (factor -> MINUS cte .)
    SI              reduce using rule 105 (factor -> MINUS cte .)
    MIENTRAS        reduce using rule 105 (factor -> MINUS cte .)
    DESDE           reduce using rule 105 (factor -> MINUS cte .)
    LPAREN          reduce using rule 105 (factor -> MINUS cte .)
    NUMBER          reduce using rule 105 (factor -> MINUS cte .)
    CTEF            reduce using rule 105 (factor -> MINUS cte .)
    CTEC            reduce using rule 105 (factor -> MINUS cte .)
    STRING          reduce using rule 105 (factor -> MINUS cte .)
    RPAREN          reduce using rule 105 (factor -> MINUS cte .)
    SEMICOL         reduce using rule 105 (factor -> MINUS cte .)
    RBRACK          reduce using rule 105 (factor -> MINUS cte .)
    COMMA           reduce using rule 105 (factor -> MINUS cte .)
    HASTA           reduce using rule 105 (factor -> MINUS cte .)
    HACER           reduce using rule 105 (factor -> MINUS cte .)


state 143

    (40) funcionc -> vars agregacont . bloque reinicio funcion
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 180

state 144

    (43) agregacont -> empty .

    LBRACKET        reduce using rule 43 (agregacont -> empty .)


state 145

    (41) funcionc -> agregacont bloque . reinicio funcion
    (44) reinicio -> . empty
    (120) empty -> .

    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)

    reinicio                       shift and go to state 181
    empty                          shift and go to state 182

state 146

    (38) funcionb -> varsfunc RPAREN testeru funcionc .

    PRINCIPAL       reduce using rule 38 (funcionb -> varsfunc RPAREN testeru funcionc .)


state 147

    (29) varsfuncb -> id COMMA varsfuncb .

    RPAREN          reduce using rule 29 (varsfuncb -> id COMMA varsfuncb .)


state 148

    (48) bloqueb -> estatuto bloqueb .

    $end            reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    FUNCION         reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    PRINCIPAL       reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    SINO            reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    RBRACKET        reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    ID              reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    REGRESA         reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    LEE             reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    ESCRIBE         reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    SI              reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    MIENTRAS        reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    DESDE           reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    LPAREN          reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    PLUS            reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    MINUS           reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    NUMBER          reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    CTEF            reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    CTEC            reduce using rule 48 (bloqueb -> estatuto bloqueb .)
    STRING          reduce using rule 48 (bloqueb -> estatuto bloqueb .)


state 149

    (47) bloqueb -> RBRACKET helper .

    $end            reduce using rule 47 (bloqueb -> RBRACKET helper .)
    FUNCION         reduce using rule 47 (bloqueb -> RBRACKET helper .)
    PRINCIPAL       reduce using rule 47 (bloqueb -> RBRACKET helper .)
    SINO            reduce using rule 47 (bloqueb -> RBRACKET helper .)
    RBRACKET        reduce using rule 47 (bloqueb -> RBRACKET helper .)
    ID              reduce using rule 47 (bloqueb -> RBRACKET helper .)
    REGRESA         reduce using rule 47 (bloqueb -> RBRACKET helper .)
    LEE             reduce using rule 47 (bloqueb -> RBRACKET helper .)
    ESCRIBE         reduce using rule 47 (bloqueb -> RBRACKET helper .)
    SI              reduce using rule 47 (bloqueb -> RBRACKET helper .)
    MIENTRAS        reduce using rule 47 (bloqueb -> RBRACKET helper .)
    DESDE           reduce using rule 47 (bloqueb -> RBRACKET helper .)
    LPAREN          reduce using rule 47 (bloqueb -> RBRACKET helper .)
    PLUS            reduce using rule 47 (bloqueb -> RBRACKET helper .)
    MINUS           reduce using rule 47 (bloqueb -> RBRACKET helper .)
    NUMBER          reduce using rule 47 (bloqueb -> RBRACKET helper .)
    CTEF            reduce using rule 47 (bloqueb -> RBRACKET helper .)
    CTEC            reduce using rule 47 (bloqueb -> RBRACKET helper .)
    STRING          reduce using rule 47 (bloqueb -> RBRACKET helper .)


state 150

    (49) helper -> empty .

    $end            reduce using rule 49 (helper -> empty .)
    FUNCION         reduce using rule 49 (helper -> empty .)
    PRINCIPAL       reduce using rule 49 (helper -> empty .)
    SINO            reduce using rule 49 (helper -> empty .)
    RBRACKET        reduce using rule 49 (helper -> empty .)
    ID              reduce using rule 49 (helper -> empty .)
    REGRESA         reduce using rule 49 (helper -> empty .)
    LEE             reduce using rule 49 (helper -> empty .)
    ESCRIBE         reduce using rule 49 (helper -> empty .)
    SI              reduce using rule 49 (helper -> empty .)
    MIENTRAS        reduce using rule 49 (helper -> empty .)
    DESDE           reduce using rule 49 (helper -> empty .)
    LPAREN          reduce using rule 49 (helper -> empty .)
    PLUS            reduce using rule 49 (helper -> empty .)
    MINUS           reduce using rule 49 (helper -> empty .)
    NUMBER          reduce using rule 49 (helper -> empty .)
    CTEF            reduce using rule 49 (helper -> empty .)
    CTEC            reduce using rule 49 (helper -> empty .)
    STRING          reduce using rule 49 (helper -> empty .)


state 151

    (56) asignacionb -> ID . asign SEMICOL
    (103) factor -> ID . LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (107) factor -> ID . asign
    (81) cte -> ID .
    (50) asign -> . LBRACK expresion RBRACK
    (51) asign -> . LBRACK CTEI RBRACK
    (52) asign -> . LBRACK CTEC RBRACK

    LPAREN          shift and go to state 162
    TIMES           reduce using rule 81 (cte -> ID .)
    DIVIDE          reduce using rule 81 (cte -> ID .)
    PLUS            reduce using rule 81 (cte -> ID .)
    MINUS           reduce using rule 81 (cte -> ID .)
    GTHAN           reduce using rule 81 (cte -> ID .)
    LTHAN           reduce using rule 81 (cte -> ID .)
    EQLOP           reduce using rule 81 (cte -> ID .)
    GEQUAL          reduce using rule 81 (cte -> ID .)
    LEQUAL          reduce using rule 81 (cte -> ID .)
    ABRACKET        reduce using rule 81 (cte -> ID .)
    SEMICOL         reduce using rule 81 (cte -> ID .)
    LBRACK          shift and go to state 119

    asign                          shift and go to state 183

state 152

    (53) asignacion -> ID EQUAL asignacionb .

    RBRACKET        reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    ID              reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    REGRESA         reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    LEE             reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    ESCRIBE         reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    SI              reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    MIENTRAS        reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    DESDE           reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    LPAREN          reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    PLUS            reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    MINUS           reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    NUMBER          reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    CTEF            reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    CTEC            reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)
    STRING          reduce using rule 53 (asignacion -> ID EQUAL asignacionb .)


state 153

    (55) asignacionb -> expresion . SEMICOL

    SEMICOL         shift and go to state 184


state 154

    (54) asignacion -> ID asign EQUAL . asignacionb
    (55) asignacionb -> . expresion SEMICOL
    (56) asignacionb -> . ID asign SEMICOL
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    ID              shift and go to state 151
    LPAREN          shift and go to state 93
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    asignacionb                    shift and go to state 185
    expresion                      shift and go to state 153
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 155

    (59) funcionvoid -> ID LPAREN fnvn1 . expresion fnvn2 RPAREN fnvn3 SEMICOL
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 186
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 156

    (103) factor -> ID LPAREN llamadafun . expresion llamadafun2 RPAREN llamadafun3
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 187
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 157

    (60) fnvn1 -> empty .
    (108) llamadafun -> empty .

  ! reduce/reduce conflict for LPAREN resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for ID resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for PLUS resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for NUMBER resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEF resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for CTEC resolved using rule 60 (fnvn1 -> empty .)
  ! reduce/reduce conflict for STRING resolved using rule 60 (fnvn1 -> empty .)
    LPAREN          reduce using rule 60 (fnvn1 -> empty .)
    ID              reduce using rule 60 (fnvn1 -> empty .)
    PLUS            reduce using rule 60 (fnvn1 -> empty .)
    MINUS           reduce using rule 60 (fnvn1 -> empty .)
    NUMBER          reduce using rule 60 (fnvn1 -> empty .)
    CTEF            reduce using rule 60 (fnvn1 -> empty .)
    CTEC            reduce using rule 60 (fnvn1 -> empty .)
    STRING          reduce using rule 60 (fnvn1 -> empty .)

  ! LPAREN          [ reduce using rule 108 (llamadafun -> empty .) ]
  ! ID              [ reduce using rule 108 (llamadafun -> empty .) ]
  ! PLUS            [ reduce using rule 108 (llamadafun -> empty .) ]
  ! MINUS           [ reduce using rule 108 (llamadafun -> empty .) ]
  ! NUMBER          [ reduce using rule 108 (llamadafun -> empty .) ]
  ! CTEF            [ reduce using rule 108 (llamadafun -> empty .) ]
  ! CTEC            [ reduce using rule 108 (llamadafun -> empty .) ]
  ! STRING          [ reduce using rule 108 (llamadafun -> empty .) ]


state 158

    (50) asign -> LBRACK expresion . RBRACK

    RBRACK          shift and go to state 188


state 159

    (51) asign -> LBRACK CTEI . RBRACK

    RBRACK          shift and go to state 189


state 160

    (52) asign -> LBRACK CTEC . RBRACK
    (84) cte -> CTEC .

  ! shift/reduce conflict for RBRACK resolved as shift
    RBRACK          shift and go to state 190
    TIMES           reduce using rule 84 (cte -> CTEC .)
    DIVIDE          reduce using rule 84 (cte -> CTEC .)
    PLUS            reduce using rule 84 (cte -> CTEC .)
    MINUS           reduce using rule 84 (cte -> CTEC .)
    GTHAN           reduce using rule 84 (cte -> CTEC .)
    LTHAN           reduce using rule 84 (cte -> CTEC .)
    EQLOP           reduce using rule 84 (cte -> CTEC .)
    GEQUAL          reduce using rule 84 (cte -> CTEC .)
    LEQUAL          reduce using rule 84 (cte -> CTEC .)
    ABRACKET        reduce using rule 84 (cte -> CTEC .)

  ! RBRACK          [ reduce using rule 84 (cte -> CTEC .) ]


state 161

    (102) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    GTHAN           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    LTHAN           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    EQLOP           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    GEQUAL          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    LEQUAL          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    ABRACKET        reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    ID              reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    REGRESA         reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    LEE             reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    ESCRIBE         reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    SI              reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    MIENTRAS        reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    DESDE           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    LPAREN          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    NUMBER          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    CTEF            reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    CTEC            reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    STRING          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    SEMICOL         reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    RBRACK          reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    HASTA           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)
    HACER           reduce using rule 102 (factor -> LPAREN expresion RPAREN .)


state 162

    (103) factor -> ID LPAREN . llamadafun expresion llamadafun2 RPAREN llamadafun3
    (108) llamadafun -> . empty
    (120) empty -> .

    LPAREN          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)

    llamadafun                     shift and go to state 156
    empty                          shift and go to state 191

state 163

    (107) factor -> ID asign .

    TIMES           reduce using rule 107 (factor -> ID asign .)
    DIVIDE          reduce using rule 107 (factor -> ID asign .)
    PLUS            reduce using rule 107 (factor -> ID asign .)
    MINUS           reduce using rule 107 (factor -> ID asign .)
    GTHAN           reduce using rule 107 (factor -> ID asign .)
    LTHAN           reduce using rule 107 (factor -> ID asign .)
    EQLOP           reduce using rule 107 (factor -> ID asign .)
    GEQUAL          reduce using rule 107 (factor -> ID asign .)
    LEQUAL          reduce using rule 107 (factor -> ID asign .)
    ABRACKET        reduce using rule 107 (factor -> ID asign .)
    RPAREN          reduce using rule 107 (factor -> ID asign .)
    RBRACK          reduce using rule 107 (factor -> ID asign .)
    COMMA           reduce using rule 107 (factor -> ID asign .)
    RBRACKET        reduce using rule 107 (factor -> ID asign .)
    ID              reduce using rule 107 (factor -> ID asign .)
    REGRESA         reduce using rule 107 (factor -> ID asign .)
    LEE             reduce using rule 107 (factor -> ID asign .)
    ESCRIBE         reduce using rule 107 (factor -> ID asign .)
    SI              reduce using rule 107 (factor -> ID asign .)
    MIENTRAS        reduce using rule 107 (factor -> ID asign .)
    DESDE           reduce using rule 107 (factor -> ID asign .)
    LPAREN          reduce using rule 107 (factor -> ID asign .)
    NUMBER          reduce using rule 107 (factor -> ID asign .)
    CTEF            reduce using rule 107 (factor -> ID asign .)
    CTEC            reduce using rule 107 (factor -> ID asign .)
    STRING          reduce using rule 107 (factor -> ID asign .)
    SEMICOL         reduce using rule 107 (factor -> ID asign .)
    HASTA           reduce using rule 107 (factor -> ID asign .)
    HACER           reduce using rule 107 (factor -> ID asign .)


state 164

    (57) retorno -> REGRESA LPAREN expresion . retn RPAREN SEMICOL
    (58) retn -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)

    retn                           shift and go to state 192
    empty                          shift and go to state 193

state 165

    (63) lee -> LEE LPAREN id . leeb
    (64) leeb -> . RPAREN SEMICOL
    (65) leeb -> . COMMA id leeb

    RPAREN          shift and go to state 195
    COMMA           shift and go to state 196

    leeb                           shift and go to state 194

state 166

    (66) escritura -> ESCRIBE LPAREN expresion . prin1 escriturab
    (69) prin1 -> . empty
    (120) empty -> .

    COMMA           reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)

    prin1                          shift and go to state 197
    empty                          shift and go to state 198

state 167

    (70) decision -> SI LPAREN expresion . pn1 RPAREN ENTONCES decisionb
    (71) pn1 -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)

    pn1                            shift and go to state 199
    empty                          shift and go to state 200

state 168

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN . expresion RPAREN HAZ rcn2 bloque rcn3
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 201
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 169

    (80) repeticionnocond -> DESDE id EQUAL . exp HASTA exp HACER bloque
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 202
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 170

    (88) expresion -> exp GTHAN exp .

    RBRACKET        reduce using rule 88 (expresion -> exp GTHAN exp .)
    ID              reduce using rule 88 (expresion -> exp GTHAN exp .)
    REGRESA         reduce using rule 88 (expresion -> exp GTHAN exp .)
    LEE             reduce using rule 88 (expresion -> exp GTHAN exp .)
    ESCRIBE         reduce using rule 88 (expresion -> exp GTHAN exp .)
    SI              reduce using rule 88 (expresion -> exp GTHAN exp .)
    MIENTRAS        reduce using rule 88 (expresion -> exp GTHAN exp .)
    DESDE           reduce using rule 88 (expresion -> exp GTHAN exp .)
    LPAREN          reduce using rule 88 (expresion -> exp GTHAN exp .)
    PLUS            reduce using rule 88 (expresion -> exp GTHAN exp .)
    MINUS           reduce using rule 88 (expresion -> exp GTHAN exp .)
    NUMBER          reduce using rule 88 (expresion -> exp GTHAN exp .)
    CTEF            reduce using rule 88 (expresion -> exp GTHAN exp .)
    CTEC            reduce using rule 88 (expresion -> exp GTHAN exp .)
    STRING          reduce using rule 88 (expresion -> exp GTHAN exp .)
    RPAREN          reduce using rule 88 (expresion -> exp GTHAN exp .)
    SEMICOL         reduce using rule 88 (expresion -> exp GTHAN exp .)
    RBRACK          reduce using rule 88 (expresion -> exp GTHAN exp .)
    COMMA           reduce using rule 88 (expresion -> exp GTHAN exp .)


state 171

    (89) expresion -> exp LTHAN exp .

    RBRACKET        reduce using rule 89 (expresion -> exp LTHAN exp .)
    ID              reduce using rule 89 (expresion -> exp LTHAN exp .)
    REGRESA         reduce using rule 89 (expresion -> exp LTHAN exp .)
    LEE             reduce using rule 89 (expresion -> exp LTHAN exp .)
    ESCRIBE         reduce using rule 89 (expresion -> exp LTHAN exp .)
    SI              reduce using rule 89 (expresion -> exp LTHAN exp .)
    MIENTRAS        reduce using rule 89 (expresion -> exp LTHAN exp .)
    DESDE           reduce using rule 89 (expresion -> exp LTHAN exp .)
    LPAREN          reduce using rule 89 (expresion -> exp LTHAN exp .)
    PLUS            reduce using rule 89 (expresion -> exp LTHAN exp .)
    MINUS           reduce using rule 89 (expresion -> exp LTHAN exp .)
    NUMBER          reduce using rule 89 (expresion -> exp LTHAN exp .)
    CTEF            reduce using rule 89 (expresion -> exp LTHAN exp .)
    CTEC            reduce using rule 89 (expresion -> exp LTHAN exp .)
    STRING          reduce using rule 89 (expresion -> exp LTHAN exp .)
    RPAREN          reduce using rule 89 (expresion -> exp LTHAN exp .)
    SEMICOL         reduce using rule 89 (expresion -> exp LTHAN exp .)
    RBRACK          reduce using rule 89 (expresion -> exp LTHAN exp .)
    COMMA           reduce using rule 89 (expresion -> exp LTHAN exp .)


state 172

    (90) expresion -> exp EQLOP exp .

    RBRACKET        reduce using rule 90 (expresion -> exp EQLOP exp .)
    ID              reduce using rule 90 (expresion -> exp EQLOP exp .)
    REGRESA         reduce using rule 90 (expresion -> exp EQLOP exp .)
    LEE             reduce using rule 90 (expresion -> exp EQLOP exp .)
    ESCRIBE         reduce using rule 90 (expresion -> exp EQLOP exp .)
    SI              reduce using rule 90 (expresion -> exp EQLOP exp .)
    MIENTRAS        reduce using rule 90 (expresion -> exp EQLOP exp .)
    DESDE           reduce using rule 90 (expresion -> exp EQLOP exp .)
    LPAREN          reduce using rule 90 (expresion -> exp EQLOP exp .)
    PLUS            reduce using rule 90 (expresion -> exp EQLOP exp .)
    MINUS           reduce using rule 90 (expresion -> exp EQLOP exp .)
    NUMBER          reduce using rule 90 (expresion -> exp EQLOP exp .)
    CTEF            reduce using rule 90 (expresion -> exp EQLOP exp .)
    CTEC            reduce using rule 90 (expresion -> exp EQLOP exp .)
    STRING          reduce using rule 90 (expresion -> exp EQLOP exp .)
    RPAREN          reduce using rule 90 (expresion -> exp EQLOP exp .)
    SEMICOL         reduce using rule 90 (expresion -> exp EQLOP exp .)
    RBRACK          reduce using rule 90 (expresion -> exp EQLOP exp .)
    COMMA           reduce using rule 90 (expresion -> exp EQLOP exp .)


state 173

    (91) expresion -> exp GEQUAL exp .

    RBRACKET        reduce using rule 91 (expresion -> exp GEQUAL exp .)
    ID              reduce using rule 91 (expresion -> exp GEQUAL exp .)
    REGRESA         reduce using rule 91 (expresion -> exp GEQUAL exp .)
    LEE             reduce using rule 91 (expresion -> exp GEQUAL exp .)
    ESCRIBE         reduce using rule 91 (expresion -> exp GEQUAL exp .)
    SI              reduce using rule 91 (expresion -> exp GEQUAL exp .)
    MIENTRAS        reduce using rule 91 (expresion -> exp GEQUAL exp .)
    DESDE           reduce using rule 91 (expresion -> exp GEQUAL exp .)
    LPAREN          reduce using rule 91 (expresion -> exp GEQUAL exp .)
    PLUS            reduce using rule 91 (expresion -> exp GEQUAL exp .)
    MINUS           reduce using rule 91 (expresion -> exp GEQUAL exp .)
    NUMBER          reduce using rule 91 (expresion -> exp GEQUAL exp .)
    CTEF            reduce using rule 91 (expresion -> exp GEQUAL exp .)
    CTEC            reduce using rule 91 (expresion -> exp GEQUAL exp .)
    STRING          reduce using rule 91 (expresion -> exp GEQUAL exp .)
    RPAREN          reduce using rule 91 (expresion -> exp GEQUAL exp .)
    SEMICOL         reduce using rule 91 (expresion -> exp GEQUAL exp .)
    RBRACK          reduce using rule 91 (expresion -> exp GEQUAL exp .)
    COMMA           reduce using rule 91 (expresion -> exp GEQUAL exp .)


state 174

    (92) expresion -> exp LEQUAL exp .

    RBRACKET        reduce using rule 92 (expresion -> exp LEQUAL exp .)
    ID              reduce using rule 92 (expresion -> exp LEQUAL exp .)
    REGRESA         reduce using rule 92 (expresion -> exp LEQUAL exp .)
    LEE             reduce using rule 92 (expresion -> exp LEQUAL exp .)
    ESCRIBE         reduce using rule 92 (expresion -> exp LEQUAL exp .)
    SI              reduce using rule 92 (expresion -> exp LEQUAL exp .)
    MIENTRAS        reduce using rule 92 (expresion -> exp LEQUAL exp .)
    DESDE           reduce using rule 92 (expresion -> exp LEQUAL exp .)
    LPAREN          reduce using rule 92 (expresion -> exp LEQUAL exp .)
    PLUS            reduce using rule 92 (expresion -> exp LEQUAL exp .)
    MINUS           reduce using rule 92 (expresion -> exp LEQUAL exp .)
    NUMBER          reduce using rule 92 (expresion -> exp LEQUAL exp .)
    CTEF            reduce using rule 92 (expresion -> exp LEQUAL exp .)
    CTEC            reduce using rule 92 (expresion -> exp LEQUAL exp .)
    STRING          reduce using rule 92 (expresion -> exp LEQUAL exp .)
    RPAREN          reduce using rule 92 (expresion -> exp LEQUAL exp .)
    SEMICOL         reduce using rule 92 (expresion -> exp LEQUAL exp .)
    RBRACK          reduce using rule 92 (expresion -> exp LEQUAL exp .)
    COMMA           reduce using rule 92 (expresion -> exp LEQUAL exp .)


state 175

    (93) expresion -> exp ABRACKET exp .

    RBRACKET        reduce using rule 93 (expresion -> exp ABRACKET exp .)
    ID              reduce using rule 93 (expresion -> exp ABRACKET exp .)
    REGRESA         reduce using rule 93 (expresion -> exp ABRACKET exp .)
    LEE             reduce using rule 93 (expresion -> exp ABRACKET exp .)
    ESCRIBE         reduce using rule 93 (expresion -> exp ABRACKET exp .)
    SI              reduce using rule 93 (expresion -> exp ABRACKET exp .)
    MIENTRAS        reduce using rule 93 (expresion -> exp ABRACKET exp .)
    DESDE           reduce using rule 93 (expresion -> exp ABRACKET exp .)
    LPAREN          reduce using rule 93 (expresion -> exp ABRACKET exp .)
    PLUS            reduce using rule 93 (expresion -> exp ABRACKET exp .)
    MINUS           reduce using rule 93 (expresion -> exp ABRACKET exp .)
    NUMBER          reduce using rule 93 (expresion -> exp ABRACKET exp .)
    CTEF            reduce using rule 93 (expresion -> exp ABRACKET exp .)
    CTEC            reduce using rule 93 (expresion -> exp ABRACKET exp .)
    STRING          reduce using rule 93 (expresion -> exp ABRACKET exp .)
    RPAREN          reduce using rule 93 (expresion -> exp ABRACKET exp .)
    SEMICOL         reduce using rule 93 (expresion -> exp ABRACKET exp .)
    RBRACK          reduce using rule 93 (expresion -> exp ABRACKET exp .)
    COMMA           reduce using rule 93 (expresion -> exp ABRACKET exp .)


state 176

    (96) expb -> PLUS exp .

    GTHAN           reduce using rule 96 (expb -> PLUS exp .)
    LTHAN           reduce using rule 96 (expb -> PLUS exp .)
    EQLOP           reduce using rule 96 (expb -> PLUS exp .)
    GEQUAL          reduce using rule 96 (expb -> PLUS exp .)
    LEQUAL          reduce using rule 96 (expb -> PLUS exp .)
    ABRACKET        reduce using rule 96 (expb -> PLUS exp .)
    RBRACKET        reduce using rule 96 (expb -> PLUS exp .)
    ID              reduce using rule 96 (expb -> PLUS exp .)
    REGRESA         reduce using rule 96 (expb -> PLUS exp .)
    LEE             reduce using rule 96 (expb -> PLUS exp .)
    ESCRIBE         reduce using rule 96 (expb -> PLUS exp .)
    SI              reduce using rule 96 (expb -> PLUS exp .)
    MIENTRAS        reduce using rule 96 (expb -> PLUS exp .)
    DESDE           reduce using rule 96 (expb -> PLUS exp .)
    LPAREN          reduce using rule 96 (expb -> PLUS exp .)
    PLUS            reduce using rule 96 (expb -> PLUS exp .)
    MINUS           reduce using rule 96 (expb -> PLUS exp .)
    NUMBER          reduce using rule 96 (expb -> PLUS exp .)
    CTEF            reduce using rule 96 (expb -> PLUS exp .)
    CTEC            reduce using rule 96 (expb -> PLUS exp .)
    STRING          reduce using rule 96 (expb -> PLUS exp .)
    RPAREN          reduce using rule 96 (expb -> PLUS exp .)
    SEMICOL         reduce using rule 96 (expb -> PLUS exp .)
    RBRACK          reduce using rule 96 (expb -> PLUS exp .)
    COMMA           reduce using rule 96 (expb -> PLUS exp .)
    HASTA           reduce using rule 96 (expb -> PLUS exp .)
    HACER           reduce using rule 96 (expb -> PLUS exp .)


state 177

    (97) expb -> MINUS exp .

    GTHAN           reduce using rule 97 (expb -> MINUS exp .)
    LTHAN           reduce using rule 97 (expb -> MINUS exp .)
    EQLOP           reduce using rule 97 (expb -> MINUS exp .)
    GEQUAL          reduce using rule 97 (expb -> MINUS exp .)
    LEQUAL          reduce using rule 97 (expb -> MINUS exp .)
    ABRACKET        reduce using rule 97 (expb -> MINUS exp .)
    RBRACKET        reduce using rule 97 (expb -> MINUS exp .)
    ID              reduce using rule 97 (expb -> MINUS exp .)
    REGRESA         reduce using rule 97 (expb -> MINUS exp .)
    LEE             reduce using rule 97 (expb -> MINUS exp .)
    ESCRIBE         reduce using rule 97 (expb -> MINUS exp .)
    SI              reduce using rule 97 (expb -> MINUS exp .)
    MIENTRAS        reduce using rule 97 (expb -> MINUS exp .)
    DESDE           reduce using rule 97 (expb -> MINUS exp .)
    LPAREN          reduce using rule 97 (expb -> MINUS exp .)
    PLUS            reduce using rule 97 (expb -> MINUS exp .)
    MINUS           reduce using rule 97 (expb -> MINUS exp .)
    NUMBER          reduce using rule 97 (expb -> MINUS exp .)
    CTEF            reduce using rule 97 (expb -> MINUS exp .)
    CTEC            reduce using rule 97 (expb -> MINUS exp .)
    STRING          reduce using rule 97 (expb -> MINUS exp .)
    RPAREN          reduce using rule 97 (expb -> MINUS exp .)
    SEMICOL         reduce using rule 97 (expb -> MINUS exp .)
    RBRACK          reduce using rule 97 (expb -> MINUS exp .)
    COMMA           reduce using rule 97 (expb -> MINUS exp .)
    HASTA           reduce using rule 97 (expb -> MINUS exp .)
    HACER           reduce using rule 97 (expb -> MINUS exp .)


state 178

    (100) terminob -> TIMES termino .

    PLUS            reduce using rule 100 (terminob -> TIMES termino .)
    MINUS           reduce using rule 100 (terminob -> TIMES termino .)
    GTHAN           reduce using rule 100 (terminob -> TIMES termino .)
    LTHAN           reduce using rule 100 (terminob -> TIMES termino .)
    EQLOP           reduce using rule 100 (terminob -> TIMES termino .)
    GEQUAL          reduce using rule 100 (terminob -> TIMES termino .)
    LEQUAL          reduce using rule 100 (terminob -> TIMES termino .)
    ABRACKET        reduce using rule 100 (terminob -> TIMES termino .)
    RBRACKET        reduce using rule 100 (terminob -> TIMES termino .)
    ID              reduce using rule 100 (terminob -> TIMES termino .)
    REGRESA         reduce using rule 100 (terminob -> TIMES termino .)
    LEE             reduce using rule 100 (terminob -> TIMES termino .)
    ESCRIBE         reduce using rule 100 (terminob -> TIMES termino .)
    SI              reduce using rule 100 (terminob -> TIMES termino .)
    MIENTRAS        reduce using rule 100 (terminob -> TIMES termino .)
    DESDE           reduce using rule 100 (terminob -> TIMES termino .)
    LPAREN          reduce using rule 100 (terminob -> TIMES termino .)
    NUMBER          reduce using rule 100 (terminob -> TIMES termino .)
    CTEF            reduce using rule 100 (terminob -> TIMES termino .)
    CTEC            reduce using rule 100 (terminob -> TIMES termino .)
    STRING          reduce using rule 100 (terminob -> TIMES termino .)
    RPAREN          reduce using rule 100 (terminob -> TIMES termino .)
    SEMICOL         reduce using rule 100 (terminob -> TIMES termino .)
    RBRACK          reduce using rule 100 (terminob -> TIMES termino .)
    COMMA           reduce using rule 100 (terminob -> TIMES termino .)
    HASTA           reduce using rule 100 (terminob -> TIMES termino .)
    HACER           reduce using rule 100 (terminob -> TIMES termino .)


state 179

    (101) terminob -> DIVIDE termino .

    PLUS            reduce using rule 101 (terminob -> DIVIDE termino .)
    MINUS           reduce using rule 101 (terminob -> DIVIDE termino .)
    GTHAN           reduce using rule 101 (terminob -> DIVIDE termino .)
    LTHAN           reduce using rule 101 (terminob -> DIVIDE termino .)
    EQLOP           reduce using rule 101 (terminob -> DIVIDE termino .)
    GEQUAL          reduce using rule 101 (terminob -> DIVIDE termino .)
    LEQUAL          reduce using rule 101 (terminob -> DIVIDE termino .)
    ABRACKET        reduce using rule 101 (terminob -> DIVIDE termino .)
    RBRACKET        reduce using rule 101 (terminob -> DIVIDE termino .)
    ID              reduce using rule 101 (terminob -> DIVIDE termino .)
    REGRESA         reduce using rule 101 (terminob -> DIVIDE termino .)
    LEE             reduce using rule 101 (terminob -> DIVIDE termino .)
    ESCRIBE         reduce using rule 101 (terminob -> DIVIDE termino .)
    SI              reduce using rule 101 (terminob -> DIVIDE termino .)
    MIENTRAS        reduce using rule 101 (terminob -> DIVIDE termino .)
    DESDE           reduce using rule 101 (terminob -> DIVIDE termino .)
    LPAREN          reduce using rule 101 (terminob -> DIVIDE termino .)
    NUMBER          reduce using rule 101 (terminob -> DIVIDE termino .)
    CTEF            reduce using rule 101 (terminob -> DIVIDE termino .)
    CTEC            reduce using rule 101 (terminob -> DIVIDE termino .)
    STRING          reduce using rule 101 (terminob -> DIVIDE termino .)
    RPAREN          reduce using rule 101 (terminob -> DIVIDE termino .)
    SEMICOL         reduce using rule 101 (terminob -> DIVIDE termino .)
    RBRACK          reduce using rule 101 (terminob -> DIVIDE termino .)
    COMMA           reduce using rule 101 (terminob -> DIVIDE termino .)
    HASTA           reduce using rule 101 (terminob -> DIVIDE termino .)
    HACER           reduce using rule 101 (terminob -> DIVIDE termino .)


state 180

    (40) funcionc -> vars agregacont bloque . reinicio funcion
    (44) reinicio -> . empty
    (120) empty -> .

    FUNCION         reduce using rule 120 (empty -> .)
    PRINCIPAL       reduce using rule 120 (empty -> .)

    reinicio                       shift and go to state 203
    empty                          shift and go to state 182

state 181

    (41) funcionc -> agregacont bloque reinicio . funcion
    (32) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (33) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (34) funcion -> . empty
    (120) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 120 (empty -> .)

    funcion                        shift and go to state 204
    empty                          shift and go to state 13

state 182

    (44) reinicio -> empty .

    FUNCION         reduce using rule 44 (reinicio -> empty .)
    PRINCIPAL       reduce using rule 44 (reinicio -> empty .)


state 183

    (56) asignacionb -> ID asign . SEMICOL
    (107) factor -> ID asign .

  ! shift/reduce conflict for SEMICOL resolved as shift
    SEMICOL         shift and go to state 205
    TIMES           reduce using rule 107 (factor -> ID asign .)
    DIVIDE          reduce using rule 107 (factor -> ID asign .)
    PLUS            reduce using rule 107 (factor -> ID asign .)
    MINUS           reduce using rule 107 (factor -> ID asign .)
    GTHAN           reduce using rule 107 (factor -> ID asign .)
    LTHAN           reduce using rule 107 (factor -> ID asign .)
    EQLOP           reduce using rule 107 (factor -> ID asign .)
    GEQUAL          reduce using rule 107 (factor -> ID asign .)
    LEQUAL          reduce using rule 107 (factor -> ID asign .)
    ABRACKET        reduce using rule 107 (factor -> ID asign .)

  ! SEMICOL         [ reduce using rule 107 (factor -> ID asign .) ]


state 184

    (55) asignacionb -> expresion SEMICOL .

    RBRACKET        reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    ID              reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    REGRESA         reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    LEE             reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    ESCRIBE         reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    SI              reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    MIENTRAS        reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    DESDE           reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    LPAREN          reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    PLUS            reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    MINUS           reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    NUMBER          reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    CTEF            reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    CTEC            reduce using rule 55 (asignacionb -> expresion SEMICOL .)
    STRING          reduce using rule 55 (asignacionb -> expresion SEMICOL .)


state 185

    (54) asignacion -> ID asign EQUAL asignacionb .

    RBRACKET        reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    ID              reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    REGRESA         reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    LEE             reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    ESCRIBE         reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    SI              reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    MIENTRAS        reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    DESDE           reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    LPAREN          reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    PLUS            reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    MINUS           reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    NUMBER          reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    CTEF            reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    CTEC            reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)
    STRING          reduce using rule 54 (asignacion -> ID asign EQUAL asignacionb .)


state 186

    (59) funcionvoid -> ID LPAREN fnvn1 expresion . fnvn2 RPAREN fnvn3 SEMICOL
    (61) fnvn2 -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)

    fnvn2                          shift and go to state 206
    empty                          shift and go to state 207

state 187

    (103) factor -> ID LPAREN llamadafun expresion . llamadafun2 RPAREN llamadafun3
    (109) llamadafun2 -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)

    llamadafun2                    shift and go to state 208
    empty                          shift and go to state 209

state 188

    (50) asign -> LBRACK expresion RBRACK .

    EQUAL           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    TIMES           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    DIVIDE          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    PLUS            reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    MINUS           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    GTHAN           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    LTHAN           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    EQLOP           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    GEQUAL          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    LEQUAL          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    ABRACKET        reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    RBRACKET        reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    ID              reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    REGRESA         reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    LEE             reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    ESCRIBE         reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    SI              reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    MIENTRAS        reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    DESDE           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    LPAREN          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    NUMBER          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    CTEF            reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    CTEC            reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    STRING          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    RPAREN          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    RBRACK          reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    COMMA           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    SEMICOL         reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    HASTA           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)
    HACER           reduce using rule 50 (asign -> LBRACK expresion RBRACK .)


state 189

    (51) asign -> LBRACK CTEI RBRACK .

    EQUAL           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    TIMES           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    DIVIDE          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    PLUS            reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    MINUS           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    GTHAN           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    LTHAN           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    EQLOP           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    GEQUAL          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    LEQUAL          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    ABRACKET        reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    RBRACKET        reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    ID              reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    REGRESA         reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    LEE             reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    ESCRIBE         reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    SI              reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    MIENTRAS        reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    DESDE           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    LPAREN          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    NUMBER          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    CTEF            reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    CTEC            reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    STRING          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    RPAREN          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    RBRACK          reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    COMMA           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    SEMICOL         reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    HASTA           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)
    HACER           reduce using rule 51 (asign -> LBRACK CTEI RBRACK .)


state 190

    (52) asign -> LBRACK CTEC RBRACK .

    EQUAL           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    TIMES           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    DIVIDE          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    PLUS            reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    MINUS           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    GTHAN           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    LTHAN           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    EQLOP           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    GEQUAL          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    LEQUAL          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    ABRACKET        reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    RBRACKET        reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    ID              reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    REGRESA         reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    LEE             reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    ESCRIBE         reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    SI              reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    MIENTRAS        reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    DESDE           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    LPAREN          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    NUMBER          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    CTEF            reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    CTEC            reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    STRING          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    RPAREN          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    RBRACK          reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    COMMA           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    SEMICOL         reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    HASTA           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)
    HACER           reduce using rule 52 (asign -> LBRACK CTEC RBRACK .)


state 191

    (108) llamadafun -> empty .

    LPAREN          reduce using rule 108 (llamadafun -> empty .)
    ID              reduce using rule 108 (llamadafun -> empty .)
    PLUS            reduce using rule 108 (llamadafun -> empty .)
    MINUS           reduce using rule 108 (llamadafun -> empty .)
    NUMBER          reduce using rule 108 (llamadafun -> empty .)
    CTEF            reduce using rule 108 (llamadafun -> empty .)
    CTEC            reduce using rule 108 (llamadafun -> empty .)
    STRING          reduce using rule 108 (llamadafun -> empty .)


state 192

    (57) retorno -> REGRESA LPAREN expresion retn . RPAREN SEMICOL

    RPAREN          shift and go to state 210


state 193

    (58) retn -> empty .

    RPAREN          reduce using rule 58 (retn -> empty .)


state 194

    (63) lee -> LEE LPAREN id leeb .

    RBRACKET        reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    ID              reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    REGRESA         reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    LEE             reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    ESCRIBE         reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    SI              reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    MIENTRAS        reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    DESDE           reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    LPAREN          reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    PLUS            reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    MINUS           reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    NUMBER          reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    CTEF            reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    CTEC            reduce using rule 63 (lee -> LEE LPAREN id leeb .)
    STRING          reduce using rule 63 (lee -> LEE LPAREN id leeb .)


state 195

    (64) leeb -> RPAREN . SEMICOL

    SEMICOL         shift and go to state 211


state 196

    (65) leeb -> COMMA . id leeb
    (8) id -> . ID agregavar
    (9) id -> . ID agregavar LBRACK cte RBRACK

    ID              shift and go to state 28

    id                             shift and go to state 212

state 197

    (66) escritura -> ESCRIBE LPAREN expresion prin1 . escriturab
    (67) escriturab -> . COMMA expresion prin1 escriturab
    (68) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 214
    RPAREN          shift and go to state 215

    escriturab                     shift and go to state 213

state 198

    (69) prin1 -> empty .

    COMMA           reduce using rule 69 (prin1 -> empty .)
    RPAREN          reduce using rule 69 (prin1 -> empty .)


state 199

    (70) decision -> SI LPAREN expresion pn1 . RPAREN ENTONCES decisionb

    RPAREN          shift and go to state 216


state 200

    (71) pn1 -> empty .

    RPAREN          reduce using rule 71 (pn1 -> empty .)


state 201

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN expresion . RPAREN HAZ rcn2 bloque rcn3

    RPAREN          shift and go to state 217


state 202

    (80) repeticionnocond -> DESDE id EQUAL exp . HASTA exp HACER bloque

    HASTA           shift and go to state 218


state 203

    (40) funcionc -> vars agregacont bloque reinicio . funcion
    (32) funcion -> . FUNCION aux2 ID LPAREN funcionb
    (33) funcion -> . FUNCION aux2 tipofun ID agregafunc LPAREN funcionb
    (34) funcion -> . empty
    (120) empty -> .

    FUNCION         shift and go to state 12
    PRINCIPAL       reduce using rule 120 (empty -> .)

    funcion                        shift and go to state 219
    empty                          shift and go to state 13

state 204

    (41) funcionc -> agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 41 (funcionc -> agregacont bloque reinicio funcion .)


state 205

    (56) asignacionb -> ID asign SEMICOL .

    RBRACKET        reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    ID              reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    REGRESA         reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    LEE             reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    ESCRIBE         reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    SI              reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    MIENTRAS        reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    DESDE           reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    LPAREN          reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    PLUS            reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    MINUS           reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    NUMBER          reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    CTEF            reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    CTEC            reduce using rule 56 (asignacionb -> ID asign SEMICOL .)
    STRING          reduce using rule 56 (asignacionb -> ID asign SEMICOL .)


state 206

    (59) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 . RPAREN fnvn3 SEMICOL

    RPAREN          shift and go to state 220


state 207

    (61) fnvn2 -> empty .

    RPAREN          reduce using rule 61 (fnvn2 -> empty .)


state 208

    (103) factor -> ID LPAREN llamadafun expresion llamadafun2 . RPAREN llamadafun3

    RPAREN          shift and go to state 221


state 209

    (109) llamadafun2 -> empty .

    RPAREN          reduce using rule 109 (llamadafun2 -> empty .)


state 210

    (57) retorno -> REGRESA LPAREN expresion retn RPAREN . SEMICOL

    SEMICOL         shift and go to state 222


state 211

    (64) leeb -> RPAREN SEMICOL .

    RBRACKET        reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    ID              reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    REGRESA         reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    LEE             reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    SI              reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    DESDE           reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    LPAREN          reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    PLUS            reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    MINUS           reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    NUMBER          reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    CTEF            reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    CTEC            reduce using rule 64 (leeb -> RPAREN SEMICOL .)
    STRING          reduce using rule 64 (leeb -> RPAREN SEMICOL .)


state 212

    (65) leeb -> COMMA id . leeb
    (64) leeb -> . RPAREN SEMICOL
    (65) leeb -> . COMMA id leeb

    RPAREN          shift and go to state 195
    COMMA           shift and go to state 196

    leeb                           shift and go to state 223

state 213

    (66) escritura -> ESCRIBE LPAREN expresion prin1 escriturab .

    RBRACKET        reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ID              reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    REGRESA         reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LEE             reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    SI              reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    DESDE           reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    LPAREN          reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    PLUS            reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    MINUS           reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    NUMBER          reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEF            reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    CTEC            reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)
    STRING          reduce using rule 66 (escritura -> ESCRIBE LPAREN expresion prin1 escriturab .)


state 214

    (67) escriturab -> COMMA . expresion prin1 escriturab
    (87) expresion -> . exp
    (88) expresion -> . exp GTHAN exp
    (89) expresion -> . exp LTHAN exp
    (90) expresion -> . exp EQLOP exp
    (91) expresion -> . exp GEQUAL exp
    (92) expresion -> . exp LEQUAL exp
    (93) expresion -> . exp ABRACKET exp
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    expresion                      shift and go to state 224
    exp                            shift and go to state 100
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 215

    (68) escriturab -> RPAREN . SEMICOL

    SEMICOL         shift and go to state 225


state 216

    (70) decision -> SI LPAREN expresion pn1 RPAREN . ENTONCES decisionb

    ENTONCES        shift and go to state 226


state 217

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN . HAZ rcn2 bloque rcn3

    HAZ             shift and go to state 227


state 218

    (80) repeticionnocond -> DESDE id EQUAL exp HASTA . exp HACER bloque
    (94) exp -> . termino
    (95) exp -> . termino expb
    (98) termino -> . factor
    (99) termino -> . factor terminob
    (102) factor -> . LPAREN expresion RPAREN
    (103) factor -> . ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3
    (104) factor -> . PLUS cte
    (105) factor -> . MINUS cte
    (106) factor -> . cte
    (107) factor -> . ID asign
    (81) cte -> . ID
    (82) cte -> . NUMBER saveconst
    (83) cte -> . CTEF
    (84) cte -> . CTEC
    (85) cte -> . STRING

    LPAREN          shift and go to state 93
    ID              shift and go to state 121
    PLUS            shift and go to state 103
    MINUS           shift and go to state 105
    NUMBER          shift and go to state 62
    CTEF            shift and go to state 63
    CTEC            shift and go to state 64
    STRING          shift and go to state 65

    exp                            shift and go to state 228
    termino                        shift and go to state 101
    factor                         shift and go to state 102
    cte                            shift and go to state 104

state 219

    (40) funcionc -> vars agregacont bloque reinicio funcion .

    PRINCIPAL       reduce using rule 40 (funcionc -> vars agregacont bloque reinicio funcion .)


state 220

    (59) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN . fnvn3 SEMICOL
    (62) fnvn3 -> . empty
    (120) empty -> .

    SEMICOL         reduce using rule 120 (empty -> .)

    fnvn3                          shift and go to state 229
    empty                          shift and go to state 230

state 221

    (103) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN . llamadafun3
    (110) llamadafun3 -> . empty
    (120) empty -> .

    TIMES           reduce using rule 120 (empty -> .)
    DIVIDE          reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    GTHAN           reduce using rule 120 (empty -> .)
    LTHAN           reduce using rule 120 (empty -> .)
    EQLOP           reduce using rule 120 (empty -> .)
    GEQUAL          reduce using rule 120 (empty -> .)
    LEQUAL          reduce using rule 120 (empty -> .)
    ABRACKET        reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    REGRESA         reduce using rule 120 (empty -> .)
    LEE             reduce using rule 120 (empty -> .)
    ESCRIBE         reduce using rule 120 (empty -> .)
    SI              reduce using rule 120 (empty -> .)
    MIENTRAS        reduce using rule 120 (empty -> .)
    DESDE           reduce using rule 120 (empty -> .)
    LPAREN          reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    SEMICOL         reduce using rule 120 (empty -> .)
    RBRACK          reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    HASTA           reduce using rule 120 (empty -> .)
    HACER           reduce using rule 120 (empty -> .)

    llamadafun3                    shift and go to state 231
    empty                          shift and go to state 232

state 222

    (57) retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .

    RBRACKET        reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ID              reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    REGRESA         reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LEE             reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    SI              reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    DESDE           reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    LPAREN          reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    PLUS            reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    MINUS           reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    NUMBER          reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEF            reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    CTEC            reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)
    STRING          reduce using rule 57 (retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL .)


state 223

    (65) leeb -> COMMA id leeb .

    RBRACKET        reduce using rule 65 (leeb -> COMMA id leeb .)
    ID              reduce using rule 65 (leeb -> COMMA id leeb .)
    REGRESA         reduce using rule 65 (leeb -> COMMA id leeb .)
    LEE             reduce using rule 65 (leeb -> COMMA id leeb .)
    ESCRIBE         reduce using rule 65 (leeb -> COMMA id leeb .)
    SI              reduce using rule 65 (leeb -> COMMA id leeb .)
    MIENTRAS        reduce using rule 65 (leeb -> COMMA id leeb .)
    DESDE           reduce using rule 65 (leeb -> COMMA id leeb .)
    LPAREN          reduce using rule 65 (leeb -> COMMA id leeb .)
    PLUS            reduce using rule 65 (leeb -> COMMA id leeb .)
    MINUS           reduce using rule 65 (leeb -> COMMA id leeb .)
    NUMBER          reduce using rule 65 (leeb -> COMMA id leeb .)
    CTEF            reduce using rule 65 (leeb -> COMMA id leeb .)
    CTEC            reduce using rule 65 (leeb -> COMMA id leeb .)
    STRING          reduce using rule 65 (leeb -> COMMA id leeb .)


state 224

    (67) escriturab -> COMMA expresion . prin1 escriturab
    (69) prin1 -> . empty
    (120) empty -> .

    COMMA           reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)

    prin1                          shift and go to state 233
    empty                          shift and go to state 198

state 225

    (68) escriturab -> RPAREN SEMICOL .

    RBRACKET        reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    ID              reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    REGRESA         reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    LEE             reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    ESCRIBE         reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    SI              reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    MIENTRAS        reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    DESDE           reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    LPAREN          reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    PLUS            reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    MINUS           reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    NUMBER          reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    CTEF            reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    CTEC            reduce using rule 68 (escriturab -> RPAREN SEMICOL .)
    STRING          reduce using rule 68 (escriturab -> RPAREN SEMICOL .)


state 226

    (70) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES . decisionb
    (72) decisionb -> . bloque pn2
    (73) decisionb -> . bloque SINO pn3 bloque pn2
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    decisionb                      shift and go to state 234
    bloque                         shift and go to state 235

state 227

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ . rcn2 bloque rcn3
    (78) rcn2 -> . empty
    (120) empty -> .

    LBRACKET        reduce using rule 120 (empty -> .)

    rcn2                           shift and go to state 236
    empty                          shift and go to state 237

state 228

    (80) repeticionnocond -> DESDE id EQUAL exp HASTA exp . HACER bloque

    HACER           shift and go to state 238


state 229

    (59) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 . SEMICOL

    SEMICOL         shift and go to state 239


state 230

    (62) fnvn3 -> empty .

    SEMICOL         reduce using rule 62 (fnvn3 -> empty .)


state 231

    (103) factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .

    TIMES           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DIVIDE          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    PLUS            reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MINUS           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GTHAN           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LTHAN           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    EQLOP           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    GEQUAL          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEQUAL          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ABRACKET        reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACKET        reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ID              reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    REGRESA         reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LEE             reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    ESCRIBE         reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SI              reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    MIENTRAS        reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    DESDE           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    LPAREN          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    NUMBER          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEF            reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    CTEC            reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    STRING          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RPAREN          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    SEMICOL         reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    RBRACK          reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    COMMA           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HASTA           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)
    HACER           reduce using rule 103 (factor -> ID LPAREN llamadafun expresion llamadafun2 RPAREN llamadafun3 .)


state 232

    (110) llamadafun3 -> empty .

    TIMES           reduce using rule 110 (llamadafun3 -> empty .)
    DIVIDE          reduce using rule 110 (llamadafun3 -> empty .)
    PLUS            reduce using rule 110 (llamadafun3 -> empty .)
    MINUS           reduce using rule 110 (llamadafun3 -> empty .)
    GTHAN           reduce using rule 110 (llamadafun3 -> empty .)
    LTHAN           reduce using rule 110 (llamadafun3 -> empty .)
    EQLOP           reduce using rule 110 (llamadafun3 -> empty .)
    GEQUAL          reduce using rule 110 (llamadafun3 -> empty .)
    LEQUAL          reduce using rule 110 (llamadafun3 -> empty .)
    ABRACKET        reduce using rule 110 (llamadafun3 -> empty .)
    RBRACKET        reduce using rule 110 (llamadafun3 -> empty .)
    ID              reduce using rule 110 (llamadafun3 -> empty .)
    REGRESA         reduce using rule 110 (llamadafun3 -> empty .)
    LEE             reduce using rule 110 (llamadafun3 -> empty .)
    ESCRIBE         reduce using rule 110 (llamadafun3 -> empty .)
    SI              reduce using rule 110 (llamadafun3 -> empty .)
    MIENTRAS        reduce using rule 110 (llamadafun3 -> empty .)
    DESDE           reduce using rule 110 (llamadafun3 -> empty .)
    LPAREN          reduce using rule 110 (llamadafun3 -> empty .)
    NUMBER          reduce using rule 110 (llamadafun3 -> empty .)
    CTEF            reduce using rule 110 (llamadafun3 -> empty .)
    CTEC            reduce using rule 110 (llamadafun3 -> empty .)
    STRING          reduce using rule 110 (llamadafun3 -> empty .)
    RPAREN          reduce using rule 110 (llamadafun3 -> empty .)
    SEMICOL         reduce using rule 110 (llamadafun3 -> empty .)
    RBRACK          reduce using rule 110 (llamadafun3 -> empty .)
    COMMA           reduce using rule 110 (llamadafun3 -> empty .)
    HASTA           reduce using rule 110 (llamadafun3 -> empty .)
    HACER           reduce using rule 110 (llamadafun3 -> empty .)


state 233

    (67) escriturab -> COMMA expresion prin1 . escriturab
    (67) escriturab -> . COMMA expresion prin1 escriturab
    (68) escriturab -> . RPAREN SEMICOL

    COMMA           shift and go to state 214
    RPAREN          shift and go to state 215

    escriturab                     shift and go to state 240

state 234

    (70) decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .

    RBRACKET        reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ID              reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    REGRESA         reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LEE             reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    ESCRIBE         reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    SI              reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MIENTRAS        reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    DESDE           reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    LPAREN          reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    PLUS            reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    MINUS           reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    NUMBER          reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEF            reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    CTEC            reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)
    STRING          reduce using rule 70 (decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb .)


state 235

    (72) decisionb -> bloque . pn2
    (73) decisionb -> bloque . SINO pn3 bloque pn2
    (74) pn2 -> . empty
    (120) empty -> .

    SINO            shift and go to state 242
    RBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    REGRESA         reduce using rule 120 (empty -> .)
    LEE             reduce using rule 120 (empty -> .)
    ESCRIBE         reduce using rule 120 (empty -> .)
    SI              reduce using rule 120 (empty -> .)
    MIENTRAS        reduce using rule 120 (empty -> .)
    DESDE           reduce using rule 120 (empty -> .)
    LPAREN          reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)

    pn2                            shift and go to state 241
    empty                          shift and go to state 243

state 236

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 . bloque rcn3
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 244

state 237

    (78) rcn2 -> empty .

    LBRACKET        reduce using rule 78 (rcn2 -> empty .)


state 238

    (80) repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER . bloque
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 245

state 239

    (59) funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .

    RBRACKET        reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    ID              reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    REGRESA         reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    LEE             reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    ESCRIBE         reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    SI              reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    MIENTRAS        reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    DESDE           reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    LPAREN          reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    PLUS            reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    MINUS           reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    NUMBER          reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    CTEF            reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    CTEC            reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)
    STRING          reduce using rule 59 (funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN fnvn3 SEMICOL .)


state 240

    (67) escriturab -> COMMA expresion prin1 escriturab .

    RBRACKET        reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    ID              reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    REGRESA         reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    LEE             reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    ESCRIBE         reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    SI              reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    MIENTRAS        reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    DESDE           reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    LPAREN          reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    PLUS            reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    MINUS           reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    NUMBER          reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEF            reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    CTEC            reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)
    STRING          reduce using rule 67 (escriturab -> COMMA expresion prin1 escriturab .)


state 241

    (72) decisionb -> bloque pn2 .

    RBRACKET        reduce using rule 72 (decisionb -> bloque pn2 .)
    ID              reduce using rule 72 (decisionb -> bloque pn2 .)
    REGRESA         reduce using rule 72 (decisionb -> bloque pn2 .)
    LEE             reduce using rule 72 (decisionb -> bloque pn2 .)
    ESCRIBE         reduce using rule 72 (decisionb -> bloque pn2 .)
    SI              reduce using rule 72 (decisionb -> bloque pn2 .)
    MIENTRAS        reduce using rule 72 (decisionb -> bloque pn2 .)
    DESDE           reduce using rule 72 (decisionb -> bloque pn2 .)
    LPAREN          reduce using rule 72 (decisionb -> bloque pn2 .)
    PLUS            reduce using rule 72 (decisionb -> bloque pn2 .)
    MINUS           reduce using rule 72 (decisionb -> bloque pn2 .)
    NUMBER          reduce using rule 72 (decisionb -> bloque pn2 .)
    CTEF            reduce using rule 72 (decisionb -> bloque pn2 .)
    CTEC            reduce using rule 72 (decisionb -> bloque pn2 .)
    STRING          reduce using rule 72 (decisionb -> bloque pn2 .)


state 242

    (73) decisionb -> bloque SINO . pn3 bloque pn2
    (75) pn3 -> . empty
    (120) empty -> .

    LBRACKET        reduce using rule 120 (empty -> .)

    pn3                            shift and go to state 246
    empty                          shift and go to state 247

state 243

    (74) pn2 -> empty .

    RBRACKET        reduce using rule 74 (pn2 -> empty .)
    ID              reduce using rule 74 (pn2 -> empty .)
    REGRESA         reduce using rule 74 (pn2 -> empty .)
    LEE             reduce using rule 74 (pn2 -> empty .)
    ESCRIBE         reduce using rule 74 (pn2 -> empty .)
    SI              reduce using rule 74 (pn2 -> empty .)
    MIENTRAS        reduce using rule 74 (pn2 -> empty .)
    DESDE           reduce using rule 74 (pn2 -> empty .)
    LPAREN          reduce using rule 74 (pn2 -> empty .)
    PLUS            reduce using rule 74 (pn2 -> empty .)
    MINUS           reduce using rule 74 (pn2 -> empty .)
    NUMBER          reduce using rule 74 (pn2 -> empty .)
    CTEF            reduce using rule 74 (pn2 -> empty .)
    CTEC            reduce using rule 74 (pn2 -> empty .)
    STRING          reduce using rule 74 (pn2 -> empty .)


state 244

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque . rcn3
    (79) rcn3 -> . empty
    (120) empty -> .

    RBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    REGRESA         reduce using rule 120 (empty -> .)
    LEE             reduce using rule 120 (empty -> .)
    ESCRIBE         reduce using rule 120 (empty -> .)
    SI              reduce using rule 120 (empty -> .)
    MIENTRAS        reduce using rule 120 (empty -> .)
    DESDE           reduce using rule 120 (empty -> .)
    LPAREN          reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)

    rcn3                           shift and go to state 248
    empty                          shift and go to state 249

state 245

    (80) repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .

    RBRACKET        reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    ID              reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    REGRESA         reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    LEE             reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    ESCRIBE         reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    SI              reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    MIENTRAS        reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    DESDE           reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    LPAREN          reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    PLUS            reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    MINUS           reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    NUMBER          reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    CTEF            reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    CTEC            reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)
    STRING          reduce using rule 80 (repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque .)


state 246

    (73) decisionb -> bloque SINO pn3 . bloque pn2
    (45) bloque -> . LBRACKET estatuto bloqueb
    (46) bloque -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 67

    bloque                         shift and go to state 250

state 247

    (75) pn3 -> empty .

    LBRACKET        reduce using rule 75 (pn3 -> empty .)


state 248

    (76) repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .

    RBRACKET        reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ID              reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    REGRESA         reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LEE             reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    ESCRIBE         reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    SI              reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MIENTRAS        reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    DESDE           reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    LPAREN          reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    PLUS            reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    MINUS           reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    NUMBER          reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEF            reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    CTEC            reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)
    STRING          reduce using rule 76 (repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3 .)


state 249

    (79) rcn3 -> empty .

    RBRACKET        reduce using rule 79 (rcn3 -> empty .)
    ID              reduce using rule 79 (rcn3 -> empty .)
    REGRESA         reduce using rule 79 (rcn3 -> empty .)
    LEE             reduce using rule 79 (rcn3 -> empty .)
    ESCRIBE         reduce using rule 79 (rcn3 -> empty .)
    SI              reduce using rule 79 (rcn3 -> empty .)
    MIENTRAS        reduce using rule 79 (rcn3 -> empty .)
    DESDE           reduce using rule 79 (rcn3 -> empty .)
    LPAREN          reduce using rule 79 (rcn3 -> empty .)
    PLUS            reduce using rule 79 (rcn3 -> empty .)
    MINUS           reduce using rule 79 (rcn3 -> empty .)
    NUMBER          reduce using rule 79 (rcn3 -> empty .)
    CTEF            reduce using rule 79 (rcn3 -> empty .)
    CTEC            reduce using rule 79 (rcn3 -> empty .)
    STRING          reduce using rule 79 (rcn3 -> empty .)


state 250

    (73) decisionb -> bloque SINO pn3 bloque . pn2
    (74) pn2 -> . empty
    (120) empty -> .

    RBRACKET        reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    REGRESA         reduce using rule 120 (empty -> .)
    LEE             reduce using rule 120 (empty -> .)
    ESCRIBE         reduce using rule 120 (empty -> .)
    SI              reduce using rule 120 (empty -> .)
    MIENTRAS        reduce using rule 120 (empty -> .)
    DESDE           reduce using rule 120 (empty -> .)
    LPAREN          reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    MINUS           reduce using rule 120 (empty -> .)
    NUMBER          reduce using rule 120 (empty -> .)
    CTEF            reduce using rule 120 (empty -> .)
    CTEC            reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)

    pn2                            shift and go to state 251
    empty                          shift and go to state 243

state 251

    (73) decisionb -> bloque SINO pn3 bloque pn2 .

    RBRACKET        reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ID              reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    REGRESA         reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LEE             reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    ESCRIBE         reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    SI              reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MIENTRAS        reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    DESDE           reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    LPAREN          reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    PLUS            reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    MINUS           reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    NUMBER          reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEF            reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    CTEC            reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)
    STRING          reduce using rule 73 (decisionb -> bloque SINO pn3 bloque pn2 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 92 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 121 resolved as shift
WARNING: shift/reduce conflict for RBRACK in state 160 resolved as shift
WARNING: shift/reduce conflict for SEMICOL in state 183 resolved as shift
WARNING: reduce/reduce conflict in state 157 resolved using rule (fnvn1 -> empty)
WARNING: rejected rule (llamadafun -> empty) in state 157
