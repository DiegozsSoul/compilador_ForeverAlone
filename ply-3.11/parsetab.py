
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABRACKET CHAR COLON COMMA COMMENT CTEC CTEF CTEI CTES DESDE DIVIDE ENTONCES EQLOP EQUAL ESCRIBE FLOAT FUNCION GEQUAL GTHAN HACER HASTA HAZ ID INT LBRACK LBRACKET LEE LEQUAL LPAREN LTHAN MIENTRAS MINUS NUMBER PLUS PRINCIPAL PROGRAMA RBRACK RBRACKET REGRESA RPAREN SEMICOL SI SINO STRING TIMES VAR VOID\n    programa : PROGRAMA agregarfuncmain ID SEMICOL programab\n    \n    programab : vars funcion programac\n    | programac\n    \n    programac : PRINCIPAL  agregarfuncmain2  LPAREN RPAREN prinn bloque\n    \n    prinn : empty\n    \n    agregarfuncmain2 : \n    \n    agregarfuncmain : \n    \n    id : ID agregavar\n    | ID agregavar LBRACK cte RBRACK\n    \n    tipovar : INT agregatipo\n    | FLOAT agregatipo\n    | CHAR agregatipo\n    \n    tipovarfunc : INT agregatipo\n    | FLOAT agregatipo\n    | CHAR agregatipo\n    \n    tipofun : INT \n    | FLOAT\n    | CHAR\n    | VOID\n    \n    agregatipo :\n    \n    vars : VAR varsb\n    \n    varsb : tipovar varsc\n    |  contVReset empty\n    \n    varsc : id COMMA varsc\n    |  id SEMICOL varsb\n    |  empty\n    \n    contVReset : empty\n    \n    varsfunc :  tipovarfunc varsfuncb\n    \n    varsfuncb : id COMMA varsfuncb\n    | varsfunc\n    |  id\n    \n    funcion : FUNCION aux2 ID LPAREN funcionb\n    | FUNCION aux2 tipofun ID agregafunc LPAREN funcionb\n    | empty\n    \n    aux2 : empty\n    \n    agregafunc : empty\n    \n    funcionb : RPAREN testeru funcionc\n    | varsfunc RPAREN testeru funcionc\n    \n    testeru : empty \n    \n    funcionc : vars  agregacont bloque reinicio funcion\n    | agregacont bloque reinicio funcion\n    | empty\n    \n    agregacont : empty\n    \n    reinicio : empty\n    \n    bloque : LBRACKET estatuto bloqueb\n    | LBRACKET RBRACKET\n    \n    bloqueb : RBRACKET helper\n    | estatuto bloqueb\n    \n    helper : empty\n    \n    asign : LBRACK expresion RBRACK\n    | LBRACK CTEI RBRACK\n    | LBRACK CTEC RBRACK\n    \n    asignacion : ID EQUAL asignacionb\n    | ID asign EQUAL asignacionb\t\n    \n    asignacionb : expresion SEMICOL\n    | ID asign SEMICOL\n    \n    retorno : REGRESA LPAREN expresion retn RPAREN SEMICOL\n    \n    retn : empty\n    \n    funcionvoid : ID  LPAREN fnvn1 expresion fnvn2 RPAREN SEMICOL\n    \n    fnvn1 : empty\n    \n    fnvn2 : empty\n    \n    lee : LEE LPAREN id leeb\n    \n    leeb : RPAREN SEMICOL\n    | COMMA id leeb\n    \n    escritura : ESCRIBE LPAREN expresion prin1 escriturab\n    \n    escriturab : COMMA expresion prin1 escriturab\n    | RPAREN SEMICOL\n    \n    prin1 : empty \n    \n    decision : SI LPAREN expresion pn1 RPAREN  ENTONCES decisionb\n    \n    pn1 : empty\n    \n    decisionb : bloque pn2\n    | bloque SINO pn3 bloque pn2\n    \n    pn2 : empty\n    \n    pn3 : empty\n    \n    repeticioncond : MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3\n    \n    rcn1 : empty\n    \n    rcn2 : empty \n    \n    rcn3 : empty\n    \n    repeticionnocond : DESDE id EQUAL exp HASTA exp HACER bloque\n    \n    cte : ID \n    | NUMBER saveconst\n    | CTEF \n    | CTEC\n    | STRING\n    \n    saveconst : empty\n    \n    expresion : exp\n    | exp GTHAN exp\n    | exp LTHAN exp\n    | exp EQLOP exp\n    | exp GEQUAL exp\n    | exp LEQUAL exp\n    | exp ABRACKET exp\n    \n    exp : termino\n    | termino expb\n    \n    expb : PLUS exp\n    | MINUS exp\n    \n    termino : factor\n    | factor terminob\n    \n    terminob : TIMES termino\n    | DIVIDE termino\n    \n    factor : LPAREN expresion RPAREN\n    | ID LPAREN llamadafun expresion RPAREN\n    | PLUS cte\n    | MINUS cte\n    | cte\n    | ID asign\n    \n    llamadafun : empty\n    \n    estatuto : asignacion\n    | funcionvoid\n    | retorno\n    | lee\n    | escritura\n    | decision\n    | repeticioncond\n    | repeticionnocond\n    | expresion\n    empty :agregavar : '
    
_lr_action_items = {'PROGRAMA':([0,],[2,]),'$end':([1,6,8,22,66,82,114,115,148,149,150,],[0,-1,-3,-2,-4,-46,-45,-117,-48,-47,-49,]),'ID':([2,3,12,15,18,19,20,23,24,30,31,32,35,36,37,38,39,40,48,54,55,56,57,60,62,63,64,65,67,74,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,100,101,102,103,104,105,111,113,114,115,116,117,118,119,121,122,123,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,152,154,155,156,157,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,191,194,196,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-7,4,-117,28,-20,-20,-20,34,-35,-10,-11,-12,45,-16,-17,-18,-19,28,60,28,-20,-20,-20,-80,-117,-82,-83,-84,92,-13,-14,-15,-81,-85,92,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,121,28,-86,-93,-97,60,-105,60,28,92,-45,-117,151,-106,-117,121,-80,121,28,121,121,121,121,121,121,121,121,-94,121,121,-98,121,121,-103,-104,-48,-47,-49,-53,151,121,121,-60,-101,-117,-106,121,121,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-107,-62,28,-56,-102,-63,-65,121,121,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'SEMICOL':([4,26,28,42,60,62,63,64,65,78,79,80,100,101,102,104,121,135,138,141,142,151,153,161,163,170,171,172,173,174,175,176,177,178,179,183,188,189,190,195,208,209,214,219,],[5,41,-118,-8,-80,-117,-82,-83,-84,-9,-81,-85,-86,-93,-97,-105,-80,-94,-98,-103,-104,-80,184,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,205,-50,-51,-52,210,-102,220,223,227,]),'VAR':([5,52,68,69,70,110,],[9,-117,9,-39,-117,9,]),'PRINCIPAL':([5,7,9,11,13,14,15,16,17,18,19,20,25,27,29,30,31,32,40,41,46,47,51,52,68,69,70,82,106,109,110,112,114,115,145,146,148,149,150,180,181,182,203,204,218,],[10,-117,-117,10,-34,-21,-117,-117,-27,-20,-20,-20,-22,-26,-23,-10,-11,-12,-117,-117,-24,-25,-32,-117,-117,-39,-117,-46,-37,-42,-117,-33,-45,-117,-117,-38,-48,-47,-49,-117,-117,-44,-117,-41,-40,]),'FUNCION':([7,9,14,15,16,17,18,19,20,25,27,29,30,31,32,40,41,46,47,82,114,115,145,148,149,150,180,181,182,203,],[12,-117,-21,-117,-117,-27,-20,-20,-20,-22,-26,-23,-10,-11,-12,-117,-117,-24,-25,-46,-45,-117,-117,-48,-47,-49,-117,12,-44,12,]),'INT':([9,12,23,24,41,44,54,55,56,57,74,75,76,77,111,],[18,-117,36,-35,18,55,55,-20,-20,-20,-13,-14,-15,55,55,]),'FLOAT':([9,12,23,24,41,44,54,55,56,57,74,75,76,77,111,],[19,-117,37,-35,19,56,56,-20,-20,-20,-13,-14,-15,56,56,]),'CHAR':([9,12,23,24,41,44,54,55,56,57,74,75,76,77,111,],[20,-117,38,-35,20,57,57,-20,-20,-20,-13,-14,-15,57,57,]),'LBRACKET':([9,14,15,16,17,18,19,20,25,27,29,30,31,32,40,41,43,46,47,49,50,52,68,69,70,107,108,109,110,143,144,224,225,231,232,233,236,240,241,],[-117,-21,-117,-117,-27,-20,-20,-20,-22,-26,-23,-10,-11,-12,-117,-117,-117,-24,-25,67,-5,-117,-117,-39,-117,-117,67,-43,-117,67,-43,67,-117,67,-77,67,-117,67,-74,]),'LPAREN':([10,21,34,45,58,59,60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,104,113,114,115,116,117,118,119,121,122,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,151,152,154,155,156,157,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-6,33,44,-117,77,-36,-80,-117,-82,-83,-84,93,-81,-85,93,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,118,93,122,123,124,125,-117,-86,-93,-97,-105,93,-45,-117,93,-106,-117,93,162,93,93,93,168,-76,93,93,93,93,93,93,-94,93,93,-98,93,93,-103,-104,-48,-47,-49,162,-53,93,93,93,-60,-101,-117,-106,93,93,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,93,93,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'VOID':([12,23,24,],[-117,39,-35,]),'COMMA':([26,28,42,60,62,63,64,65,72,78,79,80,100,101,102,104,121,135,138,141,142,161,163,165,166,170,171,172,173,174,175,176,177,178,179,188,189,190,197,198,208,211,222,228,],[40,-118,-8,-80,-117,-82,-83,-84,111,-9,-81,-85,-86,-93,-97,-105,-80,-94,-98,-103,-104,-101,-106,196,-117,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-50,-51,-52,213,-68,-102,196,-117,213,]),'LBRACK':([28,42,92,121,151,],[-118,48,119,119,119,]),'RPAREN':([28,33,42,44,53,60,62,63,64,65,71,72,73,77,78,79,80,100,101,102,104,120,121,135,138,141,142,147,161,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,186,187,188,189,190,192,193,197,198,199,200,201,206,207,208,211,222,228,],[-118,43,-8,52,70,-80,-117,-82,-83,-84,-28,-31,-30,52,-9,-81,-85,-86,-93,-97,-105,161,-80,-94,-98,-103,-104,-29,-101,-106,-117,195,-117,-117,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-117,208,-50,-51,-52,209,-58,214,-68,215,-70,216,219,-61,-102,195,-117,214,]),'EQUAL':([28,42,78,92,117,128,188,189,190,],[-118,-8,-9,116,154,169,-50,-51,-52,]),'NUMBER':([48,60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,102,103,104,105,113,114,115,116,117,118,119,121,122,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,152,154,155,156,157,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[62,-80,-117,-82,-83,-84,62,-81,-85,62,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,62,-86,-93,-97,62,-105,62,62,-45,-117,62,-106,-117,62,-80,62,62,62,62,62,62,62,62,62,-94,62,62,-98,62,62,-103,-104,-48,-47,-49,-53,62,62,62,-60,-101,-117,-106,62,62,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,62,62,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'CTEF':([48,60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,102,103,104,105,113,114,115,116,117,118,119,121,122,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,152,154,155,156,157,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[63,-80,-117,-82,-83,-84,63,-81,-85,63,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,63,-86,-93,-97,63,-105,63,63,-45,-117,63,-106,-117,63,-80,63,63,63,63,63,63,63,63,63,-94,63,63,-98,63,63,-103,-104,-48,-47,-49,-53,63,63,63,-60,-101,-117,-106,63,63,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,63,63,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'CTEC':([48,60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,102,103,104,105,113,114,115,116,117,118,119,121,122,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,152,154,155,156,157,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[64,-80,-117,-82,-83,-84,64,-81,-85,64,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,64,-86,-93,-97,64,-105,64,64,-45,-117,64,-106,-117,160,-80,64,64,64,64,64,64,64,64,64,-94,64,64,-98,64,64,-103,-104,-48,-47,-49,-53,64,64,64,-60,-101,-117,-106,64,64,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,64,64,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'STRING':([48,60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,102,103,104,105,113,114,115,116,117,118,119,121,122,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,152,154,155,156,157,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[65,-80,-117,-82,-83,-84,65,-81,-85,65,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,65,-86,-93,-97,65,-105,65,65,-45,-117,65,-106,-117,65,-80,65,65,65,65,65,65,65,65,65,-94,65,65,-98,65,65,-103,-104,-48,-47,-49,-53,65,65,65,-60,-101,-117,-106,65,65,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,65,65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'RBRACK':([60,61,62,63,64,65,79,80,100,101,102,104,121,135,138,141,142,158,159,160,161,163,170,171,172,173,174,175,176,177,178,179,188,189,190,208,],[-80,78,-117,-82,-83,-84,-81,-85,-86,-93,-97,-105,-80,-94,-98,-103,-104,188,189,190,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-50,-51,-52,-102,]),'TIMES':([60,62,63,64,65,79,80,92,102,104,117,121,141,142,151,160,161,163,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,139,-105,-106,-80,-103,-104,-80,-83,-101,-106,-106,-50,-51,-52,-102,]),'DIVIDE':([60,62,63,64,65,79,80,92,102,104,117,121,141,142,151,160,161,163,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,140,-105,-106,-80,-103,-104,-80,-83,-101,-106,-106,-50,-51,-52,-102,]),'PLUS':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,102,104,113,114,115,116,117,118,119,121,122,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,151,152,154,155,156,157,160,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,103,-81,-85,103,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,103,-86,136,-97,-105,103,-45,-117,103,-106,-117,103,-80,103,103,103,103,103,103,103,103,103,-94,103,103,-98,103,103,-103,-104,-48,-47,-49,-80,-53,103,103,103,-60,-83,-101,-117,-106,103,103,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-106,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,103,103,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'MINUS':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,100,101,102,104,113,114,115,116,117,118,119,121,122,124,125,129,130,131,132,133,134,135,136,137,138,139,140,141,142,148,149,150,151,152,154,155,156,157,160,161,162,163,168,169,170,171,172,173,174,175,176,177,178,179,183,184,185,188,189,190,191,194,205,208,210,212,213,217,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,105,-81,-85,105,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,105,-86,137,-97,-105,105,-45,-117,105,-106,-117,105,-80,105,105,105,105,105,105,105,105,105,-94,105,105,-98,105,105,-103,-104,-48,-47,-49,-80,-53,105,105,105,-60,-83,-101,-117,-106,105,105,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-106,-55,-54,-50,-51,-52,-107,-62,-56,-102,-63,-65,105,105,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'GTHAN':([60,62,63,64,65,79,80,92,100,101,102,104,117,121,135,138,141,142,151,160,161,163,176,177,178,179,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,129,-93,-97,-105,-106,-80,-94,-98,-103,-104,-80,-83,-101,-106,-95,-96,-99,-100,-106,-50,-51,-52,-102,]),'LTHAN':([60,62,63,64,65,79,80,92,100,101,102,104,117,121,135,138,141,142,151,160,161,163,176,177,178,179,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,130,-93,-97,-105,-106,-80,-94,-98,-103,-104,-80,-83,-101,-106,-95,-96,-99,-100,-106,-50,-51,-52,-102,]),'EQLOP':([60,62,63,64,65,79,80,92,100,101,102,104,117,121,135,138,141,142,151,160,161,163,176,177,178,179,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,131,-93,-97,-105,-106,-80,-94,-98,-103,-104,-80,-83,-101,-106,-95,-96,-99,-100,-106,-50,-51,-52,-102,]),'GEQUAL':([60,62,63,64,65,79,80,92,100,101,102,104,117,121,135,138,141,142,151,160,161,163,176,177,178,179,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,132,-93,-97,-105,-106,-80,-94,-98,-103,-104,-80,-83,-101,-106,-95,-96,-99,-100,-106,-50,-51,-52,-102,]),'LEQUAL':([60,62,63,64,65,79,80,92,100,101,102,104,117,121,135,138,141,142,151,160,161,163,176,177,178,179,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,133,-93,-97,-105,-106,-80,-94,-98,-103,-104,-80,-83,-101,-106,-95,-96,-99,-100,-106,-50,-51,-52,-102,]),'ABRACKET':([60,62,63,64,65,79,80,92,100,101,102,104,117,121,135,138,141,142,151,160,161,163,176,177,178,179,183,188,189,190,208,],[-80,-117,-82,-83,-84,-81,-85,-80,134,-93,-97,-105,-106,-80,-94,-98,-103,-104,-80,-83,-101,-106,-95,-96,-99,-100,-106,-50,-51,-52,-102,]),'RBRACKET':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,82,-81,-85,115,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,115,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'REGRESA':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,94,-81,-85,94,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,94,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'LEE':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,95,-81,-85,95,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,95,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'ESCRIBE':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,96,-81,-85,96,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,96,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'SI':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,97,-81,-85,97,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,97,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'MIENTRAS':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,98,-81,-85,98,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,98,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'DESDE':([60,62,63,64,65,67,79,80,81,82,83,84,85,86,87,88,89,90,91,92,100,101,102,104,113,114,115,117,121,135,138,141,142,148,149,150,152,161,163,170,171,172,173,174,175,176,177,178,179,184,185,188,189,190,194,205,208,210,212,220,221,223,227,229,230,234,235,237,238,239,242,243,244,245,],[-80,-117,-82,-83,-84,99,-81,-85,99,-46,-108,-109,-110,-111,-112,-113,-114,-115,-116,-80,-86,-93,-97,-105,99,-45,-117,-106,-80,-94,-98,-103,-104,-48,-47,-49,-53,-101,-106,-87,-88,-89,-90,-91,-92,-95,-96,-99,-100,-55,-54,-50,-51,-52,-62,-56,-102,-63,-65,-57,-64,-67,-59,-69,-117,-66,-71,-73,-117,-79,-75,-78,-117,-72,]),'HASTA':([60,62,63,64,65,79,80,101,102,104,121,135,138,141,142,161,163,176,177,178,179,188,189,190,202,208,],[-80,-117,-82,-83,-84,-81,-85,-93,-97,-105,-80,-94,-98,-103,-104,-101,-106,-95,-96,-99,-100,-50,-51,-52,217,-102,]),'HACER':([60,62,63,64,65,79,80,101,102,104,121,135,138,141,142,161,163,176,177,178,179,188,189,190,208,226,],[-80,-117,-82,-83,-84,-81,-85,-93,-97,-105,-80,-94,-98,-103,-104,-101,-106,-95,-96,-99,-100,-50,-51,-52,-102,233,]),'SINO':([82,114,115,148,149,150,230,],[-46,-45,-117,-48,-47,-49,236,]),'CTEI':([119,],[159,]),'ENTONCES':([215,],[224,]),'HAZ':([216,],[225,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'agregarfuncmain':([2,],[3,]),'programab':([5,],[6,]),'vars':([5,68,110,],[7,107,107,]),'programac':([5,11,],[8,22,]),'funcion':([7,181,203,],[11,204,218,]),'empty':([7,9,12,15,16,40,41,43,45,52,62,68,70,98,107,110,115,118,145,162,164,166,167,180,181,186,203,222,225,230,236,238,244,],[13,17,24,27,29,27,17,50,59,69,80,109,69,127,144,109,150,157,182,191,193,198,200,182,13,207,13,198,232,237,241,243,237,]),'varsb':([9,41,],[14,47,]),'tipovar':([9,41,],[15,15,]),'contVReset':([9,41,],[16,16,]),'agregarfuncmain2':([10,],[21,]),'aux2':([12,],[23,]),'varsc':([15,40,],[25,46,]),'id':([15,40,54,99,111,123,196,],[26,26,72,128,72,165,211,]),'agregatipo':([18,19,20,55,56,57,],[30,31,32,74,75,76,]),'tipofun':([23,],[35,]),'agregavar':([28,],[42,]),'prinn':([43,],[49,]),'funcionb':([44,77,],[51,112,]),'varsfunc':([44,54,77,111,],[53,73,53,73,]),'tipovarfunc':([44,54,77,111,],[54,54,54,54,]),'agregafunc':([45,],[58,]),'cte':([48,67,81,93,103,105,113,116,119,122,124,125,129,130,131,132,133,134,136,137,139,140,154,155,156,168,169,213,217,],[61,104,104,104,141,142,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'bloque':([49,108,143,224,231,233,240,],[66,145,180,230,238,239,244,]),'testeru':([52,70,],[68,110,]),'varsfuncb':([54,111,],[71,147,]),'saveconst':([62,],[79,]),'estatuto':([67,81,113,],[81,113,113,]),'asignacion':([67,81,113,],[83,83,83,]),'funcionvoid':([67,81,113,],[84,84,84,]),'retorno':([67,81,113,],[85,85,85,]),'lee':([67,81,113,],[86,86,86,]),'escritura':([67,81,113,],[87,87,87,]),'decision':([67,81,113,],[88,88,88,]),'repeticioncond':([67,81,113,],[89,89,89,]),'repeticionnocond':([67,81,113,],[90,90,90,]),'expresion':([67,81,93,113,116,119,122,124,125,154,155,156,168,213,],[91,91,120,91,153,158,164,166,167,153,186,187,201,222,]),'exp':([67,81,93,113,116,119,122,124,125,129,130,131,132,133,134,136,137,154,155,156,168,169,213,217,],[100,100,100,100,100,100,100,100,100,170,171,172,173,174,175,176,177,100,100,100,100,202,100,226,]),'termino':([67,81,93,113,116,119,122,124,125,129,130,131,132,133,134,136,137,139,140,154,155,156,168,169,213,217,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,178,179,101,101,101,101,101,101,101,]),'factor':([67,81,93,113,116,119,122,124,125,129,130,131,132,133,134,136,137,139,140,154,155,156,168,169,213,217,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'funcionc':([68,110,],[106,146,]),'agregacont':([68,107,110,],[108,143,108,]),'bloqueb':([81,113,],[114,148,]),'asign':([92,121,151,],[117,163,183,]),'rcn1':([98,],[126,]),'expb':([101,],[135,]),'terminob':([102,],[138,]),'helper':([115,],[149,]),'asignacionb':([116,154,],[152,185,]),'fnvn1':([118,],[155,]),'llamadafun':([118,162,],[156,156,]),'reinicio':([145,180,],[181,203,]),'retn':([164,],[192,]),'leeb':([165,211,],[194,221,]),'prin1':([166,222,],[197,228,]),'pn1':([167,],[199,]),'fnvn2':([186,],[206,]),'escriturab':([197,228,],[212,234,]),'decisionb':([224,],[229,]),'rcn2':([225,],[231,]),'pn2':([230,244,],[235,245,]),'pn3':([236,],[240,]),'rcn3':([238,],[242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAMA agregarfuncmain ID SEMICOL programab','programa',5,'p_programa','foreveralone.py',200),
  ('programab -> vars funcion programac','programab',3,'p_programab','foreveralone.py',204),
  ('programab -> programac','programab',1,'p_programab','foreveralone.py',205),
  ('programac -> PRINCIPAL agregarfuncmain2 LPAREN RPAREN prinn bloque','programac',6,'p_programac','foreveralone.py',209),
  ('prinn -> empty','prinn',1,'p_prinn','foreveralone.py',213),
  ('agregarfuncmain2 -> <empty>','agregarfuncmain2',0,'p_agregafuncmain2','foreveralone.py',222),
  ('agregarfuncmain -> <empty>','agregarfuncmain',0,'p_agregarfuncmain','foreveralone.py',237),
  ('id -> ID agregavar','id',2,'p_id','foreveralone.py',257),
  ('id -> ID agregavar LBRACK cte RBRACK','id',5,'p_id','foreveralone.py',258),
  ('tipovar -> INT agregatipo','tipovar',2,'p_tipovar','foreveralone.py',275),
  ('tipovar -> FLOAT agregatipo','tipovar',2,'p_tipovar','foreveralone.py',276),
  ('tipovar -> CHAR agregatipo','tipovar',2,'p_tipovar','foreveralone.py',277),
  ('tipovarfunc -> INT agregatipo','tipovarfunc',2,'p_tipovarfunc','foreveralone.py',281),
  ('tipovarfunc -> FLOAT agregatipo','tipovarfunc',2,'p_tipovarfunc','foreveralone.py',282),
  ('tipovarfunc -> CHAR agregatipo','tipovarfunc',2,'p_tipovarfunc','foreveralone.py',283),
  ('tipofun -> INT','tipofun',1,'p_tipofun','foreveralone.py',295),
  ('tipofun -> FLOAT','tipofun',1,'p_tipofun','foreveralone.py',296),
  ('tipofun -> CHAR','tipofun',1,'p_tipofun','foreveralone.py',297),
  ('tipofun -> VOID','tipofun',1,'p_tipofun','foreveralone.py',298),
  ('agregatipo -> <empty>','agregatipo',0,'p_agregatipo','foreveralone.py',305),
  ('vars -> VAR varsb','vars',2,'p_vars','foreveralone.py',312),
  ('varsb -> tipovar varsc','varsb',2,'p_varsb','foreveralone.py',317),
  ('varsb -> contVReset empty','varsb',2,'p_varsb','foreveralone.py',318),
  ('varsc -> id COMMA varsc','varsc',3,'p_varsc','foreveralone.py',323),
  ('varsc -> id SEMICOL varsb','varsc',3,'p_varsc','foreveralone.py',324),
  ('varsc -> empty','varsc',1,'p_varsc','foreveralone.py',325),
  ('contVReset -> empty','contVReset',1,'p_contVReset','foreveralone.py',329),
  ('varsfunc -> tipovarfunc varsfuncb','varsfunc',2,'p_varsfunc','foreveralone.py',338),
  ('varsfuncb -> id COMMA varsfuncb','varsfuncb',3,'p_varsfuncb','foreveralone.py',343),
  ('varsfuncb -> varsfunc','varsfuncb',1,'p_varsfuncb','foreveralone.py',344),
  ('varsfuncb -> id','varsfuncb',1,'p_varsfuncb','foreveralone.py',345),
  ('funcion -> FUNCION aux2 ID LPAREN funcionb','funcion',5,'p_funcion','foreveralone.py',350),
  ('funcion -> FUNCION aux2 tipofun ID agregafunc LPAREN funcionb','funcion',7,'p_funcion','foreveralone.py',351),
  ('funcion -> empty','funcion',1,'p_funcion','foreveralone.py',352),
  ('aux2 -> empty','aux2',1,'p_aux2','foreveralone.py',356),
  ('agregafunc -> empty','agregafunc',1,'p_agregafunc','foreveralone.py',375),
  ('funcionb -> RPAREN testeru funcionc','funcionb',3,'p_funcionb','foreveralone.py',390),
  ('funcionb -> varsfunc RPAREN testeru funcionc','funcionb',4,'p_funcionb','foreveralone.py',391),
  ('testeru -> empty','testeru',1,'p_testeru','foreveralone.py',396),
  ('funcionc -> vars agregacont bloque reinicio funcion','funcionc',5,'p_funcionc','foreveralone.py',412),
  ('funcionc -> agregacont bloque reinicio funcion','funcionc',4,'p_funcionc','foreveralone.py',413),
  ('funcionc -> empty','funcionc',1,'p_funcionc','foreveralone.py',414),
  ('agregacont -> empty','agregacont',1,'p_agregacont','foreveralone.py',418),
  ('reinicio -> empty','reinicio',1,'p_reinicioMemoriaVariable','foreveralone.py',427),
  ('bloque -> LBRACKET estatuto bloqueb','bloque',3,'p_bloque','foreveralone.py',445),
  ('bloque -> LBRACKET RBRACKET','bloque',2,'p_bloque','foreveralone.py',446),
  ('bloqueb -> RBRACKET helper','bloqueb',2,'p_bloqueb','foreveralone.py',451),
  ('bloqueb -> estatuto bloqueb','bloqueb',2,'p_bloqueb','foreveralone.py',452),
  ('helper -> empty','helper',1,'p_helper','foreveralone.py',456),
  ('asign -> LBRACK expresion RBRACK','asign',3,'p_asign','foreveralone.py',463),
  ('asign -> LBRACK CTEI RBRACK','asign',3,'p_asign','foreveralone.py',464),
  ('asign -> LBRACK CTEC RBRACK','asign',3,'p_asign','foreveralone.py',465),
  ('asignacion -> ID EQUAL asignacionb','asignacion',3,'p_asignacion','foreveralone.py',469),
  ('asignacion -> ID asign EQUAL asignacionb','asignacion',4,'p_asignacion','foreveralone.py',470),
  ('asignacionb -> expresion SEMICOL','asignacionb',2,'p_asignacionb','foreveralone.py',475),
  ('asignacionb -> ID asign SEMICOL','asignacionb',3,'p_asignacionb','foreveralone.py',476),
  ('retorno -> REGRESA LPAREN expresion retn RPAREN SEMICOL','retorno',6,'p_retorno','foreveralone.py',555),
  ('retn -> empty','retn',1,'p_retn','foreveralone.py',559),
  ('funcionvoid -> ID LPAREN fnvn1 expresion fnvn2 RPAREN SEMICOL','funcionvoid',7,'p_funcionvoid','foreveralone.py',576),
  ('fnvn1 -> empty','fnvn1',1,'p_fnvn1','foreveralone.py',597),
  ('fnvn2 -> empty','fnvn2',1,'p_fnvn2','foreveralone.py',618),
  ('lee -> LEE LPAREN id leeb','lee',4,'p_lee','foreveralone.py',643),
  ('leeb -> RPAREN SEMICOL','leeb',2,'p_leeb','foreveralone.py',647),
  ('leeb -> COMMA id leeb','leeb',3,'p_leeb','foreveralone.py',648),
  ('escritura -> ESCRIBE LPAREN expresion prin1 escriturab','escritura',5,'p_escritura','foreveralone.py',654),
  ('escriturab -> COMMA expresion prin1 escriturab','escriturab',4,'p_escriturab','foreveralone.py',658),
  ('escriturab -> RPAREN SEMICOL','escriturab',2,'p_escriturab','foreveralone.py',659),
  ('prin1 -> empty','prin1',1,'p_prin1','foreveralone.py',665),
  ('decision -> SI LPAREN expresion pn1 RPAREN ENTONCES decisionb','decision',7,'p_decision','foreveralone.py',675),
  ('pn1 -> empty','pn1',1,'p_pn1','foreveralone.py',681),
  ('decisionb -> bloque pn2','decisionb',2,'p_decisionb','foreveralone.py',698),
  ('decisionb -> bloque SINO pn3 bloque pn2','decisionb',5,'p_decisionb','foreveralone.py',699),
  ('pn2 -> empty','pn2',1,'p_pn2','foreveralone.py',705),
  ('pn3 -> empty','pn3',1,'p_pn3','foreveralone.py',711),
  ('repeticioncond -> MIENTRAS rcn1 LPAREN expresion RPAREN HAZ rcn2 bloque rcn3','repeticioncond',9,'p_repeticioncond','foreveralone.py',725),
  ('rcn1 -> empty','rcn1',1,'p_rcn1','foreveralone.py',730),
  ('rcn2 -> empty','rcn2',1,'p_rcn2','foreveralone.py',736),
  ('rcn3 -> empty','rcn3',1,'p_rcn3','foreveralone.py',751),
  ('repeticionnocond -> DESDE id EQUAL exp HASTA exp HACER bloque','repeticionnocond',8,'p_repeticionnocond','foreveralone.py',763),
  ('cte -> ID','cte',1,'p_cte','foreveralone.py',767),
  ('cte -> NUMBER saveconst','cte',2,'p_cte','foreveralone.py',768),
  ('cte -> CTEF','cte',1,'p_cte','foreveralone.py',769),
  ('cte -> CTEC','cte',1,'p_cte','foreveralone.py',770),
  ('cte -> STRING','cte',1,'p_cte','foreveralone.py',771),
  ('saveconst -> empty','saveconst',1,'p_saveconst','foreveralone.py',815),
  ('expresion -> exp','expresion',1,'p_expresion','foreveralone.py',827),
  ('expresion -> exp GTHAN exp','expresion',3,'p_expresion','foreveralone.py',828),
  ('expresion -> exp LTHAN exp','expresion',3,'p_expresion','foreveralone.py',829),
  ('expresion -> exp EQLOP exp','expresion',3,'p_expresion','foreveralone.py',830),
  ('expresion -> exp GEQUAL exp','expresion',3,'p_expresion','foreveralone.py',831),
  ('expresion -> exp LEQUAL exp','expresion',3,'p_expresion','foreveralone.py',832),
  ('expresion -> exp ABRACKET exp','expresion',3,'p_expresion','foreveralone.py',833),
  ('exp -> termino','exp',1,'p_exp','foreveralone.py',838),
  ('exp -> termino expb','exp',2,'p_exp','foreveralone.py',839),
  ('expb -> PLUS exp','expb',2,'p_expb','foreveralone.py',864),
  ('expb -> MINUS exp','expb',2,'p_expb','foreveralone.py',865),
  ('termino -> factor','termino',1,'p_termino','foreveralone.py',899),
  ('termino -> factor terminob','termino',2,'p_termino','foreveralone.py',900),
  ('terminob -> TIMES termino','terminob',2,'p_terminob','foreveralone.py',904),
  ('terminob -> DIVIDE termino','terminob',2,'p_terminob','foreveralone.py',905),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','foreveralone.py',938),
  ('factor -> ID LPAREN llamadafun expresion RPAREN','factor',5,'p_factor','foreveralone.py',939),
  ('factor -> PLUS cte','factor',2,'p_factor','foreveralone.py',940),
  ('factor -> MINUS cte','factor',2,'p_factor','foreveralone.py',941),
  ('factor -> cte','factor',1,'p_factor','foreveralone.py',942),
  ('factor -> ID asign','factor',2,'p_factor','foreveralone.py',943),
  ('llamadafun -> empty','llamadafun',1,'p_llamadafun','foreveralone.py',948),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','foreveralone.py',964),
  ('estatuto -> funcionvoid','estatuto',1,'p_estatuto','foreveralone.py',965),
  ('estatuto -> retorno','estatuto',1,'p_estatuto','foreveralone.py',966),
  ('estatuto -> lee','estatuto',1,'p_estatuto','foreveralone.py',967),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','foreveralone.py',968),
  ('estatuto -> decision','estatuto',1,'p_estatuto','foreveralone.py',969),
  ('estatuto -> repeticioncond','estatuto',1,'p_estatuto','foreveralone.py',970),
  ('estatuto -> repeticionnocond','estatuto',1,'p_estatuto','foreveralone.py',971),
  ('estatuto -> expresion','estatuto',1,'p_estatuto','foreveralone.py',972),
  ('empty -> <empty>','empty',0,'p_empty','foreveralone.py',975),
  ('agregavar -> <empty>','agregavar',0,'p_agregavar','foreveralone.py',978),
]
